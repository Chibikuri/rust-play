{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52","program":"/Users/ryosukesatoh/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","js_sys","--edition=2018","/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=935ef0cc9c54f2b3","-C","extra-filename=-935ef0cc9c54f2b3","--out-dir","/Users/ryosukesatoh/Projects/rust-play/yew-app/target/rls/debug/deps","-L","dependency=/Users/ryosukesatoh/Projects/rust-play/yew-app/target/rls/debug/deps","--extern","wasm_bindgen=/Users/ryosukesatoh/Projects/rust-play/yew-app/target/rls/debug/deps/libwasm_bindgen-99f07d845d3acd21.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/ryosukesatoh/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/ryosukesatoh/Projects/rust-play/yew-app/target/rls/debug/deps/libjs_sys-935ef0cc9c54f2b3.rmeta"},"prelude":{"crate_id":{"name":"js_sys","disambiguator":[12643056319733748626,8609335019026600719]},"crate_root":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src","external_crates":[{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[7439535968655576646,17420488833649705410]}},{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[1949116827220114676,2065912148165510692]}},{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6424123809251651324,10791243255933316672]}},{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11089070161906179638,2253832597208660558]}},{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3666879193032761931,4629784602926728112]}},{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[17557414160303111626,7572947572632644954]}},{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[915848953387719454,11341216537588130533]}},{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4285064400235759547,17176111531075018758]}},{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[6997063163517280748,14486342634155193831]}},{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2053070849310045891,9457326657766539472]}},{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[16492367081693084488,12081229032515817188]}},{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[14000704685499991975,15439018228330051001]}},{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[16882152814081891816,2081400005890767566]}},{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[17412809486977561704,10774188040798205111]}},{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[10299009701328497764,8719717191227013711]}},{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","num":16,"id":{"name":"panic_unwind","disambiguator":[13564088873543153286,4566579444635585591]}},{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","num":17,"id":{"name":"wasm_bindgen","disambiguator":[9546898943627336721,16876295435011995122]}},{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","num":18,"id":{"name":"wasm_bindgen_macro","disambiguator":[716891396996186622,8274965890304654814]}},{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","num":19,"id":{"name":"cfg_if","disambiguator":[8420289586558118857,13192060884594697870]}}],"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":0,"byte_end":253080,"line_start":1,"line_end":5193,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":0,"byte_end":253080,"line_start":1,"line_end":5193,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":188},{"krate":0,"index":190},{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":196},{"krate":0,"index":198},{"krate":0,"index":200},{"krate":0,"index":411},{"krate":0,"index":413},{"krate":0,"index":415},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":202},{"krate":0,"index":278},{"krate":0,"index":283},{"krate":0,"index":288},{"krate":0,"index":291},{"krate":0,"index":294},{"krate":0,"index":297},{"krate":0,"index":300},{"krate":0,"index":303},{"krate":0,"index":306},{"krate":0,"index":309},{"krate":0,"index":312},{"krate":0,"index":315},{"krate":0,"index":318},{"krate":0,"index":321},{"krate":0,"index":324},{"krate":0,"index":327},{"krate":0,"index":330},{"krate":0,"index":333},{"krate":0,"index":336},{"krate":0,"index":339},{"krate":0,"index":342},{"krate":0,"index":345},{"krate":0,"index":348},{"krate":0,"index":351},{"krate":0,"index":354},{"krate":0,"index":357},{"krate":0,"index":360},{"krate":0,"index":363},{"krate":0,"index":366},{"krate":0,"index":369},{"krate":0,"index":372},{"krate":0,"index":375},{"krate":0,"index":378},{"krate":0,"index":381},{"krate":0,"index":384},{"krate":0,"index":387},{"krate":0,"index":390},{"krate":0,"index":393},{"krate":0,"index":396},{"krate":0,"index":399},{"krate":0,"index":402},{"krate":0,"index":405},{"krate":0,"index":408},{"krate":0,"index":424},{"krate":0,"index":428},{"krate":0,"index":431},{"krate":0,"index":22},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":41},{"krate":0,"index":534},{"krate":0,"index":536},{"krate":0,"index":538},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":434},{"krate":0,"index":509},{"krate":0,"index":514},{"krate":0,"index":519},{"krate":0,"index":522},{"krate":0,"index":525},{"krate":0,"index":528},{"krate":0,"index":531},{"krate":0,"index":644},{"krate":0,"index":646},{"krate":0,"index":648},{"krate":0,"index":547},{"krate":0,"index":622},{"krate":0,"index":627},{"krate":0,"index":632},{"krate":0,"index":635},{"krate":0,"index":638},{"krate":0,"index":641},{"krate":0,"index":650},{"krate":0,"index":653},{"krate":0,"index":656},{"krate":0,"index":43},{"krate":0,"index":780},{"krate":0,"index":782},{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":687},{"krate":0,"index":764},{"krate":0,"index":769},{"krate":0,"index":774},{"krate":0,"index":777},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":53},{"krate":0,"index":972},{"krate":0,"index":974},{"krate":0,"index":976},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":791},{"krate":0,"index":866},{"krate":0,"index":871},{"krate":0,"index":876},{"krate":0,"index":879},{"krate":0,"index":882},{"krate":0,"index":885},{"krate":0,"index":888},{"krate":0,"index":891},{"krate":0,"index":894},{"krate":0,"index":897},{"krate":0,"index":900},{"krate":0,"index":903},{"krate":0,"index":906},{"krate":0,"index":909},{"krate":0,"index":912},{"krate":0,"index":915},{"krate":0,"index":918},{"krate":0,"index":921},{"krate":0,"index":924},{"krate":0,"index":927},{"krate":0,"index":930},{"krate":0,"index":933},{"krate":0,"index":936},{"krate":0,"index":939},{"krate":0,"index":942},{"krate":0,"index":945},{"krate":0,"index":948},{"krate":0,"index":951},{"krate":0,"index":954},{"krate":0,"index":957},{"krate":0,"index":960},{"krate":0,"index":963},{"krate":0,"index":966},{"krate":0,"index":969},{"krate":0,"index":1088},{"krate":0,"index":1090},{"krate":0,"index":1092},{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1098},{"krate":0,"index":1099},{"krate":0,"index":985},{"krate":0,"index":1060},{"krate":0,"index":1065},{"krate":0,"index":1070},{"krate":0,"index":1073},{"krate":0,"index":1076},{"krate":0,"index":1079},{"krate":0,"index":1082},{"krate":0,"index":1085},{"krate":0,"index":1199},{"krate":0,"index":1201},{"krate":0,"index":1203},{"krate":0,"index":1205},{"krate":0,"index":1206},{"krate":0,"index":1209},{"krate":0,"index":1210},{"krate":0,"index":1101},{"krate":0,"index":1176},{"krate":0,"index":1181},{"krate":0,"index":1186},{"krate":0,"index":1191},{"krate":0,"index":1196},{"krate":0,"index":1343},{"krate":0,"index":1345},{"krate":0,"index":1347},{"krate":0,"index":1349},{"krate":0,"index":1350},{"krate":0,"index":1353},{"krate":0,"index":1354},{"krate":0,"index":1212},{"krate":0,"index":1288},{"krate":0,"index":1293},{"krate":0,"index":1298},{"krate":0,"index":1301},{"krate":0,"index":1304},{"krate":0,"index":1307},{"krate":0,"index":1310},{"krate":0,"index":1313},{"krate":0,"index":1316},{"krate":0,"index":1319},{"krate":0,"index":1322},{"krate":0,"index":1325},{"krate":0,"index":1328},{"krate":0,"index":1331},{"krate":0,"index":1334},{"krate":0,"index":1337},{"krate":0,"index":1340},{"krate":0,"index":55},{"krate":0,"index":57},{"krate":0,"index":1450},{"krate":0,"index":1452},{"krate":0,"index":1454},{"krate":0,"index":1456},{"krate":0,"index":1457},{"krate":0,"index":1460},{"krate":0,"index":1461},{"krate":0,"index":1356},{"krate":0,"index":1431},{"krate":0,"index":1436},{"krate":0,"index":1441},{"krate":0,"index":1444},{"krate":0,"index":1447},{"krate":0,"index":1572},{"krate":0,"index":1574},{"krate":0,"index":1576},{"krate":0,"index":1578},{"krate":0,"index":1579},{"krate":0,"index":1582},{"krate":0,"index":1583},{"krate":0,"index":1463},{"krate":0,"index":1538},{"krate":0,"index":1543},{"krate":0,"index":1548},{"krate":0,"index":1551},{"krate":0,"index":1554},{"krate":0,"index":1557},{"krate":0,"index":1560},{"krate":0,"index":1563},{"krate":0,"index":1566},{"krate":0,"index":1569},{"krate":0,"index":59},{"krate":0,"index":1585},{"krate":0,"index":1588},{"krate":0,"index":1591},{"krate":0,"index":1673},{"krate":0,"index":1675},{"krate":0,"index":1677},{"krate":0,"index":1594},{"krate":0,"index":1670},{"krate":0,"index":61},{"krate":0,"index":1837},{"krate":0,"index":1839},{"krate":0,"index":1841},{"krate":0,"index":1758},{"krate":0,"index":1834},{"krate":0,"index":63},{"krate":0,"index":67},{"krate":0,"index":70},{"krate":0,"index":72},{"krate":0,"index":77},{"krate":0,"index":81},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":91},{"krate":0,"index":1934},{"krate":0,"index":1936},{"krate":0,"index":1938},{"krate":0,"index":1940},{"krate":0,"index":1941},{"krate":0,"index":1944},{"krate":0,"index":1945},{"krate":0,"index":1843},{"krate":0,"index":1918},{"krate":0,"index":1923},{"krate":0,"index":1928},{"krate":0,"index":1931},{"krate":0,"index":92},{"krate":0,"index":2143},{"krate":0,"index":2145},{"krate":0,"index":2017},{"krate":0,"index":2094},{"krate":0,"index":2099},{"krate":0,"index":2104},{"krate":0,"index":2107},{"krate":0,"index":2110},{"krate":0,"index":2113},{"krate":0,"index":2116},{"krate":0,"index":2119},{"krate":0,"index":2122},{"krate":0,"index":2125},{"krate":0,"index":2128},{"krate":0,"index":2131},{"krate":0,"index":2134},{"krate":0,"index":2137},{"krate":0,"index":2140},{"krate":0,"index":94},{"krate":0,"index":2147},{"krate":0,"index":2149},{"krate":0,"index":2151},{"krate":0,"index":2153},{"krate":0,"index":2155},{"krate":0,"index":2157},{"krate":0,"index":2159},{"krate":0,"index":2161},{"krate":0,"index":2163},{"krate":0,"index":2165},{"krate":0,"index":2167},{"krate":0,"index":2169},{"krate":0,"index":2171},{"krate":0,"index":2173},{"krate":0,"index":2175},{"krate":0,"index":2177},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":2438},{"krate":0,"index":2440},{"krate":0,"index":2442},{"krate":0,"index":2444},{"krate":0,"index":2445},{"krate":0,"index":2448},{"krate":0,"index":2449},{"krate":0,"index":2179},{"krate":0,"index":2254},{"krate":0,"index":2259},{"krate":0,"index":2264},{"krate":0,"index":2267},{"krate":0,"index":2270},{"krate":0,"index":2273},{"krate":0,"index":2276},{"krate":0,"index":2279},{"krate":0,"index":2282},{"krate":0,"index":2285},{"krate":0,"index":2288},{"krate":0,"index":2291},{"krate":0,"index":2294},{"krate":0,"index":2297},{"krate":0,"index":2300},{"krate":0,"index":2303},{"krate":0,"index":2306},{"krate":0,"index":2309},{"krate":0,"index":2312},{"krate":0,"index":2315},{"krate":0,"index":2318},{"krate":0,"index":2321},{"krate":0,"index":2324},{"krate":0,"index":2327},{"krate":0,"index":2330},{"krate":0,"index":2333},{"krate":0,"index":2336},{"krate":0,"index":2339},{"krate":0,"index":2342},{"krate":0,"index":2345},{"krate":0,"index":2348},{"krate":0,"index":2351},{"krate":0,"index":2354},{"krate":0,"index":2357},{"krate":0,"index":2360},{"krate":0,"index":2363},{"krate":0,"index":2366},{"krate":0,"index":2369},{"krate":0,"index":2372},{"krate":0,"index":2375},{"krate":0,"index":2378},{"krate":0,"index":2381},{"krate":0,"index":2384},{"krate":0,"index":2387},{"krate":0,"index":2390},{"krate":0,"index":2393},{"krate":0,"index":2396},{"krate":0,"index":2399},{"krate":0,"index":2402},{"krate":0,"index":2405},{"krate":0,"index":2408},{"krate":0,"index":2411},{"krate":0,"index":2414},{"krate":0,"index":2417},{"krate":0,"index":2420},{"krate":0,"index":2423},{"krate":0,"index":2426},{"krate":0,"index":2429},{"krate":0,"index":2432},{"krate":0,"index":2435},{"krate":0,"index":2619},{"krate":0,"index":2621},{"krate":0,"index":2623},{"krate":0,"index":2451},{"krate":0,"index":2526},{"krate":0,"index":2529},{"krate":0,"index":2532},{"krate":0,"index":2535},{"krate":0,"index":2538},{"krate":0,"index":2541},{"krate":0,"index":2544},{"krate":0,"index":2547},{"krate":0,"index":2550},{"krate":0,"index":2553},{"krate":0,"index":2556},{"krate":0,"index":2559},{"krate":0,"index":2562},{"krate":0,"index":2565},{"krate":0,"index":2568},{"krate":0,"index":2571},{"krate":0,"index":2574},{"krate":0,"index":2577},{"krate":0,"index":2580},{"krate":0,"index":2583},{"krate":0,"index":2586},{"krate":0,"index":2589},{"krate":0,"index":2592},{"krate":0,"index":2595},{"krate":0,"index":2598},{"krate":0,"index":2601},{"krate":0,"index":2604},{"krate":0,"index":2607},{"krate":0,"index":2610},{"krate":0,"index":2613},{"krate":0,"index":2616},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":2706},{"krate":0,"index":2708},{"krate":0,"index":2710},{"krate":0,"index":2625},{"krate":0,"index":2700},{"krate":0,"index":2703},{"krate":0,"index":2810},{"krate":0,"index":2812},{"krate":0,"index":2814},{"krate":0,"index":2816},{"krate":0,"index":2817},{"krate":0,"index":2820},{"krate":0,"index":2821},{"krate":0,"index":2712},{"krate":0,"index":2787},{"krate":0,"index":2792},{"krate":0,"index":2797},{"krate":0,"index":2802},{"krate":0,"index":2807},{"krate":0,"index":2921},{"krate":0,"index":2923},{"krate":0,"index":2925},{"krate":0,"index":2927},{"krate":0,"index":2928},{"krate":0,"index":2931},{"krate":0,"index":2932},{"krate":0,"index":2823},{"krate":0,"index":2898},{"krate":0,"index":2903},{"krate":0,"index":2908},{"krate":0,"index":2913},{"krate":0,"index":2918},{"krate":0,"index":117},{"krate":0,"index":3141},{"krate":0,"index":3143},{"krate":0,"index":3145},{"krate":0,"index":3147},{"krate":0,"index":3148},{"krate":0,"index":3151},{"krate":0,"index":3152},{"krate":0,"index":2972},{"krate":0,"index":3047},{"krate":0,"index":3052},{"krate":0,"index":3057},{"krate":0,"index":3060},{"krate":0,"index":3063},{"krate":0,"index":3066},{"krate":0,"index":3069},{"krate":0,"index":3072},{"krate":0,"index":3075},{"krate":0,"index":3078},{"krate":0,"index":3081},{"krate":0,"index":3084},{"krate":0,"index":3087},{"krate":0,"index":3090},{"krate":0,"index":3093},{"krate":0,"index":3096},{"krate":0,"index":3099},{"krate":0,"index":3102},{"krate":0,"index":3105},{"krate":0,"index":3108},{"krate":0,"index":3111},{"krate":0,"index":3114},{"krate":0,"index":3117},{"krate":0,"index":3120},{"krate":0,"index":3123},{"krate":0,"index":3126},{"krate":0,"index":3129},{"krate":0,"index":3132},{"krate":0,"index":3135},{"krate":0,"index":3138},{"krate":0,"index":3260},{"krate":0,"index":3262},{"krate":0,"index":3264},{"krate":0,"index":3266},{"krate":0,"index":3267},{"krate":0,"index":3270},{"krate":0,"index":3271},{"krate":0,"index":3154},{"krate":0,"index":3229},{"krate":0,"index":3234},{"krate":0,"index":3239},{"krate":0,"index":3242},{"krate":0,"index":3245},{"krate":0,"index":3248},{"krate":0,"index":3251},{"krate":0,"index":3254},{"krate":0,"index":3257},{"krate":0,"index":119},{"krate":0,"index":3273},{"krate":0,"index":3276},{"krate":0,"index":3279},{"krate":0,"index":3380},{"krate":0,"index":3382},{"krate":0,"index":3384},{"krate":0,"index":3386},{"krate":0,"index":3387},{"krate":0,"index":3390},{"krate":0,"index":3391},{"krate":0,"index":3282},{"krate":0,"index":3357},{"krate":0,"index":3362},{"krate":0,"index":3367},{"krate":0,"index":3372},{"krate":0,"index":3377},{"krate":0,"index":3491},{"krate":0,"index":3493},{"krate":0,"index":3495},{"krate":0,"index":3497},{"krate":0,"index":3498},{"krate":0,"index":3501},{"krate":0,"index":3502},{"krate":0,"index":3393},{"krate":0,"index":3468},{"krate":0,"index":3473},{"krate":0,"index":3478},{"krate":0,"index":3483},{"krate":0,"index":3488},{"krate":0,"index":3602},{"krate":0,"index":3604},{"krate":0,"index":3606},{"krate":0,"index":3608},{"krate":0,"index":3609},{"krate":0,"index":3612},{"krate":0,"index":3613},{"krate":0,"index":3504},{"krate":0,"index":3579},{"krate":0,"index":3584},{"krate":0,"index":3589},{"krate":0,"index":3594},{"krate":0,"index":3599},{"krate":0,"index":3715},{"krate":0,"index":3717},{"krate":0,"index":3719},{"krate":0,"index":3721},{"krate":0,"index":3722},{"krate":0,"index":3725},{"krate":0,"index":3726},{"krate":0,"index":3615},{"krate":0,"index":3690},{"krate":0,"index":3695},{"krate":0,"index":3700},{"krate":0,"index":3703},{"krate":0,"index":3706},{"krate":0,"index":3709},{"krate":0,"index":3712},{"krate":0,"index":121},{"krate":0,"index":3825},{"krate":0,"index":3827},{"krate":0,"index":3829},{"krate":0,"index":3831},{"krate":0,"index":3832},{"krate":0,"index":3835},{"krate":0,"index":3836},{"krate":0,"index":3728},{"krate":0,"index":3803},{"krate":0,"index":3808},{"krate":0,"index":3813},{"krate":0,"index":3816},{"krate":0,"index":3819},{"krate":0,"index":3822},{"krate":0,"index":123},{"krate":0,"index":125},{"krate":0,"index":127},{"krate":0,"index":4966},{"krate":0,"index":4968},{"krate":0,"index":4970},{"krate":0,"index":4971},{"krate":0,"index":4974},{"krate":0,"index":4975},{"krate":0,"index":4700},{"krate":0,"index":4776},{"krate":0,"index":4781},{"krate":0,"index":4786},{"krate":0,"index":4789},{"krate":0,"index":4792},{"krate":0,"index":4795},{"krate":0,"index":4798},{"krate":0,"index":4801},{"krate":0,"index":4804},{"krate":0,"index":4807},{"krate":0,"index":4810},{"krate":0,"index":4813},{"krate":0,"index":4816},{"krate":0,"index":4819},{"krate":0,"index":4822},{"krate":0,"index":4825},{"krate":0,"index":4828},{"krate":0,"index":4831},{"krate":0,"index":4834},{"krate":0,"index":4837},{"krate":0,"index":4840},{"krate":0,"index":4843},{"krate":0,"index":4846},{"krate":0,"index":4849},{"krate":0,"index":4852},{"krate":0,"index":4855},{"krate":0,"index":4858},{"krate":0,"index":4861},{"krate":0,"index":4864},{"krate":0,"index":4867},{"krate":0,"index":4870},{"krate":0,"index":4873},{"krate":0,"index":4876},{"krate":0,"index":4879},{"krate":0,"index":4882},{"krate":0,"index":4885},{"krate":0,"index":4888},{"krate":0,"index":4891},{"krate":0,"index":4894},{"krate":0,"index":4897},{"krate":0,"index":4900},{"krate":0,"index":4903},{"krate":0,"index":4906},{"krate":0,"index":4909},{"krate":0,"index":4912},{"krate":0,"index":4915},{"krate":0,"index":4918},{"krate":0,"index":4921},{"krate":0,"index":4924},{"krate":0,"index":4927},{"krate":0,"index":4930},{"krate":0,"index":4933},{"krate":0,"index":4936},{"krate":0,"index":4939},{"krate":0,"index":4942},{"krate":0,"index":4945},{"krate":0,"index":4948},{"krate":0,"index":4951},{"krate":0,"index":4954},{"krate":0,"index":4957},{"krate":0,"index":4960},{"krate":0,"index":4963},{"krate":0,"index":129},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":143},{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":153},{"krate":0,"index":155},{"krate":0,"index":158},{"krate":0,"index":160},{"krate":0,"index":162},{"krate":0,"index":5101},{"krate":0,"index":5103},{"krate":0,"index":5105},{"krate":0,"index":4977},{"krate":0,"index":5053},{"krate":0,"index":5056},{"krate":0,"index":5059},{"krate":0,"index":5062},{"krate":0,"index":5065},{"krate":0,"index":5068},{"krate":0,"index":5071},{"krate":0,"index":5074},{"krate":0,"index":5077},{"krate":0,"index":5080},{"krate":0,"index":5083},{"krate":0,"index":5086},{"krate":0,"index":5089},{"krate":0,"index":5092},{"krate":0,"index":5095},{"krate":0,"index":5098},{"krate":0,"index":165},{"krate":0,"index":5639},{"krate":0,"index":5641},{"krate":0,"index":5643},{"krate":0,"index":5527},{"krate":0,"index":5602},{"krate":0,"index":5607},{"krate":0,"index":5612},{"krate":0,"index":5615},{"krate":0,"index":5618},{"krate":0,"index":5621},{"krate":0,"index":5624},{"krate":0,"index":5627},{"krate":0,"index":5630},{"krate":0,"index":5633},{"krate":0,"index":5636},{"krate":0,"index":175},{"krate":0,"index":5975},{"krate":0,"index":5977},{"krate":0,"index":5979},{"krate":0,"index":5845},{"krate":0,"index":5920},{"krate":0,"index":5925},{"krate":0,"index":5930},{"krate":0,"index":5933},{"krate":0,"index":5936},{"krate":0,"index":5939},{"krate":0,"index":5942},{"krate":0,"index":5945},{"krate":0,"index":5948},{"krate":0,"index":5951},{"krate":0,"index":5954},{"krate":0,"index":5957},{"krate":0,"index":5960},{"krate":0,"index":5963},{"krate":0,"index":5966},{"krate":0,"index":5969},{"krate":0,"index":5972},{"krate":0,"index":5737},{"krate":0,"index":5744},{"krate":0,"index":5747},{"krate":0,"index":6111},{"krate":0,"index":6113},{"krate":0,"index":6115},{"krate":0,"index":5981},{"krate":0,"index":6056},{"krate":0,"index":6061},{"krate":0,"index":6066},{"krate":0,"index":6069},{"krate":0,"index":6072},{"krate":0,"index":6075},{"krate":0,"index":6078},{"krate":0,"index":6081},{"krate":0,"index":6084},{"krate":0,"index":6087},{"krate":0,"index":6090},{"krate":0,"index":6093},{"krate":0,"index":6096},{"krate":0,"index":6099},{"krate":0,"index":6102},{"krate":0,"index":6105},{"krate":0,"index":6108},{"krate":0,"index":5749},{"krate":0,"index":5756},{"krate":0,"index":5759},{"krate":0,"index":6247},{"krate":0,"index":6249},{"krate":0,"index":6251},{"krate":0,"index":6117},{"krate":0,"index":6192},{"krate":0,"index":6197},{"krate":0,"index":6202},{"krate":0,"index":6205},{"krate":0,"index":6208},{"krate":0,"index":6211},{"krate":0,"index":6214},{"krate":0,"index":6217},{"krate":0,"index":6220},{"krate":0,"index":6223},{"krate":0,"index":6226},{"krate":0,"index":6229},{"krate":0,"index":6232},{"krate":0,"index":6235},{"krate":0,"index":6238},{"krate":0,"index":6241},{"krate":0,"index":6244},{"krate":0,"index":5761},{"krate":0,"index":5768},{"krate":0,"index":5771},{"krate":0,"index":6383},{"krate":0,"index":6385},{"krate":0,"index":6387},{"krate":0,"index":6253},{"krate":0,"index":6328},{"krate":0,"index":6333},{"krate":0,"index":6338},{"krate":0,"index":6341},{"krate":0,"index":6344},{"krate":0,"index":6347},{"krate":0,"index":6350},{"krate":0,"index":6353},{"krate":0,"index":6356},{"krate":0,"index":6359},{"krate":0,"index":6362},{"krate":0,"index":6365},{"krate":0,"index":6368},{"krate":0,"index":6371},{"krate":0,"index":6374},{"krate":0,"index":6377},{"krate":0,"index":6380},{"krate":0,"index":5773},{"krate":0,"index":5780},{"krate":0,"index":5783},{"krate":0,"index":6519},{"krate":0,"index":6521},{"krate":0,"index":6523},{"krate":0,"index":6389},{"krate":0,"index":6464},{"krate":0,"index":6469},{"krate":0,"index":6474},{"krate":0,"index":6477},{"krate":0,"index":6480},{"krate":0,"index":6483},{"krate":0,"index":6486},{"krate":0,"index":6489},{"krate":0,"index":6492},{"krate":0,"index":6495},{"krate":0,"index":6498},{"krate":0,"index":6501},{"krate":0,"index":6504},{"krate":0,"index":6507},{"krate":0,"index":6510},{"krate":0,"index":6513},{"krate":0,"index":6516},{"krate":0,"index":5785},{"krate":0,"index":5792},{"krate":0,"index":5795},{"krate":0,"index":6655},{"krate":0,"index":6657},{"krate":0,"index":6659},{"krate":0,"index":6525},{"krate":0,"index":6600},{"krate":0,"index":6605},{"krate":0,"index":6610},{"krate":0,"index":6613},{"krate":0,"index":6616},{"krate":0,"index":6619},{"krate":0,"index":6622},{"krate":0,"index":6625},{"krate":0,"index":6628},{"krate":0,"index":6631},{"krate":0,"index":6634},{"krate":0,"index":6637},{"krate":0,"index":6640},{"krate":0,"index":6643},{"krate":0,"index":6646},{"krate":0,"index":6649},{"krate":0,"index":6652},{"krate":0,"index":5797},{"krate":0,"index":5804},{"krate":0,"index":5807},{"krate":0,"index":6791},{"krate":0,"index":6793},{"krate":0,"index":6795},{"krate":0,"index":6661},{"krate":0,"index":6736},{"krate":0,"index":6741},{"krate":0,"index":6746},{"krate":0,"index":6749},{"krate":0,"index":6752},{"krate":0,"index":6755},{"krate":0,"index":6758},{"krate":0,"index":6761},{"krate":0,"index":6764},{"krate":0,"index":6767},{"krate":0,"index":6770},{"krate":0,"index":6773},{"krate":0,"index":6776},{"krate":0,"index":6779},{"krate":0,"index":6782},{"krate":0,"index":6785},{"krate":0,"index":6788},{"krate":0,"index":5809},{"krate":0,"index":5816},{"krate":0,"index":5819},{"krate":0,"index":6927},{"krate":0,"index":6929},{"krate":0,"index":6931},{"krate":0,"index":6797},{"krate":0,"index":6872},{"krate":0,"index":6877},{"krate":0,"index":6882},{"krate":0,"index":6885},{"krate":0,"index":6888},{"krate":0,"index":6891},{"krate":0,"index":6894},{"krate":0,"index":6897},{"krate":0,"index":6900},{"krate":0,"index":6903},{"krate":0,"index":6906},{"krate":0,"index":6909},{"krate":0,"index":6912},{"krate":0,"index":6915},{"krate":0,"index":6918},{"krate":0,"index":6921},{"krate":0,"index":6924},{"krate":0,"index":5821},{"krate":0,"index":5828},{"krate":0,"index":5831},{"krate":0,"index":7063},{"krate":0,"index":7065},{"krate":0,"index":7067},{"krate":0,"index":6933},{"krate":0,"index":7008},{"krate":0,"index":7013},{"krate":0,"index":7018},{"krate":0,"index":7021},{"krate":0,"index":7024},{"krate":0,"index":7027},{"krate":0,"index":7030},{"krate":0,"index":7033},{"krate":0,"index":7036},{"krate":0,"index":7039},{"krate":0,"index":7042},{"krate":0,"index":7045},{"krate":0,"index":7048},{"krate":0,"index":7051},{"krate":0,"index":7054},{"krate":0,"index":7057},{"krate":0,"index":7060},{"krate":0,"index":5833},{"krate":0,"index":5840},{"krate":0,"index":5843}],"decl_id":null,"docs":" Bindings to JavaScript's standard, built-in objects, including their methods\n and properties.","sig":null,"attributes":[{"value":"/ Bindings to JavaScript's standard, built-in objects, including their methods","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":0,"byte_end":80,"line_start":1,"line_end":1,"column_start":1,"column_end":81}},{"value":"/ and properties.","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":81,"byte_end":100,"line_start":2,"line_end":2,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":101,"byte_end":104,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ This does *not* include any Web, Node, or any other JS environment","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":105,"byte_end":175,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"/ APIs. Only the things that are guaranteed to exist in the global scope by","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":176,"byte_end":253,"line_start":5,"line_end":5,"column_start":1,"column_end":78}},{"value":"/ the ECMAScript standard.","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":254,"byte_end":282,"line_start":6,"line_end":6,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":283,"byte_end":286,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":287,"byte_end":371,"line_start":8,"line_end":8,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":372,"byte_end":375,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ## A Note About `camelCase`, `snake_case`, and Naming Conventions","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":376,"byte_end":445,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":446,"byte_end":449,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ JavaScript's global objects use `camelCase` naming conventions for functions","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":450,"byte_end":530,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ and methods, but Rust style is to use `snake_case`. These bindings expose","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":531,"byte_end":608,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ the Rust style `snake_case` name. Additionally, acronyms within a method","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":609,"byte_end":685,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ name are all lower case, where as in JavaScript they are all upper case. For","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":686,"byte_end":766,"line_start":15,"line_end":15,"column_start":1,"column_end":81}},{"value":"/ example, `decodeURI` in JavaScript is exposed as `decode_uri` in these","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":767,"byte_end":841,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ bindings.","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":842,"byte_end":855,"line_start":17,"line_end":17,"column_start":1,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":182},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":2199,"byte_end":2209,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"decode_uri","qualname":"::decode_uri","value":"pub fn decode_uri(&str) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `decodeURI()` function decodes a Uniform Resource Identifier (URI)\n previously created by `encodeURI` or by a similar routine.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":1837,"byte_end":1852,"line_start":50,"line_end":50,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":1837,"byte_end":1852,"line_start":50,"line_end":50,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":184},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":2635,"byte_end":2655,"line_start":64,"line_end":64,"column_start":12,"column_end":32},"name":"decode_uri_component","qualname":"::decode_uri_component","value":"pub fn decode_uri_component(&str) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `decodeURIComponent()` function decodes a Uniform Resource Identifier (URI) component\n previously created by `encodeURIComponent` or by a similar routine.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":1837,"byte_end":1852,"line_start":50,"line_end":50,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":1837,"byte_end":1852,"line_start":50,"line_end":50,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":186},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":3228,"byte_end":3238,"line_start":74,"line_end":74,"column_start":12,"column_end":22},"name":"encode_uri","qualname":"::encode_uri","value":"pub fn encode_uri(&str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `encodeURI()` function encodes a Uniform Resource Identifier (URI)\n by replacing each instance of certain characters by one, two, three, or\n four escape sequences representing the UTF-8 encoding of the character\n (will only be four escape sequences for characters composed of two\n \"surrogate\" characters).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":1837,"byte_end":1852,"line_start":50,"line_end":50,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":1837,"byte_end":1852,"line_start":50,"line_end":50,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":188},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":3823,"byte_end":3843,"line_start":83,"line_end":83,"column_start":12,"column_end":32},"name":"encode_uri_component","qualname":"::encode_uri_component","value":"pub fn encode_uri_component(&str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `encodeURIComponent()` function encodes a Uniform Resource Identifier (URI) component\n by replacing each instance of certain characters by one, two, three, or four escape sequences\n representing the UTF-8 encoding of the character\n (will only be four escape sequences for characters composed of two \"surrogate\" characters).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":1837,"byte_end":1852,"line_start":50,"line_end":50,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":1837,"byte_end":1852,"line_start":50,"line_end":50,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":190},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":4115,"byte_end":4119,"line_start":89,"line_end":89,"column_start":12,"column_end":16},"name":"eval","qualname":"::eval","value":"pub fn eval(&str) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `eval()` function evaluates JavaScript code represented as a string.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":1837,"byte_end":1852,"line_start":50,"line_end":50,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":1837,"byte_end":1852,"line_start":50,"line_end":50,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":192},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":4512,"byte_end":4521,"line_start":96,"line_end":96,"column_start":12,"column_end":21},"name":"is_finite","qualname":"::is_finite","value":"pub fn is_finite(&JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The global `isFinite()` function determines whether the passed value is a finite number.\n If needed, the parameter is first converted to a number.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":1837,"byte_end":1852,"line_start":50,"line_end":50,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":1837,"byte_end":1852,"line_start":50,"line_end":50,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":194},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":4901,"byte_end":4910,"line_start":103,"line_end":103,"column_start":12,"column_end":21},"name":"parse_int","qualname":"::parse_int","value":"pub fn parse_int(&str, u8) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `parseInt()` function parses a string argument and returns an integer\n of the specified radix (the base in mathematical numeral systems), or NaN on error.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":1837,"byte_end":1852,"line_start":50,"line_end":50,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":1837,"byte_end":1852,"line_start":50,"line_end":50,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":196},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":5242,"byte_end":5253,"line_start":110,"line_end":110,"column_start":12,"column_end":23},"name":"parse_float","qualname":"::parse_float","value":"pub fn parse_float(&str) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `parseFloat()` function parses an argument and returns a floating point number,\n or NaN on error.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":1837,"byte_end":1852,"line_start":50,"line_end":50,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":1837,"byte_end":1852,"line_start":50,"line_end":50,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":198},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":5574,"byte_end":5580,"line_start":117,"line_end":117,"column_start":12,"column_end":18},"name":"escape","qualname":"::escape","value":"pub fn escape(&str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `escape()` function computes a new string in which certain characters have been\n replaced by a hexadecimal escape sequence.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":1837,"byte_end":1852,"line_start":50,"line_end":50,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":1837,"byte_end":1852,"line_start":50,"line_end":50,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":200},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6083,"byte_end":6091,"line_start":126,"line_end":126,"column_start":12,"column_end":20},"name":"unescape","qualname":"::unescape","value":"pub fn unescape(&str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `unescape()` function computes a new string in which hexadecimal escape\n sequences are replaced with the character that it represents. The escape sequences might\n be introduced by a function like `escape`. Usually, `decodeURI` or `decodeURIComponent`\n are preferred over `unescape`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":1837,"byte_end":1852,"line_start":50,"line_end":50,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":1837,"byte_end":1852,"line_start":50,"line_end":50,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":411},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6316,"byte_end":6321,"line_start":134,"line_end":134,"column_start":14,"column_end":19},"name":"Array","qualname":"::Array","value":"Array {  }","parent":null,"children":[{"krate":0,"index":412}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6403,"byte_end":6406,"line_start":138,"line_end":138,"column_start":12,"column_end":15},"name":"new","qualname":"<Array>::new","value":"pub fn new() -> Array","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6561,"byte_end":6576,"line_start":142,"line_end":142,"column_start":12,"column_end":27},"name":"new_with_length","qualname":"<Array>::new_with_length","value":"pub fn new_with_length(u32) -> Array","parent":null,"children":[],"decl_id":null,"docs":" Creates a new array with the specified length (elements are initialized to `undefined`).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6761,"byte_end":6764,"line_start":146,"line_end":146,"column_start":12,"column_end":15},"name":"get","qualname":"<Array>::get","value":"pub fn get(&Self, u32) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the element at the index (returns `undefined` if the index is out of range).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6966,"byte_end":6969,"line_start":150,"line_end":150,"column_start":12,"column_end":15},"name":"set","qualname":"<Array>::set","value":"pub fn set(&Self, u32, JsValue)","parent":null,"children":[],"decl_id":null,"docs":" Sets the element at the index (auto-enlarges the array if the index is out of range).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":7322,"byte_end":7328,"line_start":158,"line_end":158,"column_start":12,"column_end":18},"name":"delete","qualname":"<Array>::delete","value":"pub fn delete(&Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Deletes the element at the index (does nothing if the index is out of range).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":7542,"byte_end":7546,"line_start":163,"line_end":163,"column_start":12,"column_end":16},"name":"from","qualname":"<Array>::from","value":"pub fn from(&JsValue) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `Array.from()` method creates a new, shallow-copied `Array` instance\n from an array-like or iterable object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":7925,"byte_end":7936,"line_start":170,"line_end":170,"column_start":12,"column_end":23},"name":"copy_within","qualname":"<Array>::copy_within","value":"pub fn copy_within(&Self, i32, i32, i32) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `copyWithin()` method shallow copies part of an array to another\n location in the same array and returns it, without modifying its size.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":8324,"byte_end":8330,"line_start":177,"line_end":177,"column_start":12,"column_end":18},"name":"concat","qualname":"<Array>::concat","value":"pub fn concat(&Self, &Array) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `concat()` method is used to merge two or more arrays. This method\n does not change the existing arrays, but instead returns a new array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":8669,"byte_end":8674,"line_start":184,"line_end":184,"column_start":12,"column_end":17},"name":"every","qualname":"<Array>::every","value":"pub fn every(&Self, &mut dyn FnMut(JsValue, u32, Array) -> bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `every()` method tests whether all elements in the array pass the test\n implemented by the provided function.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":9081,"byte_end":9085,"line_start":191,"line_end":191,"column_start":12,"column_end":16},"name":"fill","qualname":"<Array>::fill","value":"pub fn fill(&Self, &JsValue, u32, u32) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `fill()` method fills all the elements of an array from a start index\n to an end index with a static value. The end index is not included.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":9453,"byte_end":9459,"line_start":198,"line_end":198,"column_start":12,"column_end":18},"name":"filter","qualname":"<Array>::filter","value":"pub fn filter(&Self, &mut dyn FnMut(JsValue, u32, Array) -> bool) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `filter()` method creates a new array with all elements that pass the\n test implemented by the provided function.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":9879,"byte_end":9883,"line_start":205,"line_end":205,"column_start":12,"column_end":16},"name":"find","qualname":"<Array>::find","value":"pub fn find(&Self, &mut dyn FnMut(JsValue, u32, Array) -> bool) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The `find()` method returns the value of the first element in the array that satisfies\n  the provided testing function. Otherwise `undefined` is returned.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":10326,"byte_end":10336,"line_start":212,"line_end":212,"column_start":12,"column_end":22},"name":"find_index","qualname":"<Array>::find_index","value":"pub fn find_index(&Self, &mut dyn FnMut(JsValue, u32, Array) -> bool) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The `findIndex()` method returns the index of the first element in the array that\n satisfies the provided testing function. Otherwise -1 is returned.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":10728,"byte_end":10732,"line_start":219,"line_end":219,"column_start":12,"column_end":16},"name":"flat","qualname":"<Array>::flat","value":"pub fn flat(&Self, i32) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `flat()` method creates a new array with all sub-array elements concatenated into it\n recursively up to the specified depth.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":11092,"byte_end":11100,"line_start":226,"line_end":226,"column_start":12,"column_end":20},"name":"flat_map","qualname":"<Array>::flat_map","value":"pub fn flat_map(&Self, &mut dyn FnMut(JsValue, u32, Array) -> Vec<JsValue>)\n-> Array","parent":null,"children":[],"decl_id":null,"docs":" The `flatMap()` method first maps each element using a mapping function, then flattens\n the result into a new array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":11491,"byte_end":11499,"line_start":235,"line_end":235,"column_start":12,"column_end":20},"name":"for_each","qualname":"<Array>::for_each","value":"pub fn for_each(&Self, &mut dyn FnMut(JsValue, u32, Array) -> ())","parent":null,"children":[],"decl_id":null,"docs":" The `forEach()` method executes a provided function once for each array element.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":11871,"byte_end":11879,"line_start":242,"line_end":242,"column_start":12,"column_end":20},"name":"includes","qualname":"<Array>::includes","value":"pub fn includes(&Self, &JsValue, i32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `includes()` method determines whether an array includes a certain\n element, returning true or false as appropriate.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":12271,"byte_end":12279,"line_start":249,"line_end":249,"column_start":12,"column_end":20},"name":"index_of","qualname":"<Array>::index_of","value":"pub fn index_of(&Self, &JsValue, i32) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The `indexOf()` method returns the first index at which a given element\n can be found in the array, or -1 if it is not present.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":12631,"byte_end":12639,"line_start":255,"line_end":255,"column_start":12,"column_end":20},"name":"is_array","qualname":"<Array>::is_array","value":"pub fn is_array(&JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `Array.isArray()` method determines whether the passed value is an Array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":12967,"byte_end":12971,"line_start":262,"line_end":262,"column_start":12,"column_end":16},"name":"join","qualname":"<Array>::join","value":"pub fn join(&Self, &str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `join()` method joins all elements of an array (or an array-like object)\n into a string and returns this string.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":13425,"byte_end":13438,"line_start":270,"line_end":270,"column_start":12,"column_end":25},"name":"last_index_of","qualname":"<Array>::last_index_of","value":"pub fn last_index_of(&Self, &JsValue, i32) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The `lastIndexOf()` method returns the last index at which a given element\n can be found in the array, or -1 if it is not present. The array is\n searched backwards, starting at fromIndex.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":13953,"byte_end":13959,"line_start":279,"line_end":279,"column_start":12,"column_end":18},"name":"length","qualname":"<Array>::length","value":"pub fn length(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The length property of an object which is an instance of type Array\n sets or returns the number of elements in that array. The value is an\n unsigned, 32-bit integer that is always numerically greater than the\n highest index in the array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":14585,"byte_end":14588,"line_start":289,"line_end":289,"column_start":12,"column_end":15},"name":"map","qualname":"<Array>::map","value":"pub fn map(&Self, &mut dyn FnMut(JsValue, u32, Array) -> JsValue) -> Array","parent":null,"children":[],"decl_id":null,"docs":" `map()` calls a provided callback function once for each element in an array,\n in order, and constructs a new array from the results. callback is invoked\n only for indexes of the array which have assigned values, including undefined.\n It is not called for missing elements of the array (that is, indexes that have\n never been set, which have been deleted or which have never been assigned a value).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":15537,"byte_end":15540,"line_start":307,"line_end":307,"column_start":12,"column_end":15},"name":"of1","qualname":"<Array>::of1","value":"pub fn of1(&JsValue) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `Array.of()` method creates a new Array instance with a variable\n number of arguments, regardless of number or type of the arguments.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":15755,"byte_end":15758,"line_start":311,"line_end":311,"column_start":12,"column_end":15},"name":"of2","qualname":"<Array>::of2","value":"pub fn of2(&JsValue, &JsValue) -> Array","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":15986,"byte_end":15989,"line_start":315,"line_end":315,"column_start":12,"column_end":15},"name":"of3","qualname":"<Array>::of3","value":"pub fn of3(&JsValue, &JsValue, &JsValue) -> Array","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":16230,"byte_end":16233,"line_start":319,"line_end":319,"column_start":12,"column_end":15},"name":"of4","qualname":"<Array>::of4","value":"pub fn of4(&JsValue, &JsValue, &JsValue, &JsValue) -> Array","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":16487,"byte_end":16490,"line_start":323,"line_end":323,"column_start":12,"column_end":15},"name":"of5","qualname":"<Array>::of5","value":"pub fn of5(&JsValue, &JsValue, &JsValue, &JsValue, &JsValue) -> Array","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":16879,"byte_end":16882,"line_start":330,"line_end":330,"column_start":12,"column_end":15},"name":"pop","qualname":"<Array>::pop","value":"pub fn pop(&Self) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The `pop()` method removes the last element from an array and returns that\n element. This method changes the length of the array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":17204,"byte_end":17208,"line_start":337,"line_end":337,"column_start":12,"column_end":16},"name":"push","qualname":"<Array>::push","value":"pub fn push(&Self, &JsValue) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `push()` method adds one or more elements to the end of an array and\n returns the new length of the array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":17582,"byte_end":17588,"line_start":344,"line_end":344,"column_start":12,"column_end":18},"name":"reduce","qualname":"<Array>::reduce","value":"pub fn reduce(&Self, &mut dyn FnMut(JsValue, JsValue, u32, Array) -> JsValue,\n              &JsValue) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The `reduce()` method applies a function against an accumulator and each element in\n the array (from left to right) to reduce it to a single value.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":18104,"byte_end":18116,"line_start":355,"line_end":355,"column_start":12,"column_end":24},"name":"reduce_right","qualname":"<Array>::reduce_right","value":"pub fn reduce_right(&Self,\n                    &mut dyn FnMut(JsValue, JsValue, u32, Array) -> JsValue,\n                    &JsValue) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The `reduceRight()` method applies a function against an accumulator and each value\n of the array (from right-to-left) to reduce it to a single value.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":18594,"byte_end":18601,"line_start":366,"line_end":366,"column_start":12,"column_end":19},"name":"reverse","qualname":"<Array>::reverse","value":"pub fn reverse(&Self) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `reverse()` method reverses an array in place. The first array\n element becomes the last, and the last array element becomes the first.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":18952,"byte_end":18957,"line_start":373,"line_end":373,"column_start":12,"column_end":17},"name":"shift","qualname":"<Array>::shift","value":"pub fn shift(&Self) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The `shift()` method removes the first element from an array and returns\n that removed element. This method changes the length of the array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":19359,"byte_end":19364,"line_start":381,"line_end":381,"column_start":12,"column_end":17},"name":"slice","qualname":"<Array>::slice","value":"pub fn slice(&Self, u32, u32) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `slice()` method returns a shallow copy of a portion of an array into\n a new array object selected from begin to end (end not included).\n The original array will not be modified.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":19791,"byte_end":19795,"line_start":388,"line_end":388,"column_start":12,"column_end":16},"name":"some","qualname":"<Array>::some","value":"pub fn some(&Self, &mut dyn FnMut(JsValue) -> bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `some()` method tests whether at least one element in the array passes the test implemented\n by the provided function.\n Note: This method returns false for any condition put on an empty array.\n [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":20364,"byte_end":20368,"line_start":399,"line_end":399,"column_start":12,"column_end":16},"name":"sort","qualname":"<Array>::sort","value":"pub fn sort(&Self) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `sort()` method sorts the elements of an array in place and returns\n the array. The sort is not necessarily stable. The default sort\n order is according to string Unicode code points.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":20693,"byte_end":20699,"line_start":406,"line_end":406,"column_start":12,"column_end":18},"name":"splice","qualname":"<Array>::splice","value":"pub fn splice(&Self, u32, u32, &JsValue) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `splice()` method changes the contents of an array by removing existing elements and/or\n adding new elements.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":21247,"byte_end":21263,"line_start":414,"line_end":414,"column_start":12,"column_end":28},"name":"to_locale_string","qualname":"<Array>::to_locale_string","value":"pub fn to_locale_string(&Self, &JsValue, &JsValue) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toLocaleString()` method returns a string representing the elements of the array.\n The elements are converted to Strings using their toLocaleString methods and these\n Strings are separated by a locale-specific String (such as a comma “,”).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":21630,"byte_end":21639,"line_start":421,"line_end":421,"column_start":12,"column_end":21},"name":"to_string","qualname":"<Array>::to_string","value":"pub fn to_string(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toString()` method returns a string representing the specified array\n and its elements.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":21974,"byte_end":21981,"line_start":428,"line_end":428,"column_start":12,"column_end":19},"name":"unshift","qualname":"<Array>::unshift","value":"pub fn unshift(&Self, &JsValue) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `unshift()` method adds one or more elements to the beginning of an\n array and returns the new length of the array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":6131,"byte_end":6146,"line_start":130,"line_end":130,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":424},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":22098,"byte_end":22107,"line_start":433,"line_end":433,"column_start":12,"column_end":21},"name":"ArrayIter","qualname":"::ArrayIter","value":"ArrayIter {  }","parent":null,"children":[{"krate":0,"index":426},{"krate":0,"index":427}],"decl_id":null,"docs":" Iterator returned by `Array::iter`\n","sig":null,"attributes":[{"value":"/ Iterator returned by `Array::iter`","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":22024,"byte_end":22062,"line_start":431,"line_end":431,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":22886,"byte_end":22890,"line_start":465,"line_end":465,"column_start":12,"column_end":16},"name":"iter","qualname":"<Array>::iter","value":"pub fn iter(&Self) -> ArrayIter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the values of the JS array.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the values of the JS array.","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":22818,"byte_end":22874,"line_start":464,"line_end":464,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":23073,"byte_end":23079,"line_start":473,"line_end":473,"column_start":12,"column_end":18},"name":"to_vec","qualname":"<Array>::to_vec","value":"pub fn to_vec(&Self) -> Vec<JsValue>","parent":null,"children":[],"decl_id":null,"docs":" Converts the JS array into a new Vec.\n","sig":null,"attributes":[{"value":"/ Converts the JS array into a new Vec.","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":23020,"byte_end":23061,"line_start":472,"line_end":472,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":534},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":23920,"byte_end":23931,"line_start":516,"line_end":516,"column_start":14,"column_end":25},"name":"ArrayBuffer","qualname":"::ArrayBuffer","value":"ArrayBuffer {  }","parent":null,"children":[{"krate":0,"index":535}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":23764,"byte_end":23779,"line_start":512,"line_end":512,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":23764,"byte_end":23779,"line_start":512,"line_end":512,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":23764,"byte_end":23779,"line_start":512,"line_end":512,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":24498,"byte_end":24501,"line_start":527,"line_end":527,"column_start":12,"column_end":15},"name":"new","qualname":"<ArrayBuffer>::new","value":"pub fn new(u32) -> ArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" The `ArrayBuffer` object is used to represent a generic,\n fixed-length raw binary data buffer. You cannot directly\n manipulate the contents of an `ArrayBuffer`; instead, you\n create one of the typed array objects or a `DataView` object\n which represents the buffer in a specific format, and use that\n to read and write the contents of the buffer.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":23764,"byte_end":23779,"line_start":512,"line_end":512,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":23764,"byte_end":23779,"line_start":512,"line_end":512,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":25115,"byte_end":25126,"line_start":537,"line_end":537,"column_start":12,"column_end":23},"name":"byte_length","qualname":"<ArrayBuffer>::byte_length","value":"pub fn byte_length(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The byteLength property of an object which is an instance of type ArrayBuffer\n it's an accessor property whose set accessor function is undefined,\n meaning that you can only read this property.\n The value is established when the array is constructed and cannot be changed.\n This property returns 0 if this ArrayBuffer has been detached.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":23764,"byte_end":23779,"line_start":512,"line_end":512,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":23764,"byte_end":23779,"line_start":512,"line_end":512,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":25527,"byte_end":25534,"line_start":544,"line_end":544,"column_start":12,"column_end":19},"name":"is_view","qualname":"<ArrayBuffer>::is_view","value":"pub fn is_view(&JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `isView()` method returns true if arg is one of the `ArrayBuffer`\n views, such as typed array objects or a DataView; false otherwise.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":23764,"byte_end":23779,"line_start":512,"line_end":512,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":23764,"byte_end":23779,"line_start":512,"line_end":512,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":529},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":25911,"byte_end":25916,"line_start":552,"line_end":552,"column_start":12,"column_end":17},"name":"slice","qualname":"<ArrayBuffer>::slice","value":"pub fn slice(&Self, u32) -> ArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" The `slice()` method returns a new `ArrayBuffer` whose contents\n are a copy of this `ArrayBuffer`'s bytes from begin, inclusive,\n up to end, exclusive.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":23764,"byte_end":23779,"line_start":512,"line_end":512,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":23764,"byte_end":23779,"line_start":512,"line_end":512,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":26210,"byte_end":26224,"line_start":558,"line_end":558,"column_start":12,"column_end":26},"name":"slice_with_end","qualname":"<ArrayBuffer>::slice_with_end","value":"pub fn slice_with_end(&Self, u32, u32) -> ArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" Like `slice()` but with the `end` argument.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":23764,"byte_end":23779,"line_start":512,"line_end":512,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":23764,"byte_end":23779,"line_start":512,"line_end":512,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":644},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":26454,"byte_end":26471,"line_start":566,"line_end":566,"column_start":14,"column_end":31},"name":"SharedArrayBuffer","qualname":"::SharedArrayBuffer","value":"SharedArrayBuffer {  }","parent":null,"children":[{"krate":0,"index":645}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":26307,"byte_end":26322,"line_start":562,"line_end":562,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":26307,"byte_end":26322,"line_start":562,"line_end":562,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":26307,"byte_end":26322,"line_start":562,"line_end":562,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":26971,"byte_end":26974,"line_start":576,"line_end":576,"column_start":12,"column_end":15},"name":"new","qualname":"<SharedArrayBuffer>::new","value":"pub fn new(u32) -> SharedArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" The `SharedArrayBuffer` object is used to represent a generic,\n fixed-length raw binary data buffer, similar to the `ArrayBuffer`\n object, but in a way that they can be used to create views\n on shared memory. Unlike an `ArrayBuffer`, a `SharedArrayBuffer`\n cannot become detached.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":26307,"byte_end":26322,"line_start":562,"line_end":562,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":26307,"byte_end":26322,"line_start":562,"line_end":562,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":27429,"byte_end":27440,"line_start":584,"line_end":584,"column_start":12,"column_end":23},"name":"byte_length","qualname":"<SharedArrayBuffer>::byte_length","value":"pub fn byte_length(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The byteLength accessor property represents the length of\n an `SharedArrayBuffer` in bytes. This is established when\n the `SharedArrayBuffer` is constructed and cannot be changed.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":26307,"byte_end":26322,"line_start":562,"line_end":562,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":26307,"byte_end":26322,"line_start":562,"line_end":562,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":27843,"byte_end":27848,"line_start":592,"line_end":592,"column_start":12,"column_end":17},"name":"slice","qualname":"<SharedArrayBuffer>::slice","value":"pub fn slice(&Self, u32) -> SharedArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" The `slice()` method returns a new `SharedArrayBuffer` whose contents\n are a copy of this `SharedArrayBuffer`'s bytes from begin, inclusive,\n up to end, exclusive.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":26307,"byte_end":26322,"line_start":562,"line_end":562,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":26307,"byte_end":26322,"line_start":562,"line_end":562,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":28160,"byte_end":28174,"line_start":598,"line_end":598,"column_start":12,"column_end":26},"name":"slice_with_end","qualname":"<SharedArrayBuffer>::slice_with_end","value":"pub fn slice_with_end(&Self, u32, u32) -> SharedArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" Like `slice()` but with the `end` argument.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":26307,"byte_end":26322,"line_start":562,"line_end":562,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":26307,"byte_end":26322,"line_start":562,"line_end":562,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":28587,"byte_end":28591,"line_start":609,"line_end":609,"column_start":12,"column_end":16},"name":"keys","qualname":"<Array>::keys","value":"pub fn keys(&Self) -> Iterator","parent":null,"children":[],"decl_id":null,"docs":" The `keys()` method returns a new Array Iterator object that contains the\n keys for each index in the array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":28266,"byte_end":28281,"line_start":602,"line_end":602,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":28266,"byte_end":28281,"line_start":602,"line_end":602,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":28929,"byte_end":28936,"line_start":616,"line_end":616,"column_start":12,"column_end":19},"name":"entries","qualname":"<Array>::entries","value":"pub fn entries(&Self) -> Iterator","parent":null,"children":[],"decl_id":null,"docs":" The `entries()` method returns a new Array Iterator object that contains\n the key/value pairs for each index in the array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":28266,"byte_end":28281,"line_start":602,"line_end":602,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":28266,"byte_end":28281,"line_start":602,"line_end":602,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":657},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":29263,"byte_end":29269,"line_start":623,"line_end":623,"column_start":12,"column_end":18},"name":"values","qualname":"<Array>::values","value":"pub fn values(&Self) -> Iterator","parent":null,"children":[],"decl_id":null,"docs":" The `values()` method returns a new Array Iterator object that\n contains the values for each index in the array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":28266,"byte_end":28281,"line_start":602,"line_end":602,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":28266,"byte_end":28281,"line_start":602,"line_end":602,"column_start":1,"column_end":16}}]},{"kind":"Mod","id":{"krate":0,"index":43},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":29906,"byte_end":29913,"line_start":636,"line_end":636,"column_start":9,"column_end":16},"name":"Atomics","qualname":"::Atomics","value":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":659},{"krate":0,"index":661},{"krate":0,"index":663},{"krate":0,"index":665},{"krate":0,"index":667},{"krate":0,"index":669},{"krate":0,"index":671},{"krate":0,"index":673},{"krate":0,"index":675},{"krate":0,"index":677},{"krate":0,"index":679},{"krate":0,"index":681},{"krate":0,"index":683},{"krate":0,"index":685}],"decl_id":null,"docs":" The `Atomics` object provides atomic operations as static methods.\n They are used with `SharedArrayBuffer` objects.","sig":null,"attributes":[{"value":"/ The `Atomics` object provides atomic operations as static methods.","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":29300,"byte_end":29370,"line_start":626,"line_end":626,"column_start":1,"column_end":71}},{"value":"/ They are used with `SharedArrayBuffer` objects.","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":29371,"byte_end":29422,"line_start":627,"line_end":627,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":29423,"byte_end":29426,"line_start":628,"line_end":628,"column_start":1,"column_end":4}},{"value":"/ The Atomic operations are installed on an `Atomics` module. Unlike","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":29427,"byte_end":29497,"line_start":629,"line_end":629,"column_start":1,"column_end":71}},{"value":"/ the other global objects, `Atomics` is not a constructor. You cannot","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":29498,"byte_end":29570,"line_start":630,"line_end":630,"column_start":1,"column_end":73}},{"value":"/ use it with a new operator or invoke the `Atomics` object as a","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":29571,"byte_end":29637,"line_start":631,"line_end":631,"column_start":1,"column_end":67}},{"value":"/ function. All properties and methods of `Atomics` are static","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":29638,"byte_end":29702,"line_start":632,"line_end":632,"column_start":1,"column_end":65}},{"value":"/ (as is the case with the Math object, for example).","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":29703,"byte_end":29758,"line_start":633,"line_end":633,"column_start":1,"column_end":56}},{"value":"/ [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":29759,"byte_end":29872,"line_start":634,"line_end":634,"column_start":1,"column_end":114}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":29873,"byte_end":29897,"line_start":635,"line_end":635,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":659},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":30461,"byte_end":30464,"line_start":648,"line_end":648,"column_start":16,"column_end":19},"name":"add","qualname":"::Atomics::add","value":"pub fn add(&JsValue, u32, i32) -> Result<i32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.add()` method adds a given value at a given\n position in the array and returns the old value at that position.\n This atomic operation guarantees that no other write happens\n until the modified value is written back.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":29939,"byte_end":29954,"line_start":639,"line_end":639,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":29939,"byte_end":29954,"line_start":639,"line_end":639,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":661},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":31063,"byte_end":31066,"line_start":658,"line_end":658,"column_start":16,"column_end":19},"name":"and","qualname":"::Atomics::and","value":"pub fn and(&JsValue, u32, i32) -> Result<i32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.and()` method computes a bitwise AND with a given\n value at a given position in the array, and returns the old value\n at that position.\n This atomic operation guarantees that no other write happens\n until the modified value is written back.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":29939,"byte_end":29954,"line_start":639,"line_end":639,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":29939,"byte_end":29954,"line_start":639,"line_end":639,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":663},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":31819,"byte_end":31835,"line_start":669,"line_end":669,"column_start":16,"column_end":32},"name":"compare_exchange","qualname":"::Atomics::compare_exchange","value":"pub fn compare_exchange(&JsValue, u32, i32, i32) -> Result<i32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.compareExchange()` method exchanges a given\n replacement value at a given position in the array, if a given expected\n value equals the old value. It returns the old value at that position\n whether it was equal to the expected value or not.\n This atomic operation guarantees that no other write happens\n until the modified value is written back.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":29939,"byte_end":29954,"line_start":639,"line_end":639,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":29939,"byte_end":29954,"line_start":639,"line_end":639,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":665},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":32502,"byte_end":32510,"line_start":683,"line_end":683,"column_start":16,"column_end":24},"name":"exchange","qualname":"::Atomics::exchange","value":"pub fn exchange(&JsValue, u32, i32) -> Result<i32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.exchange()` method stores a given value at a given\n position in the array and returns the old value at that position.\n This atomic operation guarantees that no other write happens\n until the modified value is written back.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":29939,"byte_end":29954,"line_start":639,"line_end":639,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":29939,"byte_end":29954,"line_start":639,"line_end":639,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":667},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":33076,"byte_end":33088,"line_start":692,"line_end":692,"column_start":16,"column_end":28},"name":"is_lock_free","qualname":"::Atomics::is_lock_free","value":"pub fn is_lock_free(u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.isLockFree()` method is used to determine\n whether to use locks or atomic operations. It returns true,\n if the given size is one of the `BYTES_PER_ELEMENT` property\n of integer `TypedArray` types.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":29939,"byte_end":29954,"line_start":639,"line_end":639,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":29939,"byte_end":29954,"line_start":639,"line_end":639,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":669},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":33428,"byte_end":33432,"line_start":699,"line_end":699,"column_start":16,"column_end":20},"name":"load","qualname":"::Atomics::load","value":"pub fn load(&JsValue, u32) -> Result<i32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.load()` method returns a value at a given\n position in the array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":29939,"byte_end":29954,"line_start":639,"line_end":639,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":29939,"byte_end":29954,"line_start":639,"line_end":639,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":671},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":33977,"byte_end":33983,"line_start":708,"line_end":708,"column_start":16,"column_end":22},"name":"notify","qualname":"::Atomics::notify","value":"pub fn notify(&Int32Array, u32) -> Result<u32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.notify()` method notifies up some agents that\n are sleeping in the wait queue.\n Note: This operation works with a shared `Int32Array` only.\n If `count` is not provided, notifies all the agents in the queue.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":29939,"byte_end":29954,"line_start":639,"line_end":639,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":29939,"byte_end":29954,"line_start":639,"line_end":639,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":673},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":34197,"byte_end":34214,"line_start":712,"line_end":712,"column_start":16,"column_end":33},"name":"notify_with_count","qualname":"::Atomics::notify_with_count","value":"pub fn notify_with_count(&Int32Array, u32, u32) -> Result<u32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" Notifies up to `count` agents in the wait queue.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":29939,"byte_end":29954,"line_start":639,"line_end":639,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":29939,"byte_end":29954,"line_start":639,"line_end":639,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":675},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":34848,"byte_end":34850,"line_start":725,"line_end":725,"column_start":16,"column_end":18},"name":"or","qualname":"::Atomics::or","value":"pub fn or(&JsValue, u32, i32) -> Result<i32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.or()` method computes a bitwise OR with a given value\n at a given position in the array, and returns the old value at that position.\n This atomic operation guarantees that no other write happens\n until the modified value is written back.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":29939,"byte_end":29954,"line_start":639,"line_end":639,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":29939,"byte_end":29954,"line_start":639,"line_end":639,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":677},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":35274,"byte_end":35279,"line_start":732,"line_end":732,"column_start":16,"column_end":21},"name":"store","qualname":"::Atomics::store","value":"pub fn store(&JsValue, u32, i32) -> Result<i32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.store()` method stores a given value at the given\n position in the array and returns that value.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":29939,"byte_end":29954,"line_start":639,"line_end":639,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":29939,"byte_end":29954,"line_start":639,"line_end":639,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":679},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":35848,"byte_end":35851,"line_start":741,"line_end":741,"column_start":16,"column_end":19},"name":"sub","qualname":"::Atomics::sub","value":"pub fn sub(&JsValue, u32, i32) -> Result<i32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.sub()` method substracts a given value at a\n given position in the array and returns the old value at that position.\n This atomic operation guarantees that no other write happens\n until the modified value is written back.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":29939,"byte_end":29954,"line_start":639,"line_end":639,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":29939,"byte_end":29954,"line_start":639,"line_end":639,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":681},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":36543,"byte_end":36547,"line_start":752,"line_end":752,"column_start":16,"column_end":20},"name":"wait","qualname":"::Atomics::wait","value":"pub fn wait(&Int32Array, u32, i32) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.wait()` method verifies that a given\n position in an `Int32Array` still contains a given value\n and if so sleeps, awaiting a wakeup or a timeout.\n It returns a string which is either \"ok\", \"not-equal\", or \"timed-out\".\n Note: This operation only works with a shared `Int32Array`\n and may not be allowed on the main thread.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":29939,"byte_end":29954,"line_start":639,"line_end":639,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":29939,"byte_end":29954,"line_start":639,"line_end":639,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":683},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":36898,"byte_end":36915,"line_start":758,"line_end":758,"column_start":16,"column_end":33},"name":"wait_with_timeout","qualname":"::Atomics::wait_with_timeout","value":"pub fn wait_with_timeout(&Int32Array, u32, i32, f64)\n-> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" Like `wait()`, but with timeout","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":29939,"byte_end":29954,"line_start":639,"line_end":639,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":29939,"byte_end":29954,"line_start":639,"line_end":639,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":685},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":37595,"byte_end":37598,"line_start":773,"line_end":773,"column_start":16,"column_end":19},"name":"xor","qualname":"::Atomics::xor","value":"pub fn xor(&JsValue, u32, i32) -> Result<i32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.xor()` method computes a bitwise XOR\n with a given value at a given position in the array,\n and returns the old value at that position.\n This atomic operation guarantees that no other write happens\n until the modified value is written back.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":29939,"byte_end":29954,"line_start":639,"line_end":639,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":29939,"byte_end":29954,"line_start":639,"line_end":639,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":780},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":37876,"byte_end":37883,"line_start":782,"line_end":782,"column_start":14,"column_end":21},"name":"Boolean","qualname":"::Boolean","value":"Boolean {  }","parent":null,"children":[{"krate":0,"index":781}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":37691,"byte_end":37706,"line_start":778,"line_end":778,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":37691,"byte_end":37706,"line_start":778,"line_end":778,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":37691,"byte_end":37706,"line_start":778,"line_end":778,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":775},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":38235,"byte_end":38238,"line_start":790,"line_end":790,"column_start":12,"column_end":15},"name":"new","qualname":"<Boolean>::new","value":"pub fn new(&JsValue) -> Boolean","parent":null,"children":[],"decl_id":null,"docs":" The `Boolean()` constructor creates an object wrapper for a boolean value.","sig":null,"attributes":[{"value":"deprecated(note = \"recommended to use `Boolean::from` instead\")","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":38132,"byte_end":38198,"line_start":788,"line_end":788,"column_start":5,"column_end":71}},{"value":"allow(deprecated)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":38203,"byte_end":38223,"line_start":789,"line_end":789,"column_start":5,"column_end":25}},{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":37691,"byte_end":37706,"line_start":778,"line_end":778,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":37691,"byte_end":37706,"line_start":778,"line_end":778,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":778},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":38543,"byte_end":38551,"line_start":796,"line_end":796,"column_start":12,"column_end":20},"name":"value_of","qualname":"<Boolean>::value_of","value":"pub fn value_of(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `valueOf()` method returns the primitive value of a `Boolean` object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":37691,"byte_end":37706,"line_start":778,"line_end":778,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":37691,"byte_end":37706,"line_start":778,"line_end":778,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":972},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39354,"byte_end":39362,"line_start":837,"line_end":837,"column_start":14,"column_end":22},"name":"DataView","qualname":"::DataView","value":"DataView {  }","parent":null,"children":[{"krate":0,"index":973}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":877},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39720,"byte_end":39723,"line_start":845,"line_end":845,"column_start":12,"column_end":15},"name":"new","qualname":"<DataView>::new","value":"pub fn new(&ArrayBuffer, usize, usize) -> DataView","parent":null,"children":[],"decl_id":null,"docs":" The `DataView` view provides a low-level interface for reading and\n writing multiple number types in an `ArrayBuffer` irrespective of the\n platform's endianness.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":880},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":40087,"byte_end":40093,"line_start":851,"line_end":851,"column_start":12,"column_end":18},"name":"buffer","qualname":"<DataView>::buffer","value":"pub fn buffer(&Self) -> ArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" The ArrayBuffer referenced by this view. Fixed at construction time and thus read only.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":883},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":40480,"byte_end":40491,"line_start":858,"line_end":858,"column_start":12,"column_end":23},"name":"byte_length","qualname":"<DataView>::byte_length","value":"pub fn byte_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The length (in bytes) of this view from the start of its ArrayBuffer.\n Fixed at construction time and thus read only.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":40872,"byte_end":40883,"line_start":865,"line_end":865,"column_start":12,"column_end":23},"name":"byte_offset","qualname":"<DataView>::byte_offset","value":"pub fn byte_offset(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The offset (in bytes) of this view from the start of its ArrayBuffer.\n Fixed at construction time and thus read only.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":41240,"byte_end":41248,"line_start":872,"line_end":872,"column_start":12,"column_end":20},"name":"get_int8","qualname":"<DataView>::get_int8","value":"pub fn get_int8(&Self, usize) -> i8","parent":null,"children":[],"decl_id":null,"docs":" The `getInt8()` method gets a signed 8-bit integer (byte) at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":41627,"byte_end":41636,"line_start":879,"line_end":879,"column_start":12,"column_end":21},"name":"get_uint8","qualname":"<DataView>::get_uint8","value":"pub fn get_uint8(&Self, usize) -> u8","parent":null,"children":[],"decl_id":null,"docs":" The `getUint8()` method gets a unsigned 8-bit integer (byte) at the specified\n byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":895},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":42015,"byte_end":42024,"line_start":886,"line_end":886,"column_start":12,"column_end":21},"name":"get_int16","qualname":"<DataView>::get_int16","value":"pub fn get_int16(&Self, usize) -> i16","parent":null,"children":[],"decl_id":null,"docs":" The `getInt16()` method gets a signed 16-bit integer (short) at the specified\n byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":898},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":42404,"byte_end":42420,"line_start":893,"line_end":893,"column_start":12,"column_end":28},"name":"get_int16_endian","qualname":"<DataView>::get_int16_endian","value":"pub fn get_int16_endian(&Self, usize, bool) -> i16","parent":null,"children":[],"decl_id":null,"docs":" The `getInt16()` method gets a signed 16-bit integer (short) at the specified\n byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":901},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":42832,"byte_end":42842,"line_start":900,"line_end":900,"column_start":12,"column_end":22},"name":"get_uint16","qualname":"<DataView>::get_uint16","value":"pub fn get_uint16(&Self, usize) -> u16","parent":null,"children":[],"decl_id":null,"docs":" The `getUint16()` method gets an unsigned 16-bit integer (unsigned short) at the specified\n byte offset from the start of the view.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":904},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":43233,"byte_end":43250,"line_start":907,"line_end":907,"column_start":12,"column_end":29},"name":"get_uint16_endian","qualname":"<DataView>::get_uint16_endian","value":"pub fn get_uint16_endian(&Self, usize, bool) -> u16","parent":null,"children":[],"decl_id":null,"docs":" The `getUint16()` method gets an unsigned 16-bit integer (unsigned short) at the specified\n byte offset from the start of the view.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":907},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":43650,"byte_end":43659,"line_start":914,"line_end":914,"column_start":12,"column_end":21},"name":"get_int32","qualname":"<DataView>::get_int32","value":"pub fn get_int32(&Self, usize) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The `getInt32()` method gets a signed 32-bit integer (long) at the specified\n byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":910},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":44038,"byte_end":44054,"line_start":921,"line_end":921,"column_start":12,"column_end":28},"name":"get_int32_endian","qualname":"<DataView>::get_int32_endian","value":"pub fn get_int32_endian(&Self, usize, bool) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The `getInt32()` method gets a signed 32-bit integer (long) at the specified\n byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":44465,"byte_end":44475,"line_start":928,"line_end":928,"column_start":12,"column_end":22},"name":"get_uint32","qualname":"<DataView>::get_uint32","value":"pub fn get_uint32(&Self, usize) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `getUint32()` method gets an unsigned 32-bit integer (unsigned long) at the specified\n byte offset from the start of the view.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":916},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":44865,"byte_end":44882,"line_start":935,"line_end":935,"column_start":12,"column_end":29},"name":"get_uint32_endian","qualname":"<DataView>::get_uint32_endian","value":"pub fn get_uint32_endian(&Self, usize, bool) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `getUint32()` method gets an unsigned 32-bit integer (unsigned long) at the specified\n byte offset from the start of the view.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":919},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":45287,"byte_end":45298,"line_start":942,"line_end":942,"column_start":12,"column_end":23},"name":"get_float32","qualname":"<DataView>::get_float32","value":"pub fn get_float32(&Self, usize) -> f32","parent":null,"children":[],"decl_id":null,"docs":" The `getFloat32()` method gets a signed 32-bit float (float) at the specified\n byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":922},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":45682,"byte_end":45700,"line_start":949,"line_end":949,"column_start":12,"column_end":30},"name":"get_float32_endian","qualname":"<DataView>::get_float32_endian","value":"pub fn get_float32_endian(&Self, usize, bool) -> f32","parent":null,"children":[],"decl_id":null,"docs":" The `getFloat32()` method gets a signed 32-bit float (float) at the specified\n byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":46106,"byte_end":46117,"line_start":956,"line_end":956,"column_start":12,"column_end":23},"name":"get_float64","qualname":"<DataView>::get_float64","value":"pub fn get_float64(&Self, usize) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `getFloat64()` method gets a signed 64-bit float (double) at the specified\n byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":46502,"byte_end":46520,"line_start":963,"line_end":963,"column_start":12,"column_end":30},"name":"get_float64_endian","qualname":"<DataView>::get_float64_endian","value":"pub fn get_float64_endian(&Self, usize, bool) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `getFloat64()` method gets a signed 64-bit float (double) at the specified\n byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":931},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":46924,"byte_end":46932,"line_start":970,"line_end":970,"column_start":12,"column_end":20},"name":"set_int8","qualname":"<DataView>::set_int8","value":"pub fn set_int8(&Self, usize, i8)","parent":null,"children":[],"decl_id":null,"docs":" The `setInt8()` method stores a signed 8-bit integer (byte) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":934},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":47325,"byte_end":47334,"line_start":977,"line_end":977,"column_start":12,"column_end":21},"name":"set_uint8","qualname":"<DataView>::set_uint8","value":"pub fn set_uint8(&Self, usize, u8)","parent":null,"children":[],"decl_id":null,"docs":" The `setUint8()` method stores an unsigned 8-bit integer (byte) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":937},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":47726,"byte_end":47735,"line_start":984,"line_end":984,"column_start":12,"column_end":21},"name":"set_int16","qualname":"<DataView>::set_int16","value":"pub fn set_int16(&Self, usize, i16)","parent":null,"children":[],"decl_id":null,"docs":" The `setInt16()` method stores a signed 16-bit integer (short) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":940},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":48128,"byte_end":48144,"line_start":991,"line_end":991,"column_start":12,"column_end":28},"name":"set_int16_endian","qualname":"<DataView>::set_int16_endian","value":"pub fn set_int16_endian(&Self, usize, i16, bool)","parent":null,"children":[],"decl_id":null,"docs":" The `setInt16()` method stores a signed 16-bit integer (short) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":943},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":48573,"byte_end":48583,"line_start":998,"line_end":998,"column_start":12,"column_end":22},"name":"set_uint16","qualname":"<DataView>::set_uint16","value":"pub fn set_uint16(&Self, usize, u16)","parent":null,"children":[],"decl_id":null,"docs":" The `setUint16()` method stores an unsigned 16-bit integer (unsigned short) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":946},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":48991,"byte_end":49008,"line_start":1005,"line_end":1005,"column_start":12,"column_end":29},"name":"set_uint16_endian","qualname":"<DataView>::set_uint16_endian","value":"pub fn set_uint16_endian(&Self, usize, u16, bool)","parent":null,"children":[],"decl_id":null,"docs":" The `setUint16()` method stores an unsigned 16-bit integer (unsigned short) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":949},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":49421,"byte_end":49430,"line_start":1012,"line_end":1012,"column_start":12,"column_end":21},"name":"set_int32","qualname":"<DataView>::set_int32","value":"pub fn set_int32(&Self, usize, i32)","parent":null,"children":[],"decl_id":null,"docs":" The `setInt32()` method stores a signed 32-bit integer (long) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":952},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":49822,"byte_end":49838,"line_start":1019,"line_end":1019,"column_start":12,"column_end":28},"name":"set_int32_endian","qualname":"<DataView>::set_int32_endian","value":"pub fn set_int32_endian(&Self, usize, i32, bool)","parent":null,"children":[],"decl_id":null,"docs":" The `setInt32()` method stores a signed 32-bit integer (long) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":955},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":50266,"byte_end":50276,"line_start":1026,"line_end":1026,"column_start":12,"column_end":22},"name":"set_uint32","qualname":"<DataView>::set_uint32","value":"pub fn set_uint32(&Self, usize, u32)","parent":null,"children":[],"decl_id":null,"docs":" The `setUint32()` method stores an unsigned 32-bit integer (unsigned long) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":958},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":50683,"byte_end":50700,"line_start":1033,"line_end":1033,"column_start":12,"column_end":29},"name":"set_uint32_endian","qualname":"<DataView>::set_uint32_endian","value":"pub fn set_uint32_endian(&Self, usize, u32, bool)","parent":null,"children":[],"decl_id":null,"docs":" The `setUint32()` method stores an unsigned 32-bit integer (unsigned long) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":961},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":51118,"byte_end":51129,"line_start":1040,"line_end":1040,"column_start":12,"column_end":23},"name":"set_float32","qualname":"<DataView>::set_float32","value":"pub fn set_float32(&Self, usize, f32)","parent":null,"children":[],"decl_id":null,"docs":" The `setFloat32()` method stores a signed 32-bit float (float) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":964},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":51526,"byte_end":51544,"line_start":1047,"line_end":1047,"column_start":12,"column_end":30},"name":"set_float32_endian","qualname":"<DataView>::set_float32_endian","value":"pub fn set_float32_endian(&Self, usize, f32, bool)","parent":null,"children":[],"decl_id":null,"docs":" The `setFloat32()` method stores a signed 32-bit float (float) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":967},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":51963,"byte_end":51974,"line_start":1054,"line_end":1054,"column_start":12,"column_end":23},"name":"set_float64","qualname":"<DataView>::set_float64","value":"pub fn set_float64(&Self, usize, f64)","parent":null,"children":[],"decl_id":null,"docs":" The `setFloat64()` method stores a signed 64-bit float (double) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":970},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":52372,"byte_end":52390,"line_start":1061,"line_end":1061,"column_start":12,"column_end":30},"name":"set_float64_endian","qualname":"<DataView>::set_float64_endian","value":"pub fn set_float64_endian(&Self, usize, f64, bool)","parent":null,"children":[],"decl_id":null,"docs":" The `setFloat64()` method stores a signed 64-bit float (double) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39201,"byte_end":39216,"line_start":833,"line_end":833,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1088},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":52624,"byte_end":52629,"line_start":1069,"line_end":1069,"column_start":14,"column_end":19},"name":"Error","qualname":"::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":1089}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":52474,"byte_end":52489,"line_start":1065,"line_end":1065,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":52474,"byte_end":52489,"line_start":1065,"line_end":1065,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":52474,"byte_end":52489,"line_start":1065,"line_end":1065,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1071},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":53069,"byte_end":53072,"line_start":1078,"line_end":1078,"column_start":12,"column_end":15},"name":"new","qualname":"<Error>::new","value":"pub fn new(&str) -> Error","parent":null,"children":[],"decl_id":null,"docs":" The Error constructor creates an error object.\n Instances of Error objects are thrown when runtime errors occur.\n The Error object can also be used as a base object for user-defined exceptions.\n See below for standard built-in error types.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":52474,"byte_end":52489,"line_start":1065,"line_end":1065,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":52474,"byte_end":52489,"line_start":1065,"line_end":1065,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1074},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":53365,"byte_end":53372,"line_start":1084,"line_end":1084,"column_start":12,"column_end":19},"name":"message","qualname":"<Error>::message","value":"pub fn message(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The message property is a human-readable description of the error.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":52474,"byte_end":52489,"line_start":1065,"line_end":1065,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":52474,"byte_end":52489,"line_start":1065,"line_end":1065,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1077},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":53459,"byte_end":53470,"line_start":1086,"line_end":1086,"column_start":12,"column_end":23},"name":"set_message","qualname":"<Error>::set_message","value":"pub fn set_message(&Self, &str)","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":52474,"byte_end":52489,"line_start":1065,"line_end":1065,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":52474,"byte_end":52489,"line_start":1065,"line_end":1065,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":53787,"byte_end":53791,"line_start":1092,"line_end":1092,"column_start":12,"column_end":16},"name":"name","qualname":"<Error>::name","value":"pub fn name(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The name property represents a name for the type of error. The initial value is \"Error\".","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":52474,"byte_end":52489,"line_start":1065,"line_end":1065,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":52474,"byte_end":52489,"line_start":1065,"line_end":1065,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1083},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":53878,"byte_end":53886,"line_start":1094,"line_end":1094,"column_start":12,"column_end":20},"name":"set_name","qualname":"<Error>::set_name","value":"pub fn set_name(&Self, &str)","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":52474,"byte_end":52489,"line_start":1065,"line_end":1065,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":52474,"byte_end":52489,"line_start":1065,"line_end":1065,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1086},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":54196,"byte_end":54205,"line_start":1100,"line_end":1100,"column_start":12,"column_end":21},"name":"to_string","qualname":"<Error>::to_string","value":"pub fn to_string(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toString()` method returns a string representing the specified Error object","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":52474,"byte_end":52489,"line_start":1065,"line_end":1065,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":52474,"byte_end":52489,"line_start":1065,"line_end":1065,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1199},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":54420,"byte_end":54429,"line_start":1108,"line_end":1108,"column_start":14,"column_end":23},"name":"EvalError","qualname":"::EvalError","value":"EvalError {  }","parent":null,"children":[{"krate":0,"index":1200}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":54249,"byte_end":54264,"line_start":1104,"line_end":1104,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":54249,"byte_end":54264,"line_start":1104,"line_end":1104,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":54249,"byte_end":54264,"line_start":1104,"line_end":1104,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1197},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":54814,"byte_end":54817,"line_start":1116,"line_end":1116,"column_start":12,"column_end":15},"name":"new","qualname":"<EvalError>::new","value":"pub fn new(&str) -> EvalError","parent":null,"children":[],"decl_id":null,"docs":" The EvalError object indicates an error regarding the global eval() function. This\n exception is not thrown by JavaScript anymore, however the EvalError object remains for\n compatibility.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":54249,"byte_end":54264,"line_start":1104,"line_end":1104,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":54249,"byte_end":54264,"line_start":1104,"line_end":1104,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1343},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":55050,"byte_end":55058,"line_start":1124,"line_end":1124,"column_start":14,"column_end":22},"name":"Function","qualname":"::Function","value":"Function {  }","parent":null,"children":[{"krate":0,"index":1344}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":54862,"byte_end":54877,"line_start":1120,"line_end":1120,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":54862,"byte_end":54877,"line_start":1120,"line_end":1120,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":54862,"byte_end":54877,"line_start":1120,"line_end":1120,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1299},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":55691,"byte_end":55704,"line_start":1135,"line_end":1135,"column_start":12,"column_end":25},"name":"new_with_args","qualname":"<Function>::new_with_args","value":"pub fn new_with_args(&str, &str) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The `Function` constructor creates a new `Function` object. Calling the\n constructor directly can create functions dynamically, but suffers from\n security and similar (but far less significant) performance issues\n similar to `eval`. However, unlike `eval`, the `Function` constructor\n allows executing code in the global scope, prompting better programming\n habits and allowing for more efficient code minification.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":54862,"byte_end":54877,"line_start":1120,"line_end":1120,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":54862,"byte_end":54877,"line_start":1120,"line_end":1120,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1302},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":56373,"byte_end":56384,"line_start":1146,"line_end":1146,"column_start":12,"column_end":23},"name":"new_no_args","qualname":"<Function>::new_no_args","value":"pub fn new_no_args(&str) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The `Function` constructor creates a new `Function` object. Calling the\n constructor directly can create functions dynamically, but suffers from\n security and similar (but far less significant) performance issues\n similar to `eval`. However, unlike `eval`, the `Function` constructor\n allows executing code in the global scope, prompting better programming\n habits and allowing for more efficient code minification.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":54862,"byte_end":54877,"line_start":1120,"line_end":1120,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":54862,"byte_end":54877,"line_start":1120,"line_end":1120,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1305},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":56731,"byte_end":56736,"line_start":1153,"line_end":1153,"column_start":12,"column_end":17},"name":"apply","qualname":"<Function>::apply","value":"pub fn apply(&Self, &JsValue, &Array) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `apply()` method calls a function with a given this value, and arguments provided as an array\n (or an array-like object).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":54862,"byte_end":54877,"line_start":1120,"line_end":1120,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":54862,"byte_end":54877,"line_start":1120,"line_end":1120,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1308},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":57125,"byte_end":57130,"line_start":1160,"line_end":1160,"column_start":12,"column_end":17},"name":"call0","qualname":"<Function>::call0","value":"pub fn call0(&Self, &JsValue) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `call()` method calls a function with a given this value and\n arguments provided individually.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":54862,"byte_end":54877,"line_start":1120,"line_end":1120,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":54862,"byte_end":54877,"line_start":1120,"line_end":1120,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1311},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":57505,"byte_end":57510,"line_start":1167,"line_end":1167,"column_start":12,"column_end":17},"name":"call1","qualname":"<Function>::call1","value":"pub fn call1(&Self, &JsValue, &JsValue) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `call()` method calls a function with a given this value and\n arguments provided individually.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":54862,"byte_end":54877,"line_start":1120,"line_end":1120,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":54862,"byte_end":54877,"line_start":1120,"line_end":1120,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1314},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":57901,"byte_end":57906,"line_start":1174,"line_end":1174,"column_start":12,"column_end":17},"name":"call2","qualname":"<Function>::call2","value":"pub fn call2(&Self, &JsValue, &JsValue, &JsValue) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `call()` method calls a function with a given this value and\n arguments provided individually.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":54862,"byte_end":54877,"line_start":1120,"line_end":1120,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":54862,"byte_end":54877,"line_start":1120,"line_end":1120,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1317},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":58352,"byte_end":58357,"line_start":1186,"line_end":1186,"column_start":12,"column_end":17},"name":"call3","qualname":"<Function>::call3","value":"pub fn call3(&Self, &JsValue, &JsValue, &JsValue, &JsValue)\n-> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `call()` method calls a function with a given this value and\n arguments provided individually.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":54862,"byte_end":54877,"line_start":1120,"line_end":1120,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":54862,"byte_end":54877,"line_start":1120,"line_end":1120,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1320},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":58923,"byte_end":58927,"line_start":1199,"line_end":1199,"column_start":12,"column_end":16},"name":"bind","qualname":"<Function>::bind","value":"pub fn bind(&Self, &JsValue) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The `bind()` method creates a new function that, when called, has its this keyword set to the provided value,\n with a given sequence of arguments preceding any provided when the new function is called.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":54862,"byte_end":54877,"line_start":1120,"line_end":1120,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":54862,"byte_end":54877,"line_start":1120,"line_end":1120,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1323},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":59382,"byte_end":59387,"line_start":1206,"line_end":1206,"column_start":12,"column_end":17},"name":"bind0","qualname":"<Function>::bind0","value":"pub fn bind0(&Self, &JsValue) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The `bind()` method creates a new function that, when called, has its this keyword set to the provided value,\n with a given sequence of arguments preceding any provided when the new function is called.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":54862,"byte_end":54877,"line_start":1120,"line_end":1120,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":54862,"byte_end":54877,"line_start":1120,"line_end":1120,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1326},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":59842,"byte_end":59847,"line_start":1213,"line_end":1213,"column_start":12,"column_end":17},"name":"bind1","qualname":"<Function>::bind1","value":"pub fn bind1(&Self, &JsValue, &JsValue) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The `bind()` method creates a new function that, when called, has its this keyword set to the provided value,\n with a given sequence of arguments preceding any provided when the new function is called.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":54862,"byte_end":54877,"line_start":1120,"line_end":1120,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":54862,"byte_end":54877,"line_start":1120,"line_end":1120,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1329},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":60318,"byte_end":60323,"line_start":1220,"line_end":1220,"column_start":12,"column_end":17},"name":"bind2","qualname":"<Function>::bind2","value":"pub fn bind2(&Self, &JsValue, &JsValue, &JsValue) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The `bind()` method creates a new function that, when called, has its this keyword set to the provided value,\n with a given sequence of arguments preceding any provided when the new function is called.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":54862,"byte_end":54877,"line_start":1120,"line_end":1120,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":54862,"byte_end":54877,"line_start":1120,"line_end":1120,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1332},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":60810,"byte_end":60815,"line_start":1227,"line_end":1227,"column_start":12,"column_end":17},"name":"bind3","qualname":"<Function>::bind3","value":"pub fn bind3(&Self, &JsValue, &JsValue, &JsValue, &JsValue) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The `bind()` method creates a new function that, when called, has its this keyword set to the provided value,\n with a given sequence of arguments preceding any provided when the new function is called.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":54862,"byte_end":54877,"line_start":1120,"line_end":1120,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":54862,"byte_end":54877,"line_start":1120,"line_end":1120,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1335},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":61242,"byte_end":61248,"line_start":1239,"line_end":1239,"column_start":12,"column_end":18},"name":"length","qualname":"<Function>::length","value":"pub fn length(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The length property indicates the number of arguments expected by the function.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":54862,"byte_end":54877,"line_start":1120,"line_end":1120,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":54862,"byte_end":54877,"line_start":1120,"line_end":1120,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1338},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":61647,"byte_end":61651,"line_start":1247,"line_end":1247,"column_start":12,"column_end":16},"name":"name","qualname":"<Function>::name","value":"pub fn name(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" A Function object's read-only name property indicates the function's\n name as specified when it was created or \"anonymous\" for functions\n created anonymously.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":54862,"byte_end":54877,"line_start":1120,"line_end":1120,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":54862,"byte_end":54877,"line_start":1120,"line_end":1120,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1341},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":61973,"byte_end":61982,"line_start":1253,"line_end":1253,"column_start":12,"column_end":21},"name":"to_string","qualname":"<Function>::to_string","value":"pub fn to_string(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toString()` method returns a string representing the source code of the function.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":54862,"byte_end":54877,"line_start":1120,"line_end":1120,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":54862,"byte_end":54877,"line_start":1120,"line_end":1120,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":62327,"byte_end":62335,"line_start":1263,"line_end":1263,"column_start":12,"column_end":20},"name":"try_from","qualname":"<Function>::try_from","value":"pub fn try_from(&JsValue) -> Option<&Function>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Function` value of this JS value if it's an instance of a\n function.","sig":null,"attributes":[{"value":"/ Returns the `Function` value of this JS value if it's an instance of a","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":62036,"byte_end":62110,"line_start":1257,"line_end":1257,"column_start":5,"column_end":79}},{"value":"/ function.","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":62115,"byte_end":62128,"line_start":1258,"line_end":1258,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":62133,"byte_end":62136,"line_start":1259,"line_end":1259,"column_start":5,"column_end":8}},{"value":"/ If this JS value is not an instance of a function then this returns","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":62141,"byte_end":62212,"line_start":1260,"line_end":1260,"column_start":5,"column_end":76}},{"value":"/ `None`.","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":62217,"byte_end":62228,"line_start":1261,"line_end":1261,"column_start":5,"column_end":16}},{"value":"deprecated(note =\n             \"recommended to use dyn_ref instead which is now equivalent\")","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":62233,"byte_end":62315,"line_start":1262,"line_end":1262,"column_start":5,"column_end":87}}]},{"kind":"Struct","id":{"krate":0,"index":1450},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":62681,"byte_end":62690,"line_start":1279,"line_end":1279,"column_start":14,"column_end":23},"name":"Generator","qualname":"::Generator","value":"Generator {  }","parent":null,"children":[{"krate":0,"index":1451}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":62512,"byte_end":62527,"line_start":1275,"line_end":1275,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":62512,"byte_end":62527,"line_start":1275,"line_end":1275,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":62512,"byte_end":62527,"line_start":1275,"line_end":1275,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1442},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":63060,"byte_end":63064,"line_start":1286,"line_end":1286,"column_start":12,"column_end":16},"name":"next","qualname":"<Generator>::next","value":"pub fn next(&Self, &JsValue) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `next()` method returns an object with two properties done and value.\n You can also provide a parameter to the next method to send a value to the generator.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":62512,"byte_end":62527,"line_start":1275,"line_end":1275,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":62512,"byte_end":62527,"line_start":1275,"line_end":1275,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1445},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":63416,"byte_end":63423,"line_start":1292,"line_end":1292,"column_start":12,"column_end":19},"name":"return_","qualname":"<Generator>::return_","value":"pub fn return_(&Self, &JsValue) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The `return()` method returns the given value and finishes the generator.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":62512,"byte_end":62527,"line_start":1275,"line_end":1275,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":62512,"byte_end":62527,"line_start":1275,"line_end":1275,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1448},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":63825,"byte_end":63830,"line_start":1299,"line_end":1299,"column_start":12,"column_end":17},"name":"throw","qualname":"<Generator>::throw","value":"pub fn throw(&Self, &Error) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `throw()` method resumes the execution of a generator by throwing an error into it\n and returns an object with two properties done and value.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":62512,"byte_end":62527,"line_start":1275,"line_end":1275,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":62512,"byte_end":62527,"line_start":1275,"line_end":1275,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1572},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":64061,"byte_end":64064,"line_start":1307,"line_end":1307,"column_start":14,"column_end":17},"name":"Map","qualname":"::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":1573}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":63903,"byte_end":63918,"line_start":1303,"line_end":1303,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":63903,"byte_end":63918,"line_start":1303,"line_end":1303,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":63903,"byte_end":63918,"line_start":1303,"line_end":1303,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1549},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":64303,"byte_end":64308,"line_start":1313,"line_end":1313,"column_start":12,"column_end":17},"name":"clear","qualname":"<Map>::clear","value":"pub fn clear(&Self)","parent":null,"children":[],"decl_id":null,"docs":" The `clear()` method removes all elements from a Map object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":63903,"byte_end":63918,"line_start":1303,"line_end":1303,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":63903,"byte_end":63918,"line_start":1303,"line_end":1303,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1552},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":64570,"byte_end":64576,"line_start":1319,"line_end":1319,"column_start":12,"column_end":18},"name":"delete","qualname":"<Map>::delete","value":"pub fn delete(&Self, &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `delete()` method removes the specified element from a Map object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":63903,"byte_end":63918,"line_start":1303,"line_end":1303,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":63903,"byte_end":63918,"line_start":1303,"line_end":1303,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1555},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":65202,"byte_end":65210,"line_start":1333,"line_end":1333,"column_start":12,"column_end":20},"name":"for_each","qualname":"<Map>::for_each","value":"pub fn for_each(&Self, &mut dyn FnMut(JsValue, JsValue) -> ())","parent":null,"children":[],"decl_id":null,"docs":" The `forEach()` method executes a provided function once per each\n key/value pair in the Map object, in insertion order.\n Note that in Javascript land the `Key` and `Value` are reversed compared to normal expectations:\n # Examples\n ```\n let js_map = Map::new();\n js_map.for_each(&mut |value, key| {\n     // Do something here...\n })\n ```\n [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/forEach)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":63903,"byte_end":63918,"line_start":1303,"line_end":1303,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":63903,"byte_end":63918,"line_start":1303,"line_end":1303,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1558},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":65508,"byte_end":65511,"line_start":1339,"line_end":1339,"column_start":12,"column_end":15},"name":"get","qualname":"<Map>::get","value":"pub fn get(&Self, &JsValue) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The `get()` method returns a specified element from a Map object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":63903,"byte_end":63918,"line_start":1303,"line_end":1303,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":63903,"byte_end":63918,"line_start":1303,"line_end":1303,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1561},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":65838,"byte_end":65841,"line_start":1346,"line_end":1346,"column_start":12,"column_end":15},"name":"has","qualname":"<Map>::has","value":"pub fn has(&Self, &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `has()` method returns a boolean indicating whether an element with\n the specified key exists or not.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":63903,"byte_end":63918,"line_start":1303,"line_end":1303,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":63903,"byte_end":63918,"line_start":1303,"line_end":1303,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1564},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":66184,"byte_end":66187,"line_start":1353,"line_end":1353,"column_start":12,"column_end":15},"name":"new","qualname":"<Map>::new","value":"pub fn new() -> Map","parent":null,"children":[],"decl_id":null,"docs":" The Map object holds key-value pairs. Any value (both objects and\n primitive values) maybe used as either a key or a value.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":63903,"byte_end":63918,"line_start":1303,"line_end":1303,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":63903,"byte_end":63918,"line_start":1303,"line_end":1303,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1567},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":66474,"byte_end":66477,"line_start":1360,"line_end":1360,"column_start":12,"column_end":15},"name":"set","qualname":"<Map>::set","value":"pub fn set(&Self, &JsValue, &JsValue) -> Map","parent":null,"children":[],"decl_id":null,"docs":" The `set()` method adds or updates an element with a specified key\n and value to a Map object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":63903,"byte_end":63918,"line_start":1303,"line_end":1303,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":63903,"byte_end":63918,"line_start":1303,"line_end":1303,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1570},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":66904,"byte_end":66908,"line_start":1368,"line_end":1368,"column_start":12,"column_end":16},"name":"size","qualname":"<Map>::size","value":"pub fn size(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The value of size is an integer representing how many entries\n the Map object has. A set accessor function for size is undefined;\n you can not change this property.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":63903,"byte_end":63918,"line_start":1303,"line_end":1303,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":63903,"byte_end":63918,"line_start":1303,"line_end":1303,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1586},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":67394,"byte_end":67401,"line_start":1386,"line_end":1386,"column_start":12,"column_end":19},"name":"entries","qualname":"<Map>::entries","value":"pub fn entries(&Self) -> Iterator","parent":null,"children":[],"decl_id":null,"docs":" The `entries()` method returns a new Iterator object that contains\n the [key, value] pairs for each element in the Map object in\n insertion order.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":67027,"byte_end":67042,"line_start":1378,"line_end":1378,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":67027,"byte_end":67042,"line_start":1378,"line_end":1378,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1589},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":67738,"byte_end":67742,"line_start":1393,"line_end":1393,"column_start":12,"column_end":16},"name":"keys","qualname":"<Map>::keys","value":"pub fn keys(&Self) -> Iterator","parent":null,"children":[],"decl_id":null,"docs":" The `keys()` method returns a new Iterator object that contains the\n keys for each element in the Map object in insertion order.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":67027,"byte_end":67042,"line_start":1378,"line_end":1378,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":67027,"byte_end":67042,"line_start":1378,"line_end":1378,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1592},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":68085,"byte_end":68091,"line_start":1400,"line_end":1400,"column_start":12,"column_end":18},"name":"values","qualname":"<Map>::values","value":"pub fn values(&Self) -> Iterator","parent":null,"children":[],"decl_id":null,"docs":" The `values()` method returns a new Iterator object that contains the\n values for each element in the Map object in insertion order.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":67027,"byte_end":67042,"line_start":1378,"line_end":1378,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":67027,"byte_end":67042,"line_start":1378,"line_end":1378,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1673},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":68559,"byte_end":68567,"line_start":1412,"line_end":1412,"column_start":14,"column_end":22},"name":"Iterator","qualname":"::Iterator","value":"Iterator {  }","parent":null,"children":[{"krate":0,"index":1674}],"decl_id":null,"docs":" Any object that conforms to the JS iterator protocol. For example,\n something returned by `myArray[Symbol.iterator]()`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":68132,"byte_end":68147,"line_start":1404,"line_end":1404,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":68132,"byte_end":68147,"line_start":1404,"line_end":1404,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":68132,"byte_end":68147,"line_start":1404,"line_end":1404,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1671},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":68907,"byte_end":68911,"line_start":1419,"line_end":1419,"column_start":12,"column_end":16},"name":"next","qualname":"<Iterator>::next","value":"pub fn next(&Self) -> Result<IteratorNext, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `next()` method always has to return an object with appropriate\n properties including done and value. If a non-object value gets returned\n (such as false or undefined), a TypeError (\"iterator.next() returned a\n non-object value\") will be thrown.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":68132,"byte_end":68147,"line_start":1404,"line_end":1404,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":68132,"byte_end":68147,"line_start":1404,"line_end":1404,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1837},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":69854,"byte_end":69867,"line_start":1451,"line_end":1451,"column_start":14,"column_end":27},"name":"AsyncIterator","qualname":"::AsyncIterator","value":"AsyncIterator {  }","parent":null,"children":[{"krate":0,"index":1838}],"decl_id":null,"docs":" Any object that conforms to the JS async iterator protocol. For example,\n something returned by `myObject[Symbol.asyncIterator]()`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":69400,"byte_end":69415,"line_start":1443,"line_end":1443,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":69400,"byte_end":69415,"line_start":1443,"line_end":1443,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":69400,"byte_end":69415,"line_start":1443,"line_end":1443,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1835},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":70235,"byte_end":70239,"line_start":1458,"line_end":1458,"column_start":12,"column_end":16},"name":"next","qualname":"<AsyncIterator>::next","value":"pub fn next(&Self) -> Result<Promise, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `next()` method always has to return a Promise which resolves to an object\n with appropriate properties including done and value. If a non-object value\n gets returned (such as false or undefined), a TypeError (\"iterator.next()\n returned a non-object value\") will be thrown.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":69400,"byte_end":69415,"line_start":1443,"line_end":1443,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":69400,"byte_end":69415,"line_start":1443,"line_end":1443,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":63},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":70455,"byte_end":70459,"line_start":1464,"line_end":1464,"column_start":12,"column_end":16},"name":"Iter","qualname":"::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":66}],"decl_id":null,"docs":" An iterator over the JS `Symbol.iterator` iteration protocol.","sig":null,"attributes":[{"value":"/ An iterator over the JS `Symbol.iterator` iteration protocol.","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":70294,"byte_end":70359,"line_start":1461,"line_end":1461,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":70360,"byte_end":70363,"line_start":1462,"line_end":1462,"column_start":1,"column_end":4}},{"value":"/ Use the `IntoIterator for &js_sys::Iterator` implementation to create this.","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":70364,"byte_end":70443,"line_start":1463,"line_end":1463,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":67},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":70673,"byte_end":70681,"line_start":1472,"line_end":1472,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69}],"decl_id":null,"docs":" An iterator over the JS `Symbol.iterator` iteration protocol.","sig":null,"attributes":[{"value":"/ An iterator over the JS `Symbol.iterator` iteration protocol.","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":70513,"byte_end":70578,"line_start":1469,"line_end":1469,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":70579,"byte_end":70582,"line_start":1470,"line_end":1470,"column_start":1,"column_end":4}},{"value":"/ Use the `IntoIterator for js_sys::Iterator` implementation to create this.","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":70583,"byte_end":70661,"line_start":1471,"line_end":1471,"column_start":1,"column_end":79}}]},{"kind":"Function","id":{"krate":0,"index":91},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":72246,"byte_end":72254,"line_start":1548,"line_end":1548,"column_start":8,"column_end":16},"name":"try_iter","qualname":"::try_iter","value":"pub fn try_iter(&JsValue) -> Result<Option<IntoIter>, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator over `val` using the JS iteration protocol and\n `Symbol.iterator`.\n","sig":null,"attributes":[{"value":"/ Create an iterator over `val` using the JS iteration protocol and","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":72146,"byte_end":72215,"line_start":1546,"line_end":1546,"column_start":1,"column_end":70}},{"value":"/ `Symbol.iterator`.","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":72216,"byte_end":72238,"line_start":1547,"line_end":1547,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":1934},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73055,"byte_end":73067,"line_start":1573,"line_end":1573,"column_start":14,"column_end":26},"name":"IteratorNext","qualname":"::IteratorNext","value":"IteratorNext {  }","parent":null,"children":[{"krate":0,"index":1935}],"decl_id":null,"docs":" The result of calling `next()` on a JS iterator.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":72711,"byte_end":72726,"line_start":1566,"line_end":1566,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":72711,"byte_end":72726,"line_start":1566,"line_end":1566,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":72711,"byte_end":72726,"line_start":1566,"line_end":1566,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1929},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73495,"byte_end":73499,"line_start":1583,"line_end":1583,"column_start":12,"column_end":16},"name":"done","qualname":"<IteratorNext>::done","value":"pub fn done(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Has the value `true` if the iterator is past the end of the iterated\n sequence. In this case value optionally specifies the return value of\n the iterator.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":72711,"byte_end":72726,"line_start":1566,"line_end":1566,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":72711,"byte_end":72726,"line_start":1566,"line_end":1566,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1932},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73687,"byte_end":73692,"line_start":1588,"line_end":1588,"column_start":12,"column_end":17},"name":"value","qualname":"<IteratorNext>::value","value":"pub fn value(&Self) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" Any JavaScript value returned by the iterator. Can be omitted when done\n is true.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":72711,"byte_end":72726,"line_start":1566,"line_end":1566,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":72711,"byte_end":72726,"line_start":1566,"line_end":1566,"column_start":1,"column_end":16}}]},{"kind":"Mod","id":{"krate":0,"index":92},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73762,"byte_end":73766,"line_start":1592,"line_end":1592,"column_start":9,"column_end":13},"name":"Math","qualname":"::Math","value":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":1947},{"krate":0,"index":1949},{"krate":0,"index":1951},{"krate":0,"index":1953},{"krate":0,"index":1955},{"krate":0,"index":1957},{"krate":0,"index":1959},{"krate":0,"index":1961},{"krate":0,"index":1963},{"krate":0,"index":1965},{"krate":0,"index":1967},{"krate":0,"index":1969},{"krate":0,"index":1971},{"krate":0,"index":1973},{"krate":0,"index":1975},{"krate":0,"index":1977},{"krate":0,"index":1979},{"krate":0,"index":1981},{"krate":0,"index":1983},{"krate":0,"index":1985},{"krate":0,"index":1987},{"krate":0,"index":1989},{"krate":0,"index":1991},{"krate":0,"index":1993},{"krate":0,"index":1995},{"krate":0,"index":1997},{"krate":0,"index":1999},{"krate":0,"index":2001},{"krate":0,"index":2003},{"krate":0,"index":2005},{"krate":0,"index":2007},{"krate":0,"index":2009},{"krate":0,"index":2011},{"krate":0,"index":2013},{"krate":0,"index":2015}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73729,"byte_end":73753,"line_start":1591,"line_end":1591,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":1947},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":74148,"byte_end":74151,"line_start":1603,"line_end":1603,"column_start":16,"column_end":19},"name":"abs","qualname":"::Math::abs","value":"pub fn abs(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.abs()` function returns the absolute value of a number, that is\n Math.abs(x) = |x|","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1949},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":74566,"byte_end":74570,"line_start":1611,"line_end":1611,"column_start":16,"column_end":20},"name":"acos","qualname":"::Math::acos","value":"pub fn acos(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.acos()` function returns the arccosine (in radians) of a\n number, that is ∀x∊[-1;1]\n Math.acos(x) = arccos(x) = the unique y∊[0;π] such that cos(y)=x","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1951},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":74984,"byte_end":74989,"line_start":1619,"line_end":1619,"column_start":16,"column_end":21},"name":"acosh","qualname":"::Math::acosh","value":"pub fn acosh(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.acosh()` function returns the hyperbolic arc-cosine of a\n number, that is ∀x ≥ 1\n Math.acosh(x) = arcosh(x) = the unique y ≥ 0 such that cosh(y) = x","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1953},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":75410,"byte_end":75414,"line_start":1627,"line_end":1627,"column_start":16,"column_end":20},"name":"asin","qualname":"::Math::asin","value":"pub fn asin(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.asin()` function returns the arcsine (in radians) of a\n number, that is ∀x ∊ [-1;1]\n Math.asin(x) = arcsin(x) = the unique y∊[-π2;π2] such that sin(y) = x","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1955},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":75796,"byte_end":75801,"line_start":1634,"line_end":1634,"column_start":16,"column_end":21},"name":"asinh","qualname":"::Math::asinh","value":"pub fn asinh(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.asinh()` function returns the hyperbolic arcsine of a\n number, that is Math.asinh(x) = arsinh(x) = the unique y such that sinh(y) = x","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1957},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":76074,"byte_end":76078,"line_start":1640,"line_end":1640,"column_start":16,"column_end":20},"name":"atan","qualname":"::Math::atan","value":"pub fn atan(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.atan()` function returns the arctangent (in radians) of a\n number, that is Math.atan(x) = arctan(x) = the unique y ∊ [-π2;π2]such that\n tan(y) = x","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1959},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":76402,"byte_end":76407,"line_start":1647,"line_end":1647,"column_start":16,"column_end":21},"name":"atan2","qualname":"::Math::atan2","value":"pub fn atan2(f64, f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.atan2()` function returns the arctangent of the quotient of\n its arguments.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1961},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":76830,"byte_end":76835,"line_start":1655,"line_end":1655,"column_start":16,"column_end":21},"name":"atanh","qualname":"::Math::atanh","value":"pub fn atanh(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.atanh()` function returns the hyperbolic arctangent of a number,\n that is ∀x ∊ (-1,1), Math.atanh(x) = arctanh(x) = the unique y such that\n tanh(y) = x","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1963},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":77196,"byte_end":77200,"line_start":1662,"line_end":1662,"column_start":16,"column_end":20},"name":"cbrt","qualname":"::Math::cbrt","value":"pub fn cbrt(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.cbrt() `function returns the cube root of a number, that is\n Math.cbrt(x) = ∛x = the unique y such that y^3 = x","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1965},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":77535,"byte_end":77539,"line_start":1669,"line_end":1669,"column_start":16,"column_end":20},"name":"ceil","qualname":"::Math::ceil","value":"pub fn ceil(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.ceil()` function returns the smallest integer greater than\n or equal to a given number.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1967},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":77895,"byte_end":77900,"line_start":1676,"line_end":1676,"column_start":16,"column_end":21},"name":"clz32","qualname":"::Math::clz32","value":"pub fn clz32(i32) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `Math.clz32()` function returns the number of leading zero bits in\n the 32-bit binary representation of a number.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1969},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":78300,"byte_end":78303,"line_start":1683,"line_end":1683,"column_start":16,"column_end":19},"name":"cos","qualname":"::Math::cos","value":"pub fn cos(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.cos()` static function returns the cosine of the specified angle,\n which must be specified in radians. This value is length(adjacent)/length(hypotenuse).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1971},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":78655,"byte_end":78659,"line_start":1690,"line_end":1690,"column_start":16,"column_end":20},"name":"cosh","qualname":"::Math::cosh","value":"pub fn cosh(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.cosh()` function returns the hyperbolic cosine of a number,\n that can be expressed using the constant e.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1973},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":79055,"byte_end":79058,"line_start":1697,"line_end":1697,"column_start":16,"column_end":19},"name":"exp","qualname":"::Math::exp","value":"pub fn exp(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.exp()` function returns e^x, where x is the argument, and e is Euler's number\n (also known as Napier's constant), the base of the natural logarithms.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1975},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":79409,"byte_end":79414,"line_start":1704,"line_end":1704,"column_start":16,"column_end":21},"name":"expm1","qualname":"::Math::expm1","value":"pub fn expm1(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.expm1()` function returns e^x - 1, where x is the argument, and e the base of the\n natural logarithms.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1977},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":79747,"byte_end":79752,"line_start":1711,"line_end":1711,"column_start":16,"column_end":21},"name":"floor","qualname":"::Math::floor","value":"pub fn floor(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.floor()` function returns the largest integer less than or\n equal to a given number.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1979},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":80099,"byte_end":80105,"line_start":1718,"line_end":1718,"column_start":16,"column_end":22},"name":"fround","qualname":"::Math::fround","value":"pub fn fround(f64) -> f32","parent":null,"children":[],"decl_id":null,"docs":" The `Math.fround()` function returns the nearest 32-bit single precision float representation\n of a Number.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1981},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":80424,"byte_end":80429,"line_start":1724,"line_end":1724,"column_start":16,"column_end":21},"name":"hypot","qualname":"::Math::hypot","value":"pub fn hypot(f64, f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.hypot()` function returns the square root of the sum of squares of its arguments.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1983},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":80780,"byte_end":80784,"line_start":1731,"line_end":1731,"column_start":16,"column_end":20},"name":"imul","qualname":"::Math::imul","value":"pub fn imul(i32, i32) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The `Math.imul()` function returns the result of the C-like 32-bit multiplication of the\n two parameters.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1985},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":81183,"byte_end":81186,"line_start":1738,"line_end":1738,"column_start":16,"column_end":19},"name":"log","qualname":"::Math::log","value":"pub fn log(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.log()` function returns the natural logarithm (base e) of a number.\n The JavaScript `Math.log()` function is equivalent to ln(x) in mathematics.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1987},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":81484,"byte_end":81489,"line_start":1744,"line_end":1744,"column_start":16,"column_end":21},"name":"log10","qualname":"::Math::log10","value":"pub fn log10(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.log10()` function returns the base 10 logarithm of a number.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1989},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":81788,"byte_end":81793,"line_start":1749,"line_end":1749,"column_start":16,"column_end":21},"name":"log1p","qualname":"::Math::log1p","value":"pub fn log1p(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.log1p()` function returns the natural logarithm (base e) of 1 + a number.\n [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/log1p)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1991},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":82088,"byte_end":82092,"line_start":1755,"line_end":1755,"column_start":16,"column_end":20},"name":"log2","qualname":"::Math::log2","value":"pub fn log2(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.log2()` function returns the base 2 logarithm of a number.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1993},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":82379,"byte_end":82382,"line_start":1761,"line_end":1761,"column_start":16,"column_end":19},"name":"max","qualname":"::Math::max","value":"pub fn max(f64, f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.max()` function returns the largest of two numbers.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1995},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":82697,"byte_end":82700,"line_start":1767,"line_end":1767,"column_start":16,"column_end":19},"name":"min","qualname":"::Math::min","value":"pub fn min(f64, f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The static function `Math.min()` returns the lowest-valued number passed into it.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1997},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":83023,"byte_end":83026,"line_start":1773,"line_end":1773,"column_start":16,"column_end":19},"name":"pow","qualname":"::Math::pow","value":"pub fn pow(f64, f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.pow()` function returns the base to the exponent power, that is, base^exponent.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1999},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":83680,"byte_end":83686,"line_start":1783,"line_end":1783,"column_start":16,"column_end":22},"name":"random","qualname":"::Math::random","value":"pub fn random() -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.random()` function returns a floating-point, pseudo-random number\n in the range 0–1 (inclusive of 0, but not 1) with approximately uniform distribution\n over that range — which you can then scale to your desired range.\n The implementation selects the initial seed to the random number generation algorithm;\n it cannot be chosen or reset by the user.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2001},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":83997,"byte_end":84002,"line_start":1789,"line_end":1789,"column_start":16,"column_end":21},"name":"round","qualname":"::Math::round","value":"pub fn round(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.round()` function returns the value of a number rounded to the nearest integer.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2003},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":84358,"byte_end":84362,"line_start":1796,"line_end":1796,"column_start":16,"column_end":20},"name":"sign","qualname":"::Math::sign","value":"pub fn sign(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.sign()` function returns the sign of a number, indicating whether the number is\n positive, negative or zero.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2005},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":84643,"byte_end":84646,"line_start":1802,"line_end":1802,"column_start":16,"column_end":19},"name":"sin","qualname":"::Math::sin","value":"pub fn sin(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.sin()` function returns the sine of a number.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2007},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":85026,"byte_end":85030,"line_start":1809,"line_end":1809,"column_start":16,"column_end":20},"name":"sinh","qualname":"::Math::sinh","value":"pub fn sinh(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.sinh()` function returns the hyperbolic sine of a number, that can be expressed\n using the constant e: Math.sinh(x) = (e^x - e^-x)/2","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2009},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":85411,"byte_end":85415,"line_start":1816,"line_end":1816,"column_start":16,"column_end":20},"name":"sqrt","qualname":"::Math::sqrt","value":"pub fn sqrt(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.sqrt()` function returns the square root of a number, that is\n ∀x ≥ 0, Math.sqrt(x) = √x = the unique y ≥ 0 such that y^2 = x","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2011},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":85699,"byte_end":85702,"line_start":1822,"line_end":1822,"column_start":16,"column_end":19},"name":"tan","qualname":"::Math::tan","value":"pub fn tan(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.tan()` function returns the tangent of a number.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2013},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":86096,"byte_end":86100,"line_start":1829,"line_end":1829,"column_start":16,"column_end":20},"name":"tanh","qualname":"::Math::tanh","value":"pub fn tanh(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.tanh()` function returns the hyperbolic tangent of a number, that is\n tanh x = sinh x / cosh x = (e^x - e^-x)/(e^x + e^-x) = (e^2x - 1)/(e^2x + 1)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2015},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":86439,"byte_end":86444,"line_start":1836,"line_end":1836,"column_start":16,"column_end":21},"name":"trunc","qualname":"::Math::trunc","value":"pub fn trunc(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Math.trunc()` function returns the integer part of a number by removing any fractional\n digits.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":73804,"byte_end":73819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":2143},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":86649,"byte_end":86655,"line_start":1845,"line_end":1845,"column_start":14,"column_end":20},"name":"Number","qualname":"::Number","value":"Number {  }","parent":null,"children":[{"krate":0,"index":2144}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":86481,"byte_end":86496,"line_start":1841,"line_end":1841,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":86481,"byte_end":86496,"line_start":1841,"line_end":1841,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":86481,"byte_end":86496,"line_start":1841,"line_end":1841,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2105},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":86965,"byte_end":86974,"line_start":1851,"line_end":1851,"column_start":12,"column_end":21},"name":"is_finite","qualname":"<Number>::is_finite","value":"pub fn is_finite(&JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `Number.isFinite()` method determines whether the passed value is a finite number.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":86481,"byte_end":86496,"line_start":1841,"line_end":1841,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":86481,"byte_end":86496,"line_start":1841,"line_end":1841,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2108},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":87307,"byte_end":87317,"line_start":1857,"line_end":1857,"column_start":12,"column_end":22},"name":"is_integer","qualname":"<Number>::is_integer","value":"pub fn is_integer(&JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `Number.isInteger()` method determines whether the passed value is an integer.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":86481,"byte_end":86496,"line_start":1841,"line_end":1841,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":86481,"byte_end":86496,"line_start":1841,"line_end":1841,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2111},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":87725,"byte_end":87731,"line_start":1864,"line_end":1864,"column_start":12,"column_end":18},"name":"is_nan","qualname":"<Number>::is_nan","value":"pub fn is_nan(&JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `Number.isNaN()` method determines whether the passed value is `NaN` and its type is Number.\n It is a more robust version of the original, global isNaN().","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":86481,"byte_end":86496,"line_start":1841,"line_end":1841,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":86481,"byte_end":86496,"line_start":1841,"line_end":1841,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2114},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":88107,"byte_end":88122,"line_start":1871,"line_end":1871,"column_start":12,"column_end":27},"name":"is_safe_integer","qualname":"<Number>::is_safe_integer","value":"pub fn is_safe_integer(&JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `Number.isSafeInteger()` method determines whether the provided value is a number\n that is a safe integer.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":86481,"byte_end":86496,"line_start":1841,"line_end":1841,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":86481,"byte_end":86496,"line_start":1841,"line_end":1841,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2117},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":88596,"byte_end":88599,"line_start":1881,"line_end":1881,"column_start":12,"column_end":15},"name":"new","qualname":"<Number>::new","value":"pub fn new(&JsValue) -> Number","parent":null,"children":[],"decl_id":null,"docs":" The `Number` JavaScript object is a wrapper object allowing\n you to work with numerical values. A `Number` object is\n created using the `Number()` constructor.","sig":null,"attributes":[{"value":"deprecated(note = \"recommended to use `Number::from` instead\")","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":88494,"byte_end":88559,"line_start":1879,"line_end":1879,"column_start":5,"column_end":70}},{"value":"allow(deprecated)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":88564,"byte_end":88584,"line_start":1880,"line_end":1880,"column_start":5,"column_end":25}},{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":86481,"byte_end":86496,"line_start":1841,"line_end":1841,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":86481,"byte_end":86496,"line_start":1841,"line_end":1841,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2120},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":88968,"byte_end":88977,"line_start":1888,"line_end":1888,"column_start":12,"column_end":21},"name":"parse_int","qualname":"<Number>::parse_int","value":"pub fn parse_int(&str, u8) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Number.parseInt()` method parses a string argument and returns an\n integer of the specified radix or base.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":86481,"byte_end":86496,"line_start":1841,"line_end":1841,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":86481,"byte_end":86496,"line_start":1841,"line_end":1841,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2123},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":89337,"byte_end":89348,"line_start":1895,"line_end":1895,"column_start":12,"column_end":23},"name":"parse_float","qualname":"<Number>::parse_float","value":"pub fn parse_float(&str) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Number.parseFloat()` method parses a string argument and returns a\n floating point number.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":86481,"byte_end":86496,"line_start":1841,"line_end":1841,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":86481,"byte_end":86496,"line_start":1841,"line_end":1841,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2126},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":89695,"byte_end":89711,"line_start":1902,"line_end":1902,"column_start":12,"column_end":28},"name":"to_locale_string","qualname":"<Number>::to_locale_string","value":"pub fn to_locale_string(&Self, &str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toLocaleString()` method returns a string with a language sensitive\n representation of this number.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":86481,"byte_end":86496,"line_start":1841,"line_end":1841,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":86481,"byte_end":86496,"line_start":1841,"line_end":1841,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2129},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":90080,"byte_end":90092,"line_start":1909,"line_end":1909,"column_start":12,"column_end":24},"name":"to_precision","qualname":"<Number>::to_precision","value":"pub fn to_precision(&Self, u8) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `toPrecision()` method returns a string representing the Number\n object to the specified precision.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":86481,"byte_end":86496,"line_start":1841,"line_end":1841,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":86481,"byte_end":86496,"line_start":1841,"line_end":1841,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2132},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":90467,"byte_end":90475,"line_start":1916,"line_end":1916,"column_start":12,"column_end":20},"name":"to_fixed","qualname":"<Number>::to_fixed","value":"pub fn to_fixed(&Self, u8) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `toFixed()` method returns a string representing the Number\n object using fixed-point notation.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":86481,"byte_end":86496,"line_start":1841,"line_end":1841,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":86481,"byte_end":86496,"line_start":1841,"line_end":1841,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2135},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":90862,"byte_end":90876,"line_start":1923,"line_end":1923,"column_start":12,"column_end":26},"name":"to_exponential","qualname":"<Number>::to_exponential","value":"pub fn to_exponential(&Self, u8) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `toExponential()` method returns a string representing the Number\n object in exponential notation.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":86481,"byte_end":86496,"line_start":1841,"line_end":1841,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":86481,"byte_end":86496,"line_start":1841,"line_end":1841,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2138},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":91243,"byte_end":91252,"line_start":1930,"line_end":1930,"column_start":12,"column_end":21},"name":"to_string","qualname":"<Number>::to_string","value":"pub fn to_string(&Self, u8) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `toString()` method returns a string representing the\n specified Number object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":86481,"byte_end":86496,"line_start":1841,"line_end":1841,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":86481,"byte_end":86496,"line_start":1841,"line_end":1841,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2141},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":91596,"byte_end":91604,"line_start":1937,"line_end":1937,"column_start":12,"column_end":20},"name":"value_of","qualname":"<Number>::value_of","value":"pub fn value_of(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `valueOf()` method returns the wrapped primitive value of\n a Number object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":86481,"byte_end":86496,"line_start":1841,"line_end":1841,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":86481,"byte_end":86496,"line_start":1841,"line_end":1841,"column_start":1,"column_end":16}}]},{"kind":"Const","id":{"krate":0,"index":95},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":91857,"byte_end":91864,"line_start":1944,"line_end":1944,"column_start":15,"column_end":22},"name":"EPSILON","qualname":"::Number::EPSILON","value":"f64","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":" The smallest interval between two representable numbers.","sig":null,"attributes":[{"value":"/ The smallest interval between two representable numbers.","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":91649,"byte_end":91709,"line_start":1941,"line_end":1941,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":91714,"byte_end":91717,"line_start":1942,"line_end":1942,"column_start":5,"column_end":8}},{"value":"/ [MDN Documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/EPSILON)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":91722,"byte_end":91842,"line_start":1943,"line_end":1943,"column_start":5,"column_end":125}}]},{"kind":"Const","id":{"krate":0,"index":96},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":92101,"byte_end":92117,"line_start":1948,"line_end":1948,"column_start":15,"column_end":31},"name":"MAX_SAFE_INTEGER","qualname":"::Number::MAX_SAFE_INTEGER","value":"f64","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":" The maximum safe integer in JavaScript (2^53 - 1).","sig":null,"attributes":[{"value":"/ The maximum safe integer in JavaScript (2^53 - 1).","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":91890,"byte_end":91944,"line_start":1945,"line_end":1945,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":91949,"byte_end":91952,"line_start":1946,"line_end":1946,"column_start":5,"column_end":8}},{"value":"/ [MDN Documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":91957,"byte_end":92086,"line_start":1947,"line_end":1947,"column_start":5,"column_end":134}}]},{"kind":"Const","id":{"krate":0,"index":97},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":92345,"byte_end":92354,"line_start":1952,"line_end":1952,"column_start":15,"column_end":24},"name":"MAX_VALUE","qualname":"::Number::MAX_VALUE","value":"f64","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":" The largest positive representable number.","sig":null,"attributes":[{"value":"/ The largest positive representable number.","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":92149,"byte_end":92195,"line_start":1949,"line_end":1949,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":92200,"byte_end":92203,"line_start":1950,"line_end":1950,"column_start":5,"column_end":8}},{"value":"/ [MDN Documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_VALUE)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":92208,"byte_end":92330,"line_start":1951,"line_end":1951,"column_start":5,"column_end":127}}]},{"kind":"Const","id":{"krate":0,"index":98},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":92590,"byte_end":92606,"line_start":1956,"line_end":1956,"column_start":15,"column_end":31},"name":"MIN_SAFE_INTEGER","qualname":"::Number::MIN_SAFE_INTEGER","value":"f64","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":" The minimum safe integer in JavaScript (-(2^53 - 1)).","sig":null,"attributes":[{"value":"/ The minimum safe integer in JavaScript (-(2^53 - 1)).","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":92376,"byte_end":92433,"line_start":1953,"line_end":1953,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":92438,"byte_end":92441,"line_start":1954,"line_end":1954,"column_start":5,"column_end":8}},{"value":"/ [MDN Documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MIN_SAFE_INTEGER)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":92446,"byte_end":92575,"line_start":1955,"line_end":1955,"column_start":5,"column_end":134}}]},{"kind":"Const","id":{"krate":0,"index":99},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":93013,"byte_end":93022,"line_start":1962,"line_end":1962,"column_start":15,"column_end":24},"name":"MIN_VALUE","qualname":"::Number::MIN_VALUE","value":"f64","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":" The smallest positive representable number—that is, the positive number closest to zero\n (without actually being zero).","sig":null,"attributes":[{"value":"/ The smallest positive representable number—that is, the positive number closest to zero","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":92639,"byte_end":92732,"line_start":1957,"line_end":1957,"column_start":5,"column_end":96}},{"value":"/ (without actually being zero).","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":92737,"byte_end":92771,"line_start":1958,"line_end":1958,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":92776,"byte_end":92779,"line_start":1959,"line_end":1959,"column_start":5,"column_end":8}},{"value":"/ [MDN Documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MIN_VALUE)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":92784,"byte_end":92906,"line_start":1960,"line_end":1960,"column_start":5,"column_end":127}}]},{"kind":"Const","id":{"krate":0,"index":100},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":93219,"byte_end":93222,"line_start":1966,"line_end":1966,"column_start":15,"column_end":18},"name":"NAN","qualname":"::Number::NAN","value":"f64","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":" Special \"Not a Number\" value.","sig":null,"attributes":[{"value":"/ Special \"Not a Number\" value.","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":93042,"byte_end":93075,"line_start":1963,"line_end":1963,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":93080,"byte_end":93083,"line_start":1964,"line_end":1964,"column_start":5,"column_end":8}},{"value":"/ [MDN Documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/NaN)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":93088,"byte_end":93204,"line_start":1965,"line_end":1965,"column_start":5,"column_end":121}}]},{"kind":"Const","id":{"krate":0,"index":101},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":93473,"byte_end":93490,"line_start":1970,"line_end":1970,"column_start":15,"column_end":32},"name":"NEGATIVE_INFINITY","qualname":"::Number::NEGATIVE_INFINITY","value":"f64","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":" Special value representing negative infinity. Returned on overflow.","sig":null,"attributes":[{"value":"/ Special value representing negative infinity. Returned on overflow.","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":93244,"byte_end":93315,"line_start":1967,"line_end":1967,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":93320,"byte_end":93323,"line_start":1968,"line_end":1968,"column_start":5,"column_end":8}},{"value":"/ [MDN Documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/NEGATIVE_INFINITY)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":93328,"byte_end":93458,"line_start":1969,"line_end":1969,"column_start":5,"column_end":135}}]},{"kind":"Const","id":{"krate":0,"index":102},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":93741,"byte_end":93758,"line_start":1974,"line_end":1974,"column_start":15,"column_end":32},"name":"POSITIVE_INFINITY","qualname":"::Number::POSITIVE_INFINITY","value":"f64","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":" Special value representing infinity. Returned on overflow.","sig":null,"attributes":[{"value":"/ Special value representing infinity. Returned on overflow.","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":93521,"byte_end":93583,"line_start":1971,"line_end":1971,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":93588,"byte_end":93591,"line_start":1972,"line_end":1972,"column_start":5,"column_end":8}},{"value":"/ [MDN Documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/POSITIVE_INFINITY)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":93596,"byte_end":93726,"line_start":1973,"line_end":1973,"column_start":5,"column_end":135}}]},{"kind":"Struct","id":{"krate":0,"index":2438},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94747,"byte_end":94751,"line_start":2020,"line_end":2020,"column_start":14,"column_end":18},"name":"Date","qualname":"::Date","value":"Date {  }","parent":null,"children":[{"krate":0,"index":2439}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2265},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":95059,"byte_end":95067,"line_start":2027,"line_end":2027,"column_start":12,"column_end":20},"name":"get_date","qualname":"<Date>::get_date","value":"pub fn get_date(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `getDate()` method returns the day of the month for the\n specified date according to local time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2268},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":95458,"byte_end":95465,"line_start":2034,"line_end":2034,"column_start":12,"column_end":19},"name":"get_day","qualname":"<Date>::get_day","value":"pub fn get_day(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `getDay()` method returns the day of the week for the specified date according to local time,\n where 0 represents Sunday. For the day of the month see getDate().","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2271},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":95784,"byte_end":95797,"line_start":2040,"line_end":2040,"column_start":12,"column_end":25},"name":"get_full_year","qualname":"<Date>::get_full_year","value":"pub fn get_full_year(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `getFullYear()` method returns the year of the specified date according to local time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2274},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":96109,"byte_end":96118,"line_start":2046,"line_end":2046,"column_start":12,"column_end":21},"name":"get_hours","qualname":"<Date>::get_hours","value":"pub fn get_hours(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `getHours()` method returns the hour for the specified date, according to local time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2277},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":96457,"byte_end":96473,"line_start":2052,"line_end":2052,"column_start":12,"column_end":28},"name":"get_milliseconds","qualname":"<Date>::get_milliseconds","value":"pub fn get_milliseconds(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `getMilliseconds()` method returns the milliseconds in the specified date according to local time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2280},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":96792,"byte_end":96803,"line_start":2058,"line_end":2058,"column_start":12,"column_end":23},"name":"get_minutes","qualname":"<Date>::get_minutes","value":"pub fn get_minutes(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `getMinutes()` method returns the minutes in the specified date according to local time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2283},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":97196,"byte_end":97205,"line_start":2065,"line_end":2065,"column_start":12,"column_end":21},"name":"get_month","qualname":"<Date>::get_month","value":"pub fn get_month(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `getMonth()` method returns the month in the specified date according to local time,\n as a zero-based value (where zero indicates the first month of the year).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2286},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":97524,"byte_end":97535,"line_start":2071,"line_end":2071,"column_start":12,"column_end":23},"name":"get_seconds","qualname":"<Date>::get_seconds","value":"pub fn get_seconds(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `getSeconds()` method returns the seconds in the specified date according to local time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2289},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":97890,"byte_end":97898,"line_start":2078,"line_end":2078,"column_start":12,"column_end":20},"name":"get_time","qualname":"<Date>::get_time","value":"pub fn get_time(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `getTime()` method returns the numeric value corresponding to the time for the specified date\n according to universal time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2292},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":98276,"byte_end":98295,"line_start":2085,"line_end":2085,"column_start":12,"column_end":31},"name":"get_timezone_offset","qualname":"<Date>::get_timezone_offset","value":"pub fn get_timezone_offset(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `getTimezoneOffset()` method returns the time zone difference, in minutes,\n from current locale (host system settings) to UTC.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2295},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":98642,"byte_end":98654,"line_start":2092,"line_end":2092,"column_start":12,"column_end":24},"name":"get_utc_date","qualname":"<Date>::get_utc_date","value":"pub fn get_utc_date(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `getUTCDate()` method returns the day (date) of the month in the specified date\n according to universal time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2298},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":99017,"byte_end":99028,"line_start":2099,"line_end":2099,"column_start":12,"column_end":23},"name":"get_utc_day","qualname":"<Date>::get_utc_day","value":"pub fn get_utc_day(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `getUTCDay()` method returns the day of the week in the specified date according to universal time,\n where 0 represents Sunday.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2301},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":99360,"byte_end":99377,"line_start":2105,"line_end":2105,"column_start":12,"column_end":29},"name":"get_utc_full_year","qualname":"<Date>::get_utc_full_year","value":"pub fn get_utc_full_year(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `getUTCFullYear()` method returns the year in the specified date according to universal time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2304},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":99701,"byte_end":99714,"line_start":2111,"line_end":2111,"column_start":12,"column_end":25},"name":"get_utc_hours","qualname":"<Date>::get_utc_hours","value":"pub fn get_utc_hours(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `getUTCHours()` method returns the hours in the specified date according to universal time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2307},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":100074,"byte_end":100094,"line_start":2118,"line_end":2118,"column_start":12,"column_end":32},"name":"get_utc_milliseconds","qualname":"<Date>::get_utc_milliseconds","value":"pub fn get_utc_milliseconds(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `getUTCMilliseconds()` method returns the milliseconds in the specified date\n according to universal time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2310},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":100426,"byte_end":100441,"line_start":2124,"line_end":2124,"column_start":12,"column_end":27},"name":"get_utc_minutes","qualname":"<Date>::get_utc_minutes","value":"pub fn get_utc_minutes(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `getUTCMinutes()` method returns the minutes in the specified date according to universal time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2313},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":100840,"byte_end":100853,"line_start":2131,"line_end":2131,"column_start":12,"column_end":25},"name":"get_utc_month","qualname":"<Date>::get_utc_month","value":"pub fn get_utc_month(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `getUTCMonth()` returns the month of the specified date according to universal time,\n as a zero-based value (where zero indicates the first month of the year).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2316},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":101185,"byte_end":101200,"line_start":2137,"line_end":2137,"column_start":12,"column_end":27},"name":"get_utc_seconds","qualname":"<Date>::get_utc_seconds","value":"pub fn get_utc_seconds(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `getUTCSeconds()` method returns the seconds in the specified date according to universal time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2319},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":101594,"byte_end":101597,"line_start":2145,"line_end":2145,"column_start":12,"column_end":15},"name":"new","qualname":"<Date>::new","value":"pub fn new(&JsValue) -> Date","parent":null,"children":[],"decl_id":null,"docs":" Creates a JavaScript `Date` instance that represents\n a single moment in time. `Date` objects are based on a time value that is\n the number of milliseconds since 1 January 1970 UTC.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2322},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":101888,"byte_end":101893,"line_start":2152,"line_end":2152,"column_start":12,"column_end":17},"name":"new_0","qualname":"<Date>::new_0","value":"pub fn new_0() -> Date","parent":null,"children":[],"decl_id":null,"docs":" Creates a JavaScript `Date` instance that represents the current moment in\n time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2325},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":102277,"byte_end":102296,"line_start":2160,"line_end":2160,"column_start":12,"column_end":31},"name":"new_with_year_month","qualname":"<Date>::new_with_year_month","value":"pub fn new_with_year_month(u32, i32) -> Date","parent":null,"children":[],"decl_id":null,"docs":" Creates a JavaScript `Date` instance that represents\n a single moment in time. `Date` objects are based on a time value that is\n the number of milliseconds since 1 January 1970 UTC.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2328},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":102701,"byte_end":102724,"line_start":2168,"line_end":2168,"column_start":12,"column_end":35},"name":"new_with_year_month_day","qualname":"<Date>::new_with_year_month_day","value":"pub fn new_with_year_month_day(u32, i32, i32) -> Date","parent":null,"children":[],"decl_id":null,"docs":" Creates a JavaScript `Date` instance that represents\n a single moment in time. `Date` objects are based on a time value that is\n the number of milliseconds since 1 January 1970 UTC.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2331},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":103139,"byte_end":103165,"line_start":2176,"line_end":2176,"column_start":12,"column_end":38},"name":"new_with_year_month_day_hr","qualname":"<Date>::new_with_year_month_day_hr","value":"pub fn new_with_year_month_day_hr(u32, i32, i32, i32) -> Date","parent":null,"children":[],"decl_id":null,"docs":" Creates a JavaScript `Date` instance that represents\n a single moment in time. `Date` objects are based on a time value that is\n the number of milliseconds since 1 January 1970 UTC.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2334},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":103589,"byte_end":103619,"line_start":2184,"line_end":2184,"column_start":12,"column_end":42},"name":"new_with_year_month_day_hr_min","qualname":"<Date>::new_with_year_month_day_hr_min","value":"pub fn new_with_year_month_day_hr_min(u32, i32, i32, i32, i32) -> Date","parent":null,"children":[],"decl_id":null,"docs":" Creates a JavaScript `Date` instance that represents\n a single moment in time. `Date` objects are based on a time value that is\n the number of milliseconds since 1 January 1970 UTC.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2337},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":104100,"byte_end":104134,"line_start":2198,"line_end":2198,"column_start":12,"column_end":46},"name":"new_with_year_month_day_hr_min_sec","qualname":"<Date>::new_with_year_month_day_hr_min_sec","value":"pub fn new_with_year_month_day_hr_min_sec(u32, i32, i32, i32, i32, i32)\n-> Date","parent":null,"children":[],"decl_id":null,"docs":" Creates a JavaScript `Date` instance that represents\n a single moment in time. `Date` objects are based on a time value that is\n the number of milliseconds since 1 January 1970 UTC.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2340},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":104633,"byte_end":104673,"line_start":2213,"line_end":2213,"column_start":12,"column_end":52},"name":"new_with_year_month_day_hr_min_sec_milli","qualname":"<Date>::new_with_year_month_day_hr_min_sec_milli","value":"pub fn new_with_year_month_day_hr_min_sec_milli(u32, i32, i32, i32, i32, i32,\n                                                i32) -> Date","parent":null,"children":[],"decl_id":null,"docs":" Creates a JavaScript `Date` instance that represents\n a single moment in time. `Date` objects are based on a time value that is\n the number of milliseconds since 1 January 1970 UTC.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2343},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":105123,"byte_end":105126,"line_start":2228,"line_end":2228,"column_start":12,"column_end":15},"name":"now","qualname":"<Date>::now","value":"pub fn now() -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Date.now()` method returns the number of milliseconds\n elapsed since January 1, 1970 00:00:00 UTC.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2346},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":105596,"byte_end":105601,"line_start":2236,"line_end":2236,"column_start":12,"column_end":17},"name":"parse","qualname":"<Date>::parse","value":"pub fn parse(&str) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Date.parse()` method parses a string representation of a date, and returns the number of milliseconds\n since January 1, 1970, 00:00:00 UTC or `NaN` if the string is unrecognized or, in some cases,\n contains illegal date values (e.g. 2015-02-31).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2349},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":105929,"byte_end":105937,"line_start":2242,"line_end":2242,"column_start":12,"column_end":20},"name":"set_date","qualname":"<Date>::set_date","value":"pub fn set_date(&Self, u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setDate()` method sets the day of the Date object relative to the beginning of the currently set month.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2352},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":106298,"byte_end":106311,"line_start":2249,"line_end":2249,"column_start":12,"column_end":25},"name":"set_full_year","qualname":"<Date>::set_full_year","value":"pub fn set_full_year(&Self, u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setFullYear()` method sets the full year for a specified date according to local time.\n Returns new timestamp.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2355},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":106673,"byte_end":106697,"line_start":2256,"line_end":2256,"column_start":12,"column_end":36},"name":"set_full_year_with_month","qualname":"<Date>::set_full_year_with_month","value":"pub fn set_full_year_with_month(&Self, u32, i32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setFullYear()` method sets the full year for a specified date according to local time.\n Returns new timestamp.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2358},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":107071,"byte_end":107100,"line_start":2263,"line_end":2263,"column_start":12,"column_end":41},"name":"set_full_year_with_month_date","qualname":"<Date>::set_full_year_with_month_date","value":"pub fn set_full_year_with_month_date(&Self, u32, i32, i32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setFullYear()` method sets the full year for a specified date according to local time.\n Returns new timestamp.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2361},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":107588,"byte_end":107597,"line_start":2271,"line_end":2271,"column_start":12,"column_end":21},"name":"set_hours","qualname":"<Date>::set_hours","value":"pub fn set_hours(&Self, u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setHours()` method sets the hours for a specified date according to local time,\n and returns the number of milliseconds since January 1, 1970 00:00:00 UTC until the time represented\n by the updated Date instance.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2364},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":107944,"byte_end":107960,"line_start":2277,"line_end":2277,"column_start":12,"column_end":28},"name":"set_milliseconds","qualname":"<Date>::set_milliseconds","value":"pub fn set_milliseconds(&Self, u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setMilliseconds()` method sets the milliseconds for a specified date according to local time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2367},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":108294,"byte_end":108305,"line_start":2283,"line_end":2283,"column_start":12,"column_end":23},"name":"set_minutes","qualname":"<Date>::set_minutes","value":"pub fn set_minutes(&Self, u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setMinutes()` method sets the minutes for a specified date according to local time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2370},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":108638,"byte_end":108647,"line_start":2289,"line_end":2289,"column_start":12,"column_end":21},"name":"set_month","qualname":"<Date>::set_month","value":"pub fn set_month(&Self, u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setMonth()` method sets the month for a specified date according to the currently set year.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2373},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":108974,"byte_end":108985,"line_start":2295,"line_end":2295,"column_start":12,"column_end":23},"name":"set_seconds","qualname":"<Date>::set_seconds","value":"pub fn set_seconds(&Self, u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setSeconds()` method sets the seconds for a specified date according to local time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2376},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":109360,"byte_end":109368,"line_start":2302,"line_end":2302,"column_start":12,"column_end":20},"name":"set_time","qualname":"<Date>::set_time","value":"pub fn set_time(&Self, f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setTime()` method sets the Date object to the time represented by a number of milliseconds\n since January 1, 1970, 00:00:00 UTC.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2379},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":109715,"byte_end":109727,"line_start":2309,"line_end":2309,"column_start":12,"column_end":24},"name":"set_utc_date","qualname":"<Date>::set_utc_date","value":"pub fn set_utc_date(&Self, u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setUTCDate()` method sets the day of the month for a specified date\n according to universal time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2382},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":110070,"byte_end":110087,"line_start":2315,"line_end":2315,"column_start":12,"column_end":29},"name":"set_utc_full_year","qualname":"<Date>::set_utc_full_year","value":"pub fn set_utc_full_year(&Self, u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setUTCFullYear()` method sets the full year for a specified date according to universal time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2385},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":110431,"byte_end":110459,"line_start":2321,"line_end":2321,"column_start":12,"column_end":40},"name":"set_utc_full_year_with_month","qualname":"<Date>::set_utc_full_year_with_month","value":"pub fn set_utc_full_year_with_month(&Self, u32, i32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setUTCFullYear()` method sets the full year for a specified date according to universal time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2388},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":110815,"byte_end":110848,"line_start":2327,"line_end":2327,"column_start":12,"column_end":45},"name":"set_utc_full_year_with_month_date","qualname":"<Date>::set_utc_full_year_with_month_date","value":"pub fn set_utc_full_year_with_month_date(&Self, u32, i32, i32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setUTCFullYear()` method sets the full year for a specified date according to universal time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2391},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":111349,"byte_end":111362,"line_start":2335,"line_end":2335,"column_start":12,"column_end":25},"name":"set_utc_hours","qualname":"<Date>::set_utc_hours","value":"pub fn set_utc_hours(&Self, u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setUTCHours()` method sets the hour for a specified date according to universal time,\n and returns the number of milliseconds since  January 1, 1970 00:00:00 UTC until the time\n represented by the updated Date instance.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2394},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":111730,"byte_end":111750,"line_start":2342,"line_end":2342,"column_start":12,"column_end":32},"name":"set_utc_milliseconds","qualname":"<Date>::set_utc_milliseconds","value":"pub fn set_utc_milliseconds(&Self, u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setUTCMilliseconds()` method sets the milliseconds for a specified date\n according to universal time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2397},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":112097,"byte_end":112112,"line_start":2348,"line_end":2348,"column_start":12,"column_end":27},"name":"set_utc_minutes","qualname":"<Date>::set_utc_minutes","value":"pub fn set_utc_minutes(&Self, u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setUTCMinutes()` method sets the minutes for a specified date according to universal time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2400},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":112446,"byte_end":112459,"line_start":2354,"line_end":2354,"column_start":12,"column_end":25},"name":"set_utc_month","qualname":"<Date>::set_utc_month","value":"pub fn set_utc_month(&Self, u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setUTCMonth()` method sets the month for a specified date according to universal time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2403},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":112799,"byte_end":112814,"line_start":2360,"line_end":2360,"column_start":12,"column_end":27},"name":"set_utc_seconds","qualname":"<Date>::set_utc_seconds","value":"pub fn set_utc_seconds(&Self, u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `setUTCSeconds()` method sets the seconds for a specified date according to universal time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2406},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":113180,"byte_end":113194,"line_start":2367,"line_end":2367,"column_start":12,"column_end":26},"name":"to_date_string","qualname":"<Date>::to_date_string","value":"pub fn to_date_string(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toDateString()` method returns the date portion of a Date object\n in human readable form in American English.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2409},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":113725,"byte_end":113738,"line_start":2376,"line_end":2376,"column_start":12,"column_end":25},"name":"to_iso_string","qualname":"<Date>::to_iso_string","value":"pub fn to_iso_string(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toISOString()` method returns a string in simplified extended ISO format (ISO\n 8601), which is always 24 or 27 characters long (YYYY-MM-DDTHH:mm:ss.sssZ or\n ±YYYYYY-MM-DDTHH:mm:ss.sssZ, respectively). The timezone is always zero UTC offset,\n as denoted by the suffix \"Z\"","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2412},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":114035,"byte_end":114042,"line_start":2382,"line_end":2382,"column_start":12,"column_end":19},"name":"to_json","qualname":"<Date>::to_json","value":"pub fn to_json(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toJSON()` method returns a string representation of the Date object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2415},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":114801,"byte_end":114822,"line_start":2394,"line_end":2394,"column_start":12,"column_end":33},"name":"to_locale_date_string","qualname":"<Date>::to_locale_date_string","value":"pub fn to_locale_date_string(&Self, &str, &JsValue) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toLocaleDateString()` method returns a string with a language sensitive\n representation of the date portion of this date. The new locales and options\n arguments let applications specify the language whose formatting conventions\n should be used and allow to customize the behavior of the function.\n In older implementations, which ignore the locales and options arguments,\n the locale used and the form of the string\n returned are entirely implementation dependent.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2418},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":115573,"byte_end":115589,"line_start":2406,"line_end":2406,"column_start":12,"column_end":28},"name":"to_locale_string","qualname":"<Date>::to_locale_string","value":"pub fn to_locale_string(&Self, &str, &JsValue) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toLocaleString()` method returns a string with a language sensitive\n representation of this date. The new locales and options arguments\n let applications specify the language whose formatting conventions\n should be used and customize the behavior of the function.\n In older implementations, which ignore the locales\n and options arguments, the locale used and the form of the string\n returned are entirely implementation dependent.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2421},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":116364,"byte_end":116385,"line_start":2417,"line_end":2417,"column_start":12,"column_end":33},"name":"to_locale_time_string","qualname":"<Date>::to_locale_time_string","value":"pub fn to_locale_time_string(&Self, &str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toLocaleTimeString()` method returns a string with a language sensitive\n representation of the time portion of this date. The new locales and options\n arguments let applications specify the language whose formatting conventions should be\n used and customize the behavior of the function. In older implementations, which ignore\n the locales and options arguments, the locale used and the form of the string\n returned are entirely implementation dependent.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2424},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":116715,"byte_end":116724,"line_start":2424,"line_end":2424,"column_start":12,"column_end":21},"name":"to_string","qualname":"<Date>::to_string","value":"pub fn to_string(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toString()` method returns a string representing\n the specified Date object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2427},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":117081,"byte_end":117095,"line_start":2431,"line_end":2431,"column_start":12,"column_end":26},"name":"to_time_string","qualname":"<Date>::to_time_string","value":"pub fn to_time_string(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toTimeString()` method returns the time portion of a Date object in human\n readable form in American English.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2430},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":117417,"byte_end":117430,"line_start":2438,"line_end":2438,"column_start":12,"column_end":25},"name":"to_utc_string","qualname":"<Date>::to_utc_string","value":"pub fn to_utc_string(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toUTCString()` method converts a date to a string,\n using the UTC time zone.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2433},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":117887,"byte_end":117890,"line_start":2447,"line_end":2447,"column_start":12,"column_end":15},"name":"utc","qualname":"<Date>::utc","value":"pub fn utc(f64, f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Date.UTC()` method accepts the same parameters as the\n longest form of the constructor, and returns the number of\n milliseconds in a `Date` object since January 1, 1970,\n 00:00:00, universal time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2436},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118198,"byte_end":118206,"line_start":2454,"line_end":2454,"column_start":12,"column_end":20},"name":"value_of","qualname":"<Date>::value_of","value":"pub fn value_of(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `valueOf()` method  returns the primitive value of\n a Date object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94598,"byte_end":94613,"line_start":2016,"line_end":2016,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":2619},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118360,"byte_end":118366,"line_start":2462,"line_end":2462,"column_start":14,"column_end":20},"name":"Object","qualname":"::Object","value":"Object {  }","parent":null,"children":[{"krate":0,"index":2620}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2527},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118758,"byte_end":118764,"line_start":2470,"line_end":2470,"column_start":12,"column_end":18},"name":"assign","qualname":"<Object>::assign","value":"pub fn assign(&Object, &Object) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `Object.assign()` method is used to copy the values of all enumerable\n own properties from one or more source objects to a target object. It\n will return the target object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2530},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":119218,"byte_end":119225,"line_start":2478,"line_end":2478,"column_start":12,"column_end":19},"name":"assign2","qualname":"<Object>::assign2","value":"pub fn assign2(&Object, &Object, &Object) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `Object.assign()` method is used to copy the values of all enumerable\n own properties from one or more source objects to a target object. It\n will return the target object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2533},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":119698,"byte_end":119705,"line_start":2486,"line_end":2486,"column_start":12,"column_end":19},"name":"assign3","qualname":"<Object>::assign3","value":"pub fn assign3(&Object, &Object, &Object, &Object) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `Object.assign()` method is used to copy the values of all enumerable\n own properties from one or more source objects to a target object. It\n will return the target object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2536},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":120113,"byte_end":120124,"line_start":2494,"line_end":2494,"column_start":12,"column_end":23},"name":"constructor","qualname":"<Object>::constructor","value":"pub fn constructor(&Self) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The constructor property returns a reference to the `Object` constructor\n function that created the instance object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2539},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":120485,"byte_end":120491,"line_start":2501,"line_end":2501,"column_start":12,"column_end":18},"name":"create","qualname":"<Object>::create","value":"pub fn create(&Object) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `Object.create()` method creates a new object, using an existing\n object to provide the newly created object's prototype.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2542},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":120933,"byte_end":120948,"line_start":2509,"line_end":2509,"column_start":12,"column_end":27},"name":"define_property","qualname":"<Object>::define_property","value":"pub fn define_property(&Object, &JsValue, &Object) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The static method `Object.defineProperty()` defines a new\n property directly on an object, or modifies an existing\n property on an object, and returns the object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2545},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":121392,"byte_end":121409,"line_start":2517,"line_end":2517,"column_start":12,"column_end":29},"name":"define_properties","qualname":"<Object>::define_properties","value":"pub fn define_properties(&Object, &Object) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `Object.defineProperties()` method defines new or modifies\n existing properties directly on an object, returning the\n object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2548},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":121944,"byte_end":121951,"line_start":2527,"line_end":2527,"column_start":12,"column_end":19},"name":"entries","qualname":"<Object>::entries","value":"pub fn entries(&Object) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `Object.entries()` method returns an array of a given\n object's own enumerable property [key, value] pairs, in the\n same order as that provided by a for...in loop (the difference\n being that a for-in loop enumerates properties in the\n prototype chain as well).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2551},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":122564,"byte_end":122570,"line_start":2537,"line_end":2537,"column_start":12,"column_end":18},"name":"freeze","qualname":"<Object>::freeze","value":"pub fn freeze(&Object) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `Object.freeze()` method freezes an object: that is, prevents new\n properties from being added to it; prevents existing properties from\n being removed; and prevents existing properties, or their enumerability,\n configurability, or writability, from being changed, it also prevents\n the prototype from being changed. The method returns the passed object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2554},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":122927,"byte_end":122939,"line_start":2544,"line_end":2544,"column_start":12,"column_end":24},"name":"from_entries","qualname":"<Object>::from_entries","value":"pub fn from_entries(&JsValue) -> Result<Object, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `Object.fromEntries()` method transforms a list of key-value pairs\n into an object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2557},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":123466,"byte_end":123493,"line_start":2553,"line_end":2553,"column_start":12,"column_end":39},"name":"get_own_property_descriptor","qualname":"<Object>::get_own_property_descriptor","value":"pub fn get_own_property_descriptor(&Object, &JsValue) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The `Object.getOwnPropertyDescriptor()` method returns a\n property descriptor for an own property (that is, one directly\n present on an object and not in the object's prototype chain)\n of a given object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2560},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":123903,"byte_end":123931,"line_start":2560,"line_end":2560,"column_start":12,"column_end":40},"name":"get_own_property_descriptors","qualname":"<Object>::get_own_property_descriptors","value":"pub fn get_own_property_descriptors(&Object) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The `Object.getOwnPropertyDescriptors()` method returns all own\n property descriptors of a given object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2563},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":124402,"byte_end":124424,"line_start":2568,"line_end":2568,"column_start":12,"column_end":34},"name":"get_own_property_names","qualname":"<Object>::get_own_property_names","value":"pub fn get_own_property_names(&Object) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `Object.getOwnPropertyNames()` method returns an array of\n all properties (including non-enumerable properties except for\n those which use Symbol) found directly upon a given object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2566},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":124826,"byte_end":124850,"line_start":2575,"line_end":2575,"column_start":12,"column_end":36},"name":"get_own_property_symbols","qualname":"<Object>::get_own_property_symbols","value":"pub fn get_own_property_symbols(&Object) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `Object.getOwnPropertySymbols()` method returns an array of\n all symbol properties found directly upon a given object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2569},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":125264,"byte_end":125280,"line_start":2583,"line_end":2583,"column_start":12,"column_end":28},"name":"get_prototype_of","qualname":"<Object>::get_prototype_of","value":"pub fn get_prototype_of(&JsValue) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `Object.getPrototypeOf()` method returns the prototype\n (i.e. the value of the internal [[Prototype]] property) of the\n specified object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2572},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":125693,"byte_end":125709,"line_start":2591,"line_end":2591,"column_start":12,"column_end":28},"name":"has_own_property","qualname":"<Object>::has_own_property","value":"pub fn has_own_property(&Self, &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `hasOwnProperty()` method returns a boolean indicating whether the\n object has the specified property as its own property (as opposed to\n inheriting it).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2575},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":126024,"byte_end":126026,"line_start":2597,"line_end":2597,"column_start":12,"column_end":14},"name":"is","qualname":"<Object>::is","value":"pub fn is(&JsValue, &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `Object.is()` method determines whether two values are the same value.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2578},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":126434,"byte_end":126447,"line_start":2604,"line_end":2604,"column_start":12,"column_end":25},"name":"is_extensible","qualname":"<Object>::is_extensible","value":"pub fn is_extensible(&Object) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `Object.isExtensible()` method determines if an object is extensible\n (whether it can have new properties added to it).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2581},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":126754,"byte_end":126763,"line_start":2610,"line_end":2610,"column_start":12,"column_end":21},"name":"is_frozen","qualname":"<Object>::is_frozen","value":"pub fn is_frozen(&Object) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `Object.isFrozen()` determines if an object is frozen.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2584},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":127077,"byte_end":127086,"line_start":2616,"line_end":2616,"column_start":12,"column_end":21},"name":"is_sealed","qualname":"<Object>::is_sealed","value":"pub fn is_sealed(&Object) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `Object.isSealed()` method determines if an object is sealed.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2587},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":127426,"byte_end":127441,"line_start":2623,"line_end":2623,"column_start":12,"column_end":27},"name":"is_prototype_of","qualname":"<Object>::is_prototype_of","value":"pub fn is_prototype_of(&Self, &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `isPrototypeOf()` method checks if an object exists in another\n object's prototype chain.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2590},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":127816,"byte_end":127820,"line_start":2630,"line_end":2630,"column_start":12,"column_end":16},"name":"keys","qualname":"<Object>::keys","value":"pub fn keys(&Object) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `Object.keys()` method returns an array of a given object's property\n names, in the same order as we get with a normal loop.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2593},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":128080,"byte_end":128083,"line_start":2636,"line_end":2636,"column_start":12,"column_end":15},"name":"new","qualname":"<Object>::new","value":"pub fn new() -> Object","parent":null,"children":[],"decl_id":null,"docs":" The [`Object`] constructor creates an object wrapper.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2596},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":128500,"byte_end":128518,"line_start":2644,"line_end":2644,"column_start":12,"column_end":30},"name":"prevent_extensions","qualname":"<Object>::prevent_extensions","value":"pub fn prevent_extensions(&Object)","parent":null,"children":[],"decl_id":null,"docs":" The `Object.preventExtensions()` method prevents new properties from\n ever being added to an object (i.e. prevents future extensions to the\n object).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2599},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":128882,"byte_end":128904,"line_start":2651,"line_end":2651,"column_start":12,"column_end":34},"name":"property_is_enumerable","qualname":"<Object>::property_is_enumerable","value":"pub fn property_is_enumerable(&Self, &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `propertyIsEnumerable()` method returns a Boolean indicating\n whether the specified property is enumerable.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2602},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":129401,"byte_end":129405,"line_start":2660,"line_end":2660,"column_start":12,"column_end":16},"name":"seal","qualname":"<Object>::seal","value":"pub fn seal(&Object) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `Object.seal()` method seals an object, preventing new properties\n from being added to it and marking all existing properties as\n non-configurable.  Values of present properties can still be changed as\n long as they are writable.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2605},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":129835,"byte_end":129851,"line_start":2668,"line_end":2668,"column_start":12,"column_end":28},"name":"set_prototype_of","qualname":"<Object>::set_prototype_of","value":"pub fn set_prototype_of(&Object, &Object) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `Object.setPrototypeOf()` method sets the prototype (i.e., the\n internal `[[Prototype]]` property) of a specified object to another\n object or `null`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2608},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":130289,"byte_end":130305,"line_start":2676,"line_end":2676,"column_start":12,"column_end":28},"name":"to_locale_string","qualname":"<Object>::to_locale_string","value":"pub fn to_locale_string(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toLocaleString()` method returns a string representing the object.\n This method is meant to be overridden by derived objects for\n locale-specific purposes.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2611},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":130602,"byte_end":130611,"line_start":2682,"line_end":2682,"column_start":12,"column_end":21},"name":"to_string","qualname":"<Object>::to_string","value":"pub fn to_string(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toString()` method returns a string representing the object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2614},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":130924,"byte_end":130932,"line_start":2689,"line_end":2689,"column_start":12,"column_end":20},"name":"value_of","qualname":"<Object>::value_of","value":"pub fn value_of(&Self) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `valueOf()` method returns the primitive value of the\n specified object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2617},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":131432,"byte_end":131438,"line_start":2698,"line_end":2698,"column_start":12,"column_end":18},"name":"values","qualname":"<Object>::values","value":"pub fn values(&Object) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `Object.values()` method returns an array of a given object's own\n enumerable property values, in the same order as that provided by a\n `for...in` loop (the difference being that a for-in loop enumerates\n properties in the prototype chain as well).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":118242,"byte_end":118257,"line_start":2458,"line_end":2458,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":131687,"byte_end":131695,"line_start":2707,"line_end":2707,"column_start":12,"column_end":20},"name":"try_from","qualname":"<Object>::try_from","value":"pub fn try_from(&JsValue) -> Option<&Object>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Object` value of this JS value if it's an instance of an\n object.","sig":null,"attributes":[{"value":"/ Returns the `Object` value of this JS value if it's an instance of an","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":131487,"byte_end":131560,"line_start":2702,"line_end":2702,"column_start":5,"column_end":78}},{"value":"/ object.","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":131565,"byte_end":131576,"line_start":2703,"line_end":2703,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":131581,"byte_end":131584,"line_start":2704,"line_end":2704,"column_start":5,"column_end":8}},{"value":"/ If this JS value is not an instance of an object then this returns","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":131589,"byte_end":131659,"line_start":2705,"line_end":2705,"column_start":5,"column_end":75}},{"value":"/ `None`.","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":131664,"byte_end":131675,"line_start":2706,"line_end":2706,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":2706},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":132238,"byte_end":132243,"line_start":2736,"line_end":2736,"column_start":14,"column_end":19},"name":"Proxy","qualname":"::Proxy","value":"Proxy {  }","parent":null,"children":[{"krate":0,"index":2707}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":132110,"byte_end":132125,"line_start":2732,"line_end":2732,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":132110,"byte_end":132125,"line_start":2732,"line_end":2732,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":132110,"byte_end":132125,"line_start":2732,"line_end":2732,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2701},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":132595,"byte_end":132598,"line_start":2744,"line_end":2744,"column_start":12,"column_end":15},"name":"new","qualname":"<Proxy>::new","value":"pub fn new(&JsValue, &Object) -> Proxy","parent":null,"children":[],"decl_id":null,"docs":" The [`Proxy`] object is used to define custom behavior for fundamental\n operations (e.g. property lookup, assignment, enumeration, function\n invocation, etc).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":132110,"byte_end":132125,"line_start":2732,"line_end":2732,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":132110,"byte_end":132125,"line_start":2732,"line_end":2732,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2704},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":132932,"byte_end":132941,"line_start":2751,"line_end":2751,"column_start":12,"column_end":21},"name":"revocable","qualname":"<Proxy>::revocable","value":"pub fn revocable(&JsValue, &Object) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `Proxy.revocable()` method is used to create a revocable [`Proxy`]\n object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":132110,"byte_end":132125,"line_start":2732,"line_end":2732,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":132110,"byte_end":132125,"line_start":2732,"line_end":2732,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":2810},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":133425,"byte_end":133435,"line_start":2763,"line_end":2763,"column_start":14,"column_end":24},"name":"RangeError","qualname":"::RangeError","value":"RangeError {  }","parent":null,"children":[{"krate":0,"index":2811}],"decl_id":null,"docs":" The `RangeError` object indicates an error when a value is not in the set\n or range of allowed values.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":133006,"byte_end":133021,"line_start":2755,"line_end":2755,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":133006,"byte_end":133021,"line_start":2755,"line_end":2755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":133006,"byte_end":133021,"line_start":2755,"line_end":2755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2808},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":133729,"byte_end":133732,"line_start":2770,"line_end":2770,"column_start":12,"column_end":15},"name":"new","qualname":"<RangeError>::new","value":"pub fn new(&str) -> RangeError","parent":null,"children":[],"decl_id":null,"docs":" The `RangeError` object indicates an error when a value is not in the set\n or range of allowed values.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":133006,"byte_end":133021,"line_start":2755,"line_end":2755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":133006,"byte_end":133021,"line_start":2755,"line_end":2755,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":2921},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":134201,"byte_end":134215,"line_start":2782,"line_end":2782,"column_start":14,"column_end":28},"name":"ReferenceError","qualname":"::ReferenceError","value":"ReferenceError {  }","parent":null,"children":[{"krate":0,"index":2922}],"decl_id":null,"docs":" The `ReferenceError` object represents an error when a non-existent\n variable is referenced.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":133784,"byte_end":133799,"line_start":2774,"line_end":2774,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":133784,"byte_end":133799,"line_start":2774,"line_end":2774,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":133784,"byte_end":133799,"line_start":2774,"line_end":2774,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2919},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":134503,"byte_end":134506,"line_start":2789,"line_end":2789,"column_start":12,"column_end":15},"name":"new","qualname":"<ReferenceError>::new","value":"pub fn new(&str) -> ReferenceError","parent":null,"children":[],"decl_id":null,"docs":" The `ReferenceError` object represents an error when a non-existent\n variable is referenced.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":133784,"byte_end":133799,"line_start":2774,"line_end":2774,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":133784,"byte_end":133799,"line_start":2774,"line_end":2774,"column_start":1,"column_end":16}}]},{"kind":"Mod","id":{"krate":0,"index":117},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":134577,"byte_end":134584,"line_start":2793,"line_end":2793,"column_start":9,"column_end":16},"name":"Reflect","qualname":"::Reflect","value":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":2934},{"krate":0,"index":2936},{"krate":0,"index":2938},{"krate":0,"index":2940},{"krate":0,"index":2942},{"krate":0,"index":2944},{"krate":0,"index":2946},{"krate":0,"index":2948},{"krate":0,"index":2950},{"krate":0,"index":2952},{"krate":0,"index":2954},{"krate":0,"index":2956},{"krate":0,"index":2958},{"krate":0,"index":2960},{"krate":0,"index":2962},{"krate":0,"index":2964},{"krate":0,"index":2966},{"krate":0,"index":2968},{"krate":0,"index":2970}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":134544,"byte_end":134568,"line_start":2792,"line_end":2792,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2934},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":134981,"byte_end":134986,"line_start":2804,"line_end":2804,"column_start":16,"column_end":21},"name":"apply","qualname":"::Reflect::apply","value":"pub fn apply(&Function, &JsValue, &Array) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.apply()` method calls a target function with\n arguments as specified.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":134625,"byte_end":134640,"line_start":2797,"line_end":2797,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":134625,"byte_end":134640,"line_start":2797,"line_end":2797,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2936},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":135586,"byte_end":135595,"line_start":2816,"line_end":2816,"column_start":16,"column_end":25},"name":"construct","qualname":"::Reflect::construct","value":"pub fn construct(&Function, &Array) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.construct()` method acts like the new operator, but\n as a function.  It is equivalent to calling `new target(...args)`. It\n gives also the added option to specify a different prototype.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":134625,"byte_end":134640,"line_start":2797,"line_end":2797,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":134625,"byte_end":134640,"line_start":2797,"line_end":2797,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2938},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":136144,"byte_end":136169,"line_start":2824,"line_end":2824,"column_start":16,"column_end":41},"name":"construct_with_new_target","qualname":"::Reflect::construct_with_new_target","value":"pub fn construct_with_new_target(&Function, &Array, &Function)\n-> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.construct()` method acts like the new operator, but\n as a function.  It is equivalent to calling `new target(...args)`. It\n gives also the added option to specify a different prototype.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":134625,"byte_end":134640,"line_start":2797,"line_end":2797,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":134625,"byte_end":134640,"line_start":2797,"line_end":2797,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2940},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":136686,"byte_end":136701,"line_start":2835,"line_end":2835,"column_start":16,"column_end":31},"name":"define_property","qualname":"::Reflect::define_property","value":"pub fn define_property(&Object, &JsValue, &Object) -> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.defineProperty()` method is like\n `Object.defineProperty()` but returns a `Boolean`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":134625,"byte_end":134640,"line_start":2797,"line_end":2797,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":134625,"byte_end":134640,"line_start":2797,"line_end":2797,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2942},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":137230,"byte_end":137245,"line_start":2846,"line_end":2846,"column_start":16,"column_end":31},"name":"delete_property","qualname":"::Reflect::delete_property","value":"pub fn delete_property(&Object, &JsValue) -> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.deleteProperty()` method allows to delete\n properties.  It is like the `delete` operator as a function.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":134625,"byte_end":134640,"line_start":2797,"line_end":2797,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":134625,"byte_end":134640,"line_start":2797,"line_end":2797,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2944},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":137655,"byte_end":137658,"line_start":2853,"line_end":2853,"column_start":16,"column_end":19},"name":"get","qualname":"::Reflect::get","value":"pub fn get(&JsValue, &JsValue) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.get()` method works like getting a property from\n an object (`target[propertyKey]`) as a function.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":134625,"byte_end":134640,"line_start":2797,"line_end":2797,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":134625,"byte_end":134640,"line_start":2797,"line_end":2797,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2946},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":137920,"byte_end":137927,"line_start":2858,"line_end":2858,"column_start":16,"column_end":23},"name":"get_f64","qualname":"::Reflect::get_f64","value":"pub fn get_f64(&JsValue, f64) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The same as [`get`](fn.get.html)\n except the key is an `f64`, which is slightly faster.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":134625,"byte_end":134640,"line_start":2797,"line_end":2797,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":134625,"byte_end":134640,"line_start":2797,"line_end":2797,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2948},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":138183,"byte_end":138190,"line_start":2863,"line_end":2863,"column_start":16,"column_end":23},"name":"get_u32","qualname":"::Reflect::get_u32","value":"pub fn get_u32(&JsValue, u32) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The same as [`get`](fn.get.html)\n except the key is a `u32`, which is slightly faster.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":134625,"byte_end":134640,"line_start":2797,"line_end":2797,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":134625,"byte_end":134640,"line_start":2797,"line_end":2797,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2950},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":138762,"byte_end":138789,"line_start":2871,"line_end":2871,"column_start":16,"column_end":43},"name":"get_own_property_descriptor","qualname":"::Reflect::get_own_property_descriptor","value":"pub fn get_own_property_descriptor(&Object, &JsValue)\n-> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.getOwnPropertyDescriptor()` method is similar to\n `Object.getOwnPropertyDescriptor()`. It returns a property descriptor\n of the given property if it exists on the object, `undefined` otherwise.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":134625,"byte_end":134640,"line_start":2797,"line_end":2797,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":134625,"byte_end":134640,"line_start":2797,"line_end":2797,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2952},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":139398,"byte_end":139414,"line_start":2883,"line_end":2883,"column_start":16,"column_end":32},"name":"get_prototype_of","qualname":"::Reflect::get_prototype_of","value":"pub fn get_prototype_of(&JsValue) -> Result<Object, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.getPrototypeOf()` method is almost the same\n method as `Object.getPrototypeOf()`. It returns the prototype\n (i.e. the value of the internal `[[Prototype]]` property) of\n the specified object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":134625,"byte_end":134640,"line_start":2797,"line_end":2797,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":134625,"byte_end":134640,"line_start":2797,"line_end":2797,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2954},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":139770,"byte_end":139773,"line_start":2890,"line_end":2890,"column_start":16,"column_end":19},"name":"has","qualname":"::Reflect::has","value":"pub fn has(&JsValue, &JsValue) -> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.has()` method works like the in operator as a\n function.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":134625,"byte_end":134640,"line_start":2797,"line_end":2797,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":134625,"byte_end":134640,"line_start":2797,"line_end":2797,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2956},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":140320,"byte_end":140333,"line_start":2898,"line_end":2898,"column_start":16,"column_end":29},"name":"is_extensible","qualname":"::Reflect::is_extensible","value":"pub fn is_extensible(&Object) -> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.isExtensible()` method determines if an object is\n extensible (whether it can have new properties added to it). It is\n similar to `Object.isExtensible()`, but with some differences.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":134625,"byte_end":134640,"line_start":2797,"line_end":2797,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":134625,"byte_end":134640,"line_start":2797,"line_end":2797,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2958},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":140730,"byte_end":140738,"line_start":2905,"line_end":2905,"column_start":16,"column_end":24},"name":"own_keys","qualname":"::Reflect::own_keys","value":"pub fn own_keys(&JsValue) -> Result<Array, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.ownKeys()` method returns an array of the\n target object's own property keys.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":134625,"byte_end":134640,"line_start":2797,"line_end":2797,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":134625,"byte_end":134640,"line_start":2797,"line_end":2797,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2960},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":141314,"byte_end":141332,"line_start":2914,"line_end":2914,"column_start":16,"column_end":34},"name":"prevent_extensions","qualname":"::Reflect::prevent_extensions","value":"pub fn prevent_extensions(&Object) -> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.preventExtensions()` method prevents new\n properties from ever being added to an object (i.e. prevents\n future extensions to the object). It is similar to\n `Object.preventExtensions()`, but with some differences.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":134625,"byte_end":134640,"line_start":2797,"line_end":2797,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":134625,"byte_end":134640,"line_start":2797,"line_end":2797,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2962},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":141687,"byte_end":141690,"line_start":2921,"line_end":2921,"column_start":16,"column_end":19},"name":"set","qualname":"::Reflect::set","value":"pub fn set(&JsValue, &JsValue, &JsValue) -> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.set()` method works like setting a\n property on an object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":134625,"byte_end":134640,"line_start":2797,"line_end":2797,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":134625,"byte_end":134640,"line_start":2797,"line_end":2797,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2964},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":142022,"byte_end":142029,"line_start":2930,"line_end":2930,"column_start":16,"column_end":23},"name":"set_f64","qualname":"::Reflect::set_f64","value":"pub fn set_f64(&JsValue, f64, &JsValue) -> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The same as [`set`](fn.set.html)\n except the key is an `f64`, which is slightly faster.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":134625,"byte_end":134640,"line_start":2797,"line_end":2797,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":134625,"byte_end":134640,"line_start":2797,"line_end":2797,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2966},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":142355,"byte_end":142362,"line_start":2939,"line_end":2939,"column_start":16,"column_end":23},"name":"set_u32","qualname":"::Reflect::set_u32","value":"pub fn set_u32(&JsValue, u32, &JsValue) -> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The same as [`set`](fn.set.html)\n except the key is a `u32`, which is slightly faster.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":134625,"byte_end":134640,"line_start":2797,"line_end":2797,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":134625,"byte_end":134640,"line_start":2797,"line_end":2797,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2968},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":142816,"byte_end":142833,"line_start":2950,"line_end":2950,"column_start":16,"column_end":33},"name":"set_with_receiver","qualname":"::Reflect::set_with_receiver","value":"pub fn set_with_receiver(&JsValue, &JsValue, &JsValue, &JsValue)\n-> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.set()` method works like setting a\n property on an object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":134625,"byte_end":134640,"line_start":2797,"line_end":2797,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":134625,"byte_end":134640,"line_start":2797,"line_end":2797,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2970},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143506,"byte_end":143522,"line_start":2964,"line_end":2964,"column_start":16,"column_end":32},"name":"set_prototype_of","qualname":"::Reflect::set_prototype_of","value":"pub fn set_prototype_of(&Object, &JsValue) -> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.setPrototypeOf()` method is the same\n method as `Object.setPrototypeOf()`. It sets the prototype\n (i.e., the internal `[[Prototype]]` property) of a specified\n object to another object or to null.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":134625,"byte_end":134640,"line_start":2797,"line_end":2797,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":134625,"byte_end":134640,"line_start":2797,"line_end":2797,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3141},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143757,"byte_end":143763,"line_start":2973,"line_end":2973,"column_start":14,"column_end":20},"name":"RegExp","qualname":"::RegExp","value":"RegExp {  }","parent":null,"children":[{"krate":0,"index":3142}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3058},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":144057,"byte_end":144061,"line_start":2980,"line_end":2980,"column_start":12,"column_end":16},"name":"exec","qualname":"<RegExp>::exec","value":"pub fn exec(&Self, &str) -> Option<Array>","parent":null,"children":[],"decl_id":null,"docs":" The `exec()` method executes a search for a match in a specified\n string. Returns a result array, or null.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3061},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":144404,"byte_end":144409,"line_start":2987,"line_end":2987,"column_start":12,"column_end":17},"name":"flags","qualname":"<RegExp>::flags","value":"pub fn flags(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The flags property returns a string consisting of the flags of\n the current regular expression object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3064},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":144814,"byte_end":144820,"line_start":2995,"line_end":2995,"column_start":12,"column_end":18},"name":"global","qualname":"<RegExp>::global","value":"pub fn global(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The global property indicates whether or not the \"g\" flag is\n used with the regular expression. global is a read-only\n property of an individual regular expression instance.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3067},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":145255,"byte_end":145266,"line_start":3003,"line_end":3003,"column_start":12,"column_end":23},"name":"ignore_case","qualname":"<RegExp>::ignore_case","value":"pub fn ignore_case(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The ignoreCase property indicates whether or not the \"i\" flag\n is used with the regular expression. ignoreCase is a read-only\n property of an individual regular expression instance.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3070},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":145710,"byte_end":145715,"line_start":3012,"line_end":3012,"column_start":12,"column_end":17},"name":"input","qualname":"<RegExp>::input","value":"pub fn input() -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The non-standard input property is a static property of\n regular expressions that contains the string against which a\n regular expression is matched. RegExp.$_ is an alias for this\n property.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3073},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":146092,"byte_end":146102,"line_start":3019,"line_end":3019,"column_start":12,"column_end":22},"name":"last_index","qualname":"<RegExp>::last_index","value":"pub fn last_index(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The lastIndex is a read/write integer property of regular expression\n instances that specifies the index at which to start the next match.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3076},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":146487,"byte_end":146501,"line_start":3026,"line_end":3026,"column_start":12,"column_end":26},"name":"set_last_index","qualname":"<RegExp>::set_last_index","value":"pub fn set_last_index(&Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" The lastIndex is a read/write integer property of regular expression\n instances that specifies the index at which to start the next match.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3079},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":146957,"byte_end":146967,"line_start":3034,"line_end":3034,"column_start":12,"column_end":22},"name":"last_match","qualname":"<RegExp>::last_match","value":"pub fn last_match() -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The non-standard lastMatch property is a static and read-only\n property of regular expressions that contains the last matched\n characters. `RegExp.$&` is an alias for this property.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3082},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":147437,"byte_end":147447,"line_start":3043,"line_end":3043,"column_start":12,"column_end":22},"name":"last_paren","qualname":"<RegExp>::last_paren","value":"pub fn last_paren() -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The non-standard lastParen property is a static and read-only\n property of regular expressions that contains the last\n parenthesized substring match, if any. `RegExp.$+` is an alias\n for this property.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3085},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":147922,"byte_end":147934,"line_start":3052,"line_end":3052,"column_start":12,"column_end":24},"name":"left_context","qualname":"<RegExp>::left_context","value":"pub fn left_context() -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The non-standard leftContext property is a static and\n read-only property of regular expressions that contains the\n substring preceding the most recent match. `RegExp.$`` is an\n alias for this property.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3088},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":148335,"byte_end":148344,"line_start":3060,"line_end":3060,"column_start":12,"column_end":21},"name":"multiline","qualname":"<RegExp>::multiline","value":"pub fn multiline(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The multiline property indicates whether or not the \"m\" flag\n is used with the regular expression. multiline is a read-only\n property of an individual regular expression instance.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3091},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":148771,"byte_end":148773,"line_start":3068,"line_end":3068,"column_start":12,"column_end":14},"name":"n1","qualname":"<RegExp>::n1","value":"pub fn n1() -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The non-standard $1, $2, $3, $4, $5, $6, $7, $8, $9 properties\n are static and read-only properties of regular expressions\n that contain parenthesized substring matches.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3094},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":148871,"byte_end":148873,"line_start":3070,"line_end":3070,"column_start":12,"column_end":14},"name":"n2","qualname":"<RegExp>::n2","value":"pub fn n2() -> JsString","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3097},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":148971,"byte_end":148973,"line_start":3072,"line_end":3072,"column_start":12,"column_end":14},"name":"n3","qualname":"<RegExp>::n3","value":"pub fn n3() -> JsString","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3100},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":149071,"byte_end":149073,"line_start":3074,"line_end":3074,"column_start":12,"column_end":14},"name":"n4","qualname":"<RegExp>::n4","value":"pub fn n4() -> JsString","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3103},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":149171,"byte_end":149173,"line_start":3076,"line_end":3076,"column_start":12,"column_end":14},"name":"n5","qualname":"<RegExp>::n5","value":"pub fn n5() -> JsString","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3106},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":149271,"byte_end":149273,"line_start":3078,"line_end":3078,"column_start":12,"column_end":14},"name":"n6","qualname":"<RegExp>::n6","value":"pub fn n6() -> JsString","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3109},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":149371,"byte_end":149373,"line_start":3080,"line_end":3080,"column_start":12,"column_end":14},"name":"n7","qualname":"<RegExp>::n7","value":"pub fn n7() -> JsString","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3112},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":149471,"byte_end":149473,"line_start":3082,"line_end":3082,"column_start":12,"column_end":14},"name":"n8","qualname":"<RegExp>::n8","value":"pub fn n8() -> JsString","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3115},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":149571,"byte_end":149573,"line_start":3084,"line_end":3084,"column_start":12,"column_end":14},"name":"n9","qualname":"<RegExp>::n9","value":"pub fn n9() -> JsString","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3118},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":149862,"byte_end":149865,"line_start":3090,"line_end":3090,"column_start":12,"column_end":15},"name":"new","qualname":"<RegExp>::new","value":"pub fn new(&str, &str) -> RegExp","parent":null,"children":[],"decl_id":null,"docs":" The `RegExp` constructor creates a regular expression object for matching text with a pattern.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3121},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":149949,"byte_end":149959,"line_start":3092,"line_end":3092,"column_start":12,"column_end":22},"name":"new_regexp","qualname":"<RegExp>::new_regexp","value":"pub fn new_regexp(&RegExp, &str) -> RegExp","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3124},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":150464,"byte_end":150477,"line_start":3101,"line_end":3101,"column_start":12,"column_end":25},"name":"right_context","qualname":"<RegExp>::right_context","value":"pub fn right_context() -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The non-standard rightContext property is a static and\n read-only property of regular expressions that contains the\n substring following the most recent match. `RegExp.$'` is an\n alias for this property.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3127},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":150859,"byte_end":150865,"line_start":3109,"line_end":3109,"column_start":12,"column_end":18},"name":"source","qualname":"<RegExp>::source","value":"pub fn source(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The source property returns a String containing the source\n text of the regexp object, and it doesn't contain the two\n forward slashes on both sides and any flags.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3130},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":151360,"byte_end":151366,"line_start":3119,"line_end":3119,"column_start":12,"column_end":18},"name":"sticky","qualname":"<RegExp>::sticky","value":"pub fn sticky(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The sticky property reflects whether or not the search is\n sticky (searches in strings only from the index indicated by\n the lastIndex property of this regular expression). sticky is\n a read-only property of an individual regular expression\n object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3133},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":151711,"byte_end":151715,"line_start":3127,"line_end":3127,"column_start":12,"column_end":16},"name":"test","qualname":"<RegExp>::test","value":"pub fn test(&Self, &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `test()` method executes a search for a match between a\n regular expression and a specified string. Returns true or\n false.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3136},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":152040,"byte_end":152049,"line_start":3134,"line_end":3134,"column_start":12,"column_end":21},"name":"to_string","qualname":"<RegExp>::to_string","value":"pub fn to_string(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toString()` method returns a string representing the\n regular expression.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3139},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":152455,"byte_end":152462,"line_start":3142,"line_end":3142,"column_start":12,"column_end":19},"name":"unicode","qualname":"<RegExp>::unicode","value":"pub fn unicode(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The unicode property indicates whether or not the \"u\" flag is\n used with a regular expression. unicode is a read-only\n property of an individual regular expression instance.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":143606,"byte_end":143621,"line_start":2969,"line_end":2969,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":3260},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":152650,"byte_end":152653,"line_start":3150,"line_end":3150,"column_start":14,"column_end":17},"name":"Set","qualname":"::Set","value":"Set {  }","parent":null,"children":[{"krate":0,"index":3261}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":152497,"byte_end":152512,"line_start":3146,"line_end":3146,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":152497,"byte_end":152512,"line_start":3146,"line_end":3146,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":152497,"byte_end":152512,"line_start":3146,"line_end":3146,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3240},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":152933,"byte_end":152936,"line_start":3157,"line_end":3157,"column_start":12,"column_end":15},"name":"add","qualname":"<Set>::add","value":"pub fn add(&Self, &JsValue) -> Set","parent":null,"children":[],"decl_id":null,"docs":" The `add()` method appends a new element with a specified value to the\n end of a [`Set`] object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":152497,"byte_end":152512,"line_start":3146,"line_end":3146,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":152497,"byte_end":152512,"line_start":3146,"line_end":3146,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3243},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":153215,"byte_end":153220,"line_start":3163,"line_end":3163,"column_start":12,"column_end":17},"name":"clear","qualname":"<Set>::clear","value":"pub fn clear(&Self)","parent":null,"children":[],"decl_id":null,"docs":" The `clear()` method removes all elements from a [`Set`] object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":152497,"byte_end":152512,"line_start":3146,"line_end":3146,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":152497,"byte_end":152512,"line_start":3146,"line_end":3146,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3246},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":153494,"byte_end":153500,"line_start":3170,"line_end":3170,"column_start":12,"column_end":18},"name":"delete","qualname":"<Set>::delete","value":"pub fn delete(&Self, &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `delete()` method removes the specified element from a [`Set`]\n object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":152497,"byte_end":152512,"line_start":3146,"line_end":3146,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":152497,"byte_end":152512,"line_start":3146,"line_end":3146,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3249},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":153855,"byte_end":153863,"line_start":3177,"line_end":3177,"column_start":12,"column_end":20},"name":"for_each","qualname":"<Set>::for_each","value":"pub fn for_each(&Self, &mut dyn FnMut(JsValue, JsValue, Set) -> ())","parent":null,"children":[],"decl_id":null,"docs":" The `forEach()` method executes a provided function once for each value\n in the Set object, in insertion order.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":152497,"byte_end":152512,"line_start":3146,"line_end":3146,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":152497,"byte_end":152512,"line_start":3146,"line_end":3146,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3252},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":154235,"byte_end":154238,"line_start":3184,"line_end":3184,"column_start":12,"column_end":15},"name":"has","qualname":"<Set>::has","value":"pub fn has(&Self, &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `has()` method returns a boolean indicating whether an element with\n the specified value exists in a [`Set`] object or not.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":152497,"byte_end":152512,"line_start":3146,"line_end":3146,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":152497,"byte_end":152512,"line_start":3146,"line_end":3146,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3255},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":154568,"byte_end":154571,"line_start":3191,"line_end":3191,"column_start":12,"column_end":15},"name":"new","qualname":"<Set>::new","value":"pub fn new(&JsValue) -> Set","parent":null,"children":[],"decl_id":null,"docs":" The [`Set`] object lets you store unique values of any type, whether\n primitive values or object references.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":152497,"byte_end":152512,"line_start":3146,"line_end":3146,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":152497,"byte_end":152512,"line_start":3146,"line_end":3146,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3258},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":154875,"byte_end":154879,"line_start":3198,"line_end":3198,"column_start":12,"column_end":16},"name":"size","qualname":"<Set>::size","value":"pub fn size(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The size accessor property returns the number of elements in a [`Set`]\n object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":152497,"byte_end":152512,"line_start":3146,"line_end":3146,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":152497,"byte_end":152512,"line_start":3146,"line_end":3146,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3274},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":155612,"byte_end":155619,"line_start":3218,"line_end":3218,"column_start":12,"column_end":19},"name":"entries","qualname":"<Set>::entries","value":"pub fn entries(&Self) -> Iterator","parent":null,"children":[],"decl_id":null,"docs":" The `entries()` method returns a new Iterator object that contains an\n array of [value, value] for each element in the Set object, in insertion\n order. For Set objects there is no key like in Map objects. However, to\n keep the API similar to the Map object, each entry has the same value\n for its key and value here, so that an array [value, value] is returned.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":155016,"byte_end":155031,"line_start":3208,"line_end":3208,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":155016,"byte_end":155031,"line_start":3208,"line_end":3208,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3277},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":155984,"byte_end":155988,"line_start":3226,"line_end":3226,"column_start":12,"column_end":16},"name":"keys","qualname":"<Set>::keys","value":"pub fn keys(&Self) -> Iterator","parent":null,"children":[],"decl_id":null,"docs":" The `keys()` method is an alias for this method (for similarity with\n Map objects); it behaves exactly the same and returns values\n of Set elements.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":155016,"byte_end":155031,"line_start":3208,"line_end":3208,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":155016,"byte_end":155031,"line_start":3208,"line_end":3208,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3280},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":156330,"byte_end":156336,"line_start":3233,"line_end":3233,"column_start":12,"column_end":18},"name":"values","qualname":"<Set>::values","value":"pub fn values(&Self) -> Iterator","parent":null,"children":[],"decl_id":null,"docs":" The `values()` method returns a new Iterator object that contains the\n values for each element in the Set object in insertion order.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":155016,"byte_end":155031,"line_start":3208,"line_end":3208,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":155016,"byte_end":155031,"line_start":3208,"line_end":3208,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":3380},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":156863,"byte_end":156874,"line_start":3246,"line_end":3246,"column_start":14,"column_end":25},"name":"SyntaxError","qualname":"::SyntaxError","value":"SyntaxError {  }","parent":null,"children":[{"krate":0,"index":3381}],"decl_id":null,"docs":" A `SyntaxError` is thrown when the JavaScript engine encounters tokens or\n token order that does not conform to the syntax of the language when\n parsing code.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":156379,"byte_end":156394,"line_start":3237,"line_end":3237,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":156379,"byte_end":156394,"line_start":3237,"line_end":3237,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":156379,"byte_end":156394,"line_start":3237,"line_end":3237,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3378},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":157232,"byte_end":157235,"line_start":3254,"line_end":3254,"column_start":12,"column_end":15},"name":"new","qualname":"<SyntaxError>::new","value":"pub fn new(&str) -> SyntaxError","parent":null,"children":[],"decl_id":null,"docs":" A `SyntaxError` is thrown when the JavaScript engine encounters tokens or\n token order that does not conform to the syntax of the language when\n parsing code.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":156379,"byte_end":156394,"line_start":3237,"line_end":3237,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":156379,"byte_end":156394,"line_start":3237,"line_end":3237,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":3491},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":157683,"byte_end":157692,"line_start":3266,"line_end":3266,"column_start":14,"column_end":23},"name":"TypeError","qualname":"::TypeError","value":"TypeError {  }","parent":null,"children":[{"krate":0,"index":3492}],"decl_id":null,"docs":" The `TypeError` object represents an error when a value is not of the\n expected type.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":157283,"byte_end":157298,"line_start":3258,"line_end":3258,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":157283,"byte_end":157298,"line_start":3258,"line_end":3258,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":157283,"byte_end":157298,"line_start":3258,"line_end":3258,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3489},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":157968,"byte_end":157971,"line_start":3273,"line_end":3273,"column_start":12,"column_end":15},"name":"new","qualname":"<TypeError>::new","value":"pub fn new(&str) -> TypeError","parent":null,"children":[],"decl_id":null,"docs":" The `TypeError` object represents an error when a value is not of the\n expected type.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":157283,"byte_end":157298,"line_start":3258,"line_end":3258,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":157283,"byte_end":157298,"line_start":3258,"line_end":3258,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":3602},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":158452,"byte_end":158460,"line_start":3285,"line_end":3285,"column_start":14,"column_end":22},"name":"UriError","qualname":"::UriError","value":"UriError {  }","parent":null,"children":[{"krate":0,"index":3603}],"decl_id":null,"docs":" The `URIError` object represents an error when a global URI handling\n function was used in a wrong way.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":158016,"byte_end":158031,"line_start":3277,"line_end":3277,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":158016,"byte_end":158031,"line_start":3277,"line_end":3277,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":158016,"byte_end":158031,"line_start":3277,"line_end":3277,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3600},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":158776,"byte_end":158779,"line_start":3292,"line_end":3292,"column_start":12,"column_end":15},"name":"new","qualname":"<UriError>::new","value":"pub fn new(&str) -> UriError","parent":null,"children":[],"decl_id":null,"docs":" The `URIError` object represents an error when a global URI handling\n function was used in a wrong way.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":158016,"byte_end":158031,"line_start":3277,"line_end":3277,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":158016,"byte_end":158031,"line_start":3277,"line_end":3277,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":3715},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":158987,"byte_end":158994,"line_start":3300,"line_end":3300,"column_start":14,"column_end":21},"name":"WeakMap","qualname":"::WeakMap","value":"WeakMap {  }","parent":null,"children":[{"krate":0,"index":3716}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":158822,"byte_end":158837,"line_start":3296,"line_end":3296,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":158822,"byte_end":158837,"line_start":3296,"line_end":3296,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":158822,"byte_end":158837,"line_start":3296,"line_end":3296,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3701},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":159356,"byte_end":159359,"line_start":3308,"line_end":3308,"column_start":12,"column_end":15},"name":"new","qualname":"<WeakMap>::new","value":"pub fn new() -> WeakMap","parent":null,"children":[],"decl_id":null,"docs":" The [`WeakMap`] object is a collection of key/value pairs in which the\n keys are weakly referenced.  The keys must be objects and the values can\n be arbitrary values.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":158822,"byte_end":158837,"line_start":3296,"line_end":3296,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":158822,"byte_end":158837,"line_start":3296,"line_end":3296,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3704},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":159687,"byte_end":159690,"line_start":3315,"line_end":3315,"column_start":12,"column_end":15},"name":"set","qualname":"<WeakMap>::set","value":"pub fn set(&Self, &Object, &JsValue) -> WeakMap","parent":null,"children":[],"decl_id":null,"docs":" The `set()` method sets the value for the key in the [`WeakMap`] object.\n Returns the [`WeakMap`] object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":158822,"byte_end":158837,"line_start":3296,"line_end":3296,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":158822,"byte_end":158837,"line_start":3296,"line_end":3296,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3707},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":160017,"byte_end":160020,"line_start":3322,"line_end":3322,"column_start":12,"column_end":15},"name":"get","qualname":"<WeakMap>::get","value":"pub fn get(&Self, &Object) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The `get()` method returns a specified by key element\n from a [`WeakMap`] object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":158822,"byte_end":158837,"line_start":3296,"line_end":3296,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":158822,"byte_end":158837,"line_start":3296,"line_end":3296,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3710},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":160380,"byte_end":160383,"line_start":3329,"line_end":3329,"column_start":12,"column_end":15},"name":"has","qualname":"<WeakMap>::has","value":"pub fn has(&Self, &Object) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `has()` method returns a boolean indicating whether an element with\n the specified key exists in the [`WeakMap`] object or not.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":158822,"byte_end":158837,"line_start":3296,"line_end":3296,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":158822,"byte_end":158837,"line_start":3296,"line_end":3296,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3713},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":160691,"byte_end":160697,"line_start":3336,"line_end":3336,"column_start":12,"column_end":18},"name":"delete","qualname":"<WeakMap>::delete","value":"pub fn delete(&Self, &Object) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `delete()` method removes the specified element from a [`WeakMap`]\n object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":158822,"byte_end":158837,"line_start":3296,"line_end":3296,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":158822,"byte_end":158837,"line_start":3296,"line_end":3296,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":3825},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":160994,"byte_end":161001,"line_start":3350,"line_end":3350,"column_start":14,"column_end":21},"name":"WeakSet","qualname":"::WeakSet","value":"WeakSet {  }","parent":null,"children":[{"krate":0,"index":3826}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":160834,"byte_end":160849,"line_start":3346,"line_end":3346,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":160834,"byte_end":160849,"line_start":3346,"line_end":3346,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":160834,"byte_end":160849,"line_start":3346,"line_end":3346,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3814},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":161255,"byte_end":161258,"line_start":3356,"line_end":3356,"column_start":12,"column_end":15},"name":"new","qualname":"<WeakSet>::new","value":"pub fn new() -> WeakSet","parent":null,"children":[],"decl_id":null,"docs":" The `WeakSet` object lets you store weakly held objects in a collection.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":160834,"byte_end":160849,"line_start":3346,"line_end":3346,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":160834,"byte_end":160849,"line_start":3346,"line_end":3346,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3817},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":161553,"byte_end":161556,"line_start":3363,"line_end":3363,"column_start":12,"column_end":15},"name":"has","qualname":"<WeakSet>::has","value":"pub fn has(&Self, &Object) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `has()` method returns a boolean indicating whether an object exists\n in a WeakSet or not.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":160834,"byte_end":160849,"line_start":3346,"line_end":3346,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":160834,"byte_end":160849,"line_start":3346,"line_end":3346,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3820},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":161848,"byte_end":161851,"line_start":3369,"line_end":3369,"column_start":12,"column_end":15},"name":"add","qualname":"<WeakSet>::add","value":"pub fn add(&Self, &Object) -> WeakSet","parent":null,"children":[],"decl_id":null,"docs":" The `add()` method appends a new object to the end of a WeakSet object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":160834,"byte_end":160849,"line_start":3346,"line_end":3346,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":160834,"byte_end":160849,"line_start":3346,"line_end":3346,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3823},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":162160,"byte_end":162166,"line_start":3376,"line_end":3376,"column_start":12,"column_end":18},"name":"delete","qualname":"<WeakSet>::delete","value":"pub fn delete(&Self, &Object) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `delete()` method removes the specified element from a WeakSet\n object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":160834,"byte_end":160849,"line_start":3346,"line_end":3346,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":160834,"byte_end":160849,"line_start":3346,"line_end":3346,"column_start":1,"column_end":16}}]},{"kind":"Mod","id":{"krate":0,"index":125},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":162327,"byte_end":162338,"line_start":3386,"line_end":3386,"column_start":9,"column_end":20},"name":"WebAssembly","qualname":"::WebAssembly","value":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":3838},{"krate":0,"index":3840},{"krate":0,"index":3842},{"krate":0,"index":3844},{"krate":0,"index":3846},{"krate":0,"index":3936},{"krate":0,"index":3938},{"krate":0,"index":3940},{"krate":0,"index":3942},{"krate":0,"index":3943},{"krate":0,"index":3946},{"krate":0,"index":3947},{"krate":0,"index":3848},{"krate":0,"index":3923},{"krate":0,"index":3928},{"krate":0,"index":3933},{"krate":0,"index":4040},{"krate":0,"index":4042},{"krate":0,"index":4044},{"krate":0,"index":4046},{"krate":0,"index":4047},{"krate":0,"index":4050},{"krate":0,"index":4051},{"krate":0,"index":3949},{"krate":0,"index":4024},{"krate":0,"index":4029},{"krate":0,"index":4034},{"krate":0,"index":4037},{"krate":0,"index":4141},{"krate":0,"index":4143},{"krate":0,"index":4145},{"krate":0,"index":4147},{"krate":0,"index":4148},{"krate":0,"index":4151},{"krate":0,"index":4152},{"krate":0,"index":4053},{"krate":0,"index":4128},{"krate":0,"index":4133},{"krate":0,"index":4138},{"krate":0,"index":4242},{"krate":0,"index":4244},{"krate":0,"index":4246},{"krate":0,"index":4248},{"krate":0,"index":4249},{"krate":0,"index":4252},{"krate":0,"index":4253},{"krate":0,"index":4154},{"krate":0,"index":4229},{"krate":0,"index":4234},{"krate":0,"index":4239},{"krate":0,"index":4352},{"krate":0,"index":4354},{"krate":0,"index":4356},{"krate":0,"index":4358},{"krate":0,"index":4359},{"krate":0,"index":4362},{"krate":0,"index":4363},{"krate":0,"index":4255},{"krate":0,"index":4330},{"krate":0,"index":4335},{"krate":0,"index":4340},{"krate":0,"index":4343},{"krate":0,"index":4346},{"krate":0,"index":4349},{"krate":0,"index":4465},{"krate":0,"index":4467},{"krate":0,"index":4469},{"krate":0,"index":4471},{"krate":0,"index":4472},{"krate":0,"index":4475},{"krate":0,"index":4476},{"krate":0,"index":4365},{"krate":0,"index":4440},{"krate":0,"index":4445},{"krate":0,"index":4450},{"krate":0,"index":4453},{"krate":0,"index":4456},{"krate":0,"index":4459},{"krate":0,"index":4462},{"krate":0,"index":4572},{"krate":0,"index":4574},{"krate":0,"index":4576},{"krate":0,"index":4578},{"krate":0,"index":4579},{"krate":0,"index":4582},{"krate":0,"index":4583},{"krate":0,"index":4478},{"krate":0,"index":4553},{"krate":0,"index":4558},{"krate":0,"index":4563},{"krate":0,"index":4566},{"krate":0,"index":4569},{"krate":0,"index":4679},{"krate":0,"index":4681},{"krate":0,"index":4683},{"krate":0,"index":4685},{"krate":0,"index":4686},{"krate":0,"index":4689},{"krate":0,"index":4690},{"krate":0,"index":4585},{"krate":0,"index":4660},{"krate":0,"index":4665},{"krate":0,"index":4670},{"krate":0,"index":4673},{"krate":0,"index":4676}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":162294,"byte_end":162318,"line_start":3385,"line_end":3385,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":3838},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":162942,"byte_end":162949,"line_start":3399,"line_end":3399,"column_start":16,"column_end":23},"name":"compile","qualname":"::WebAssembly::compile","value":"pub fn compile(&JsValue) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.compile()` function compiles a `WebAssembly.Module`\n from WebAssembly binary code.  This function is useful if it is\n necessary to a compile a module before it can be instantiated\n (otherwise, the `WebAssembly.instantiate()` function should be used).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":162383,"byte_end":162398,"line_start":3390,"line_end":3390,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":162383,"byte_end":162398,"line_start":3390,"line_end":3390,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":3840},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":163349,"byte_end":163367,"line_start":3406,"line_end":3406,"column_start":16,"column_end":34},"name":"instantiate_buffer","qualname":"::WebAssembly::instantiate_buffer","value":"pub fn instantiate_buffer(&[u8], &Object) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.instantiate()` function allows you to compile and\n instantiate WebAssembly code.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":162383,"byte_end":162398,"line_start":3390,"line_end":3390,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":162383,"byte_end":162398,"line_start":3390,"line_end":3390,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":3842},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":163775,"byte_end":163793,"line_start":3413,"line_end":3413,"column_start":16,"column_end":34},"name":"instantiate_module","qualname":"::WebAssembly::instantiate_module","value":"pub fn instantiate_module(&Module, &Object) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.instantiate()` function allows you to compile and\n instantiate WebAssembly code.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":162383,"byte_end":162398,"line_start":3390,"line_end":3390,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":162383,"byte_end":162398,"line_start":3390,"line_end":3390,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":3844},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":164350,"byte_end":164371,"line_start":3422,"line_end":3422,"column_start":16,"column_end":37},"name":"instantiate_streaming","qualname":"::WebAssembly::instantiate_streaming","value":"pub fn instantiate_streaming(&Promise, &Object) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.instantiateStreaming()` function compiles and\n instantiates a WebAssembly module directly from a streamed\n underlying source. This is the most efficient, optimized way to load\n wasm code.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":162383,"byte_end":162398,"line_start":3390,"line_end":3390,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":162383,"byte_end":162398,"line_start":3390,"line_end":3390,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":3846},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":164856,"byte_end":164864,"line_start":3430,"line_end":3430,"column_start":16,"column_end":24},"name":"validate","qualname":"::WebAssembly::validate","value":"pub fn validate(&JsValue) -> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.validate()` function validates a given typed\n array of WebAssembly binary code, returning whether the bytes\n form a valid wasm module (`true`) or not (`false`).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":162383,"byte_end":162398,"line_start":3390,"line_end":3390,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":162383,"byte_end":162398,"line_start":3390,"line_end":3390,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3936},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":165520,"byte_end":165532,"line_start":3443,"line_end":3443,"column_start":18,"column_end":30},"name":"CompileError","qualname":"::WebAssembly::CompileError","value":"CompileError {  }","parent":null,"children":[{"krate":0,"index":3937}],"decl_id":null,"docs":" The `WebAssembly.CompileError()` constructor creates a new\n WebAssembly `CompileError` object, which indicates an error during\n WebAssembly decoding or validation.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":164959,"byte_end":164974,"line_start":3434,"line_end":3434,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":164959,"byte_end":164974,"line_start":3434,"line_end":3434,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":164959,"byte_end":164974,"line_start":3434,"line_end":3434,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3934},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":165964,"byte_end":165967,"line_start":3451,"line_end":3451,"column_start":16,"column_end":19},"name":"new","qualname":"<CompileError>::new","value":"pub fn new(&str) -> CompileError","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.CompileError()` constructor creates a new\n WebAssembly `CompileError` object, which indicates an error during\n WebAssembly decoding or validation.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":164959,"byte_end":164974,"line_start":3434,"line_end":3434,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":164959,"byte_end":164974,"line_start":3434,"line_end":3434,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4040},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":166659,"byte_end":166667,"line_start":3465,"line_end":3465,"column_start":18,"column_end":26},"name":"Instance","qualname":"::WebAssembly::Instance","value":"Instance {  }","parent":null,"children":[{"krate":0,"index":4041}],"decl_id":null,"docs":" A `WebAssembly.Instance` object is a stateful, executable instance\n of a `WebAssembly.Module`. Instance objects contain all the exported\n WebAssembly functions that allow calling into WebAssembly code from\n JavaScript.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":166039,"byte_end":166054,"line_start":3455,"line_end":3455,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":166039,"byte_end":166054,"line_start":3455,"line_end":3455,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":166039,"byte_end":166054,"line_start":3455,"line_end":3455,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4035},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":167203,"byte_end":167206,"line_start":3474,"line_end":3474,"column_start":16,"column_end":19},"name":"new","qualname":"<Instance>::new","value":"pub fn new(&Module, &Object) -> Result<Instance, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.Instance()` constructor function can be called to\n synchronously instantiate a given `WebAssembly.Module`\n object. However, the primary way to get an `Instance` is through the\n asynchronous `WebAssembly.instantiateStreaming()` function.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":166039,"byte_end":166054,"line_start":3455,"line_end":3455,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":166039,"byte_end":166054,"line_start":3455,"line_end":3455,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4038},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":167800,"byte_end":167807,"line_start":3483,"line_end":3483,"column_start":16,"column_end":23},"name":"exports","qualname":"<Instance>::exports","value":"pub fn exports(&Self) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `exports` readonly property of the `WebAssembly.Instance` object\n prototype returns an object containing as its members all the\n functions exported from the WebAssembly module instance, to allow\n them to be accessed and used by JavaScript.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":166039,"byte_end":166054,"line_start":3455,"line_end":3455,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":166039,"byte_end":166054,"line_start":3455,"line_end":3455,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4141},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":168449,"byte_end":168458,"line_start":3496,"line_end":3496,"column_start":18,"column_end":27},"name":"LinkError","qualname":"::WebAssembly::LinkError","value":"LinkError {  }","parent":null,"children":[{"krate":0,"index":4142}],"decl_id":null,"docs":" The `WebAssembly.LinkError()` constructor creates a new WebAssembly\n LinkError object, which indicates an error during module\n instantiation (besides traps from the start function).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":167876,"byte_end":167891,"line_start":3487,"line_end":3487,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":167876,"byte_end":167891,"line_start":3487,"line_end":3487,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":167876,"byte_end":167891,"line_start":3487,"line_end":3487,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4139},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":168905,"byte_end":168908,"line_start":3504,"line_end":3504,"column_start":16,"column_end":19},"name":"new","qualname":"<LinkError>::new","value":"pub fn new(&str) -> LinkError","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.LinkError()` constructor creates a new WebAssembly\n LinkError object, which indicates an error during module\n instantiation (besides traps from the start function).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":167876,"byte_end":167891,"line_start":3487,"line_end":3487,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":167876,"byte_end":167891,"line_start":3487,"line_end":3487,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4242},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":169540,"byte_end":169552,"line_start":3517,"line_end":3517,"column_start":18,"column_end":30},"name":"RuntimeError","qualname":"::WebAssembly::RuntimeError","value":"RuntimeError {  }","parent":null,"children":[{"krate":0,"index":4243}],"decl_id":null,"docs":" The `WebAssembly.RuntimeError()` constructor creates a new WebAssembly\n `RuntimeError` object — the type that is thrown whenever WebAssembly\n specifies a trap.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":168981,"byte_end":168996,"line_start":3508,"line_end":3508,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":168981,"byte_end":168996,"line_start":3508,"line_end":3508,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":168981,"byte_end":168996,"line_start":3508,"line_end":3508,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4240},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":169982,"byte_end":169985,"line_start":3525,"line_end":3525,"column_start":16,"column_end":19},"name":"new","qualname":"<RuntimeError>::new","value":"pub fn new(&str) -> RuntimeError","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.RuntimeError()` constructor creates a new WebAssembly\n `RuntimeError` object — the type that is thrown whenever WebAssembly\n specifies a trap.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":168981,"byte_end":168996,"line_start":3508,"line_end":3508,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":168981,"byte_end":168996,"line_start":3508,"line_end":3508,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4352},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":170632,"byte_end":170638,"line_start":3538,"line_end":3538,"column_start":18,"column_end":24},"name":"Module","qualname":"::WebAssembly::Module","value":"Module {  }","parent":null,"children":[{"krate":0,"index":4353}],"decl_id":null,"docs":" A `WebAssembly.Module` object contains stateless WebAssembly code\n that has already been compiled by the browser and can be\n efficiently shared with Workers, and instantiated multiple times.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":170055,"byte_end":170070,"line_start":3529,"line_end":3529,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":170055,"byte_end":170070,"line_start":3529,"line_end":3529,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":170055,"byte_end":170070,"line_start":3529,"line_end":3529,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4341},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":171098,"byte_end":171101,"line_start":3546,"line_end":3546,"column_start":16,"column_end":19},"name":"new","qualname":"<Module>::new","value":"pub fn new(&JsValue) -> Result<Module, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" A `WebAssembly.Module` object contains stateless WebAssembly code\n that has already been compiled by the browser and can be\n efficiently shared with Workers, and instantiated multiple times.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":170055,"byte_end":170070,"line_start":3529,"line_end":3529,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":170055,"byte_end":170070,"line_start":3529,"line_end":3529,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4344},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":171618,"byte_end":171633,"line_start":3554,"line_end":3554,"column_start":16,"column_end":31},"name":"custom_sections","qualname":"<Module>::custom_sections","value":"pub fn custom_sections(&Module, &str) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.customSections()` function returns a copy of the\n contents of all custom sections in the given module with the given\n string name.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":170055,"byte_end":170070,"line_start":3529,"line_end":3529,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":170055,"byte_end":170070,"line_start":3529,"line_end":3529,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4347},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":172081,"byte_end":172088,"line_start":3561,"line_end":3561,"column_start":16,"column_end":23},"name":"exports","qualname":"<Module>::exports","value":"pub fn exports(&Module) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.exports()` function returns an array containing\n descriptions of all the declared exports of the given `Module`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":170055,"byte_end":170070,"line_start":3529,"line_end":3529,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":170055,"byte_end":170070,"line_start":3529,"line_end":3529,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4350},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":172517,"byte_end":172524,"line_start":3568,"line_end":3568,"column_start":16,"column_end":23},"name":"imports","qualname":"<Module>::imports","value":"pub fn imports(&Module) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.imports()` function returns an array containing\n descriptions of all the declared imports of the given `Module`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":170055,"byte_end":170070,"line_start":3529,"line_end":3529,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":170055,"byte_end":170070,"line_start":3529,"line_end":3529,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4465},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":173065,"byte_end":173070,"line_start":3580,"line_end":3580,"column_start":18,"column_end":23},"name":"Table","qualname":"::WebAssembly::Table","value":"Table {  }","parent":null,"children":[{"krate":0,"index":4466}],"decl_id":null,"docs":" The `WebAssembly.Table()` constructor creates a new `Table` object\n of the given size and element type.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":172588,"byte_end":172603,"line_start":3572,"line_end":3572,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":172588,"byte_end":172603,"line_start":3572,"line_end":3572,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":172588,"byte_end":172603,"line_start":3572,"line_end":3572,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4451},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":173431,"byte_end":173434,"line_start":3587,"line_end":3587,"column_start":16,"column_end":19},"name":"new","qualname":"<Table>::new","value":"pub fn new(&Object) -> Result<Table, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.Table()` constructor creates a new `Table` object\n of the given size and element type.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":172588,"byte_end":172603,"line_start":3572,"line_end":3572,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":172588,"byte_end":172603,"line_start":3572,"line_end":3572,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4454},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":173899,"byte_end":173905,"line_start":3595,"line_end":3595,"column_start":16,"column_end":22},"name":"length","qualname":"<Table>::length","value":"pub fn length(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The length prototype property of the `WebAssembly.Table` object\n returns the length of the table, i.e. the number of elements in the\n table.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":172588,"byte_end":172603,"line_start":3572,"line_end":3572,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":172588,"byte_end":172603,"line_start":3572,"line_end":3572,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4457},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":174304,"byte_end":174307,"line_start":3602,"line_end":3602,"column_start":16,"column_end":19},"name":"get","qualname":"<Table>::get","value":"pub fn get(&Self, u32) -> Result<Function, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `get()` prototype method of the `WebAssembly.Table()` object\n retrieves a function reference stored at a given index.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":172588,"byte_end":172603,"line_start":3572,"line_end":3572,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":172588,"byte_end":172603,"line_start":3572,"line_end":3572,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4460},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":174774,"byte_end":174778,"line_start":3610,"line_end":3610,"column_start":16,"column_end":20},"name":"grow","qualname":"<Table>::grow","value":"pub fn grow(&Self, u32) -> Result<u32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `grow()` prototype method of the `WebAssembly.Table` object\n increases the size of the `Table` instance by a specified number of\n elements.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":172588,"byte_end":172603,"line_start":3572,"line_end":3572,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":172588,"byte_end":172603,"line_start":3572,"line_end":3572,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4463},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":175228,"byte_end":175231,"line_start":3617,"line_end":3617,"column_start":16,"column_end":19},"name":"set","qualname":"<Table>::set","value":"pub fn set(&Self, u32, &Function) -> Result<(), JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `set()` prototype method of the `WebAssembly.Table` object mutates a\n reference stored at a given index to a different value.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":172588,"byte_end":172603,"line_start":3572,"line_end":3572,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":172588,"byte_end":172603,"line_start":3572,"line_end":3572,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4572},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":175814,"byte_end":175820,"line_start":3629,"line_end":3629,"column_start":18,"column_end":24},"name":"Global","qualname":"::WebAssembly::Global","value":"Global {  }","parent":null,"children":[{"krate":0,"index":4573}],"decl_id":null,"docs":" The `WebAssembly.Global()` constructor creates a new `Global` object\n of the given type and value.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":175340,"byte_end":175355,"line_start":3621,"line_end":3621,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":175340,"byte_end":175355,"line_start":3621,"line_end":3621,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":175340,"byte_end":175355,"line_start":3621,"line_end":3621,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4564},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":176177,"byte_end":176180,"line_start":3636,"line_end":3636,"column_start":16,"column_end":19},"name":"new","qualname":"<Global>::new","value":"pub fn new(&Object, &JsValue) -> Result<Global, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.Global()` constructor creates a new `Global` object\n of the given type and value.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":175340,"byte_end":175355,"line_start":3621,"line_end":3621,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":175340,"byte_end":175355,"line_start":3621,"line_end":3621,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4567},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":176616,"byte_end":176621,"line_start":3643,"line_end":3643,"column_start":16,"column_end":21},"name":"value","qualname":"<Global>::value","value":"pub fn value(&Self) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The value prototype property of the `WebAssembly.Global` object\n returns the value of the global.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":175340,"byte_end":175355,"line_start":3621,"line_end":3621,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":175340,"byte_end":175355,"line_start":3621,"line_end":3621,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4570},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":176752,"byte_end":176761,"line_start":3645,"line_end":3645,"column_start":16,"column_end":25},"name":"set_value","qualname":"<Global>::set_value","value":"pub fn set_value(&Self, &JsValue)","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":175340,"byte_end":175355,"line_start":3621,"line_end":3621,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":175340,"byte_end":175355,"line_start":3621,"line_end":3621,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4679},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":177172,"byte_end":177178,"line_start":3654,"line_end":3654,"column_start":18,"column_end":24},"name":"Memory","qualname":"::WebAssembly::Memory","value":"Memory {  }","parent":null,"children":[{"krate":0,"index":4680}],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/Memory)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":176832,"byte_end":176847,"line_start":3649,"line_end":3649,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":176832,"byte_end":176847,"line_start":3649,"line_end":3649,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":176832,"byte_end":176847,"line_start":3649,"line_end":3649,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4671},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":177785,"byte_end":177788,"line_start":3665,"line_end":3665,"column_start":16,"column_end":19},"name":"new","qualname":"<Memory>::new","value":"pub fn new(&Object) -> Result<Memory, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.Memory()` constructor creates a new `Memory` object\n which is a resizable `ArrayBuffer` that holds the raw bytes of\n memory accessed by a WebAssembly `Instance`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":176832,"byte_end":176847,"line_start":3649,"line_end":3649,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":176832,"byte_end":176847,"line_start":3649,"line_end":3649,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4674},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":178168,"byte_end":178174,"line_start":3672,"line_end":3672,"column_start":16,"column_end":22},"name":"buffer","qualname":"<Memory>::buffer","value":"pub fn buffer(&Self) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" An accessor property that returns the buffer contained in the\n memory.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":176832,"byte_end":176847,"line_start":3649,"line_end":3649,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":176832,"byte_end":176847,"line_start":3649,"line_end":3649,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4677},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":178739,"byte_end":178743,"line_start":3683,"line_end":3683,"column_start":16,"column_end":20},"name":"grow","qualname":"<Memory>::grow","value":"pub fn grow(&Self, u32) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `grow()` protoype method of the `Memory` object increases the\n size of the memory instance by a specified number of WebAssembly\n pages.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":176832,"byte_end":176847,"line_start":3649,"line_end":3649,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":176832,"byte_end":176847,"line_start":3649,"line_end":3649,"column_start":5,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":127},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":179095,"byte_end":179099,"line_start":3692,"line_end":3692,"column_start":9,"column_end":13},"name":"JSON","qualname":"::JSON","value":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":4692},{"krate":0,"index":4694},{"krate":0,"index":4696},{"krate":0,"index":4698}],"decl_id":null,"docs":" The `JSON` object contains methods for parsing [JavaScript Object\n Notation (JSON)](https://json.org/) and converting values to JSON. It\n can't be called or constructed, and aside from its two method\n properties, it has no interesting functionality of its own.\n","sig":null,"attributes":[{"value":"/ The `JSON` object contains methods for parsing [JavaScript Object","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":178788,"byte_end":178857,"line_start":3687,"line_end":3687,"column_start":1,"column_end":70}},{"value":"/ Notation (JSON)](https://json.org/) and converting values to JSON. It","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":178858,"byte_end":178931,"line_start":3688,"line_end":3688,"column_start":1,"column_end":74}},{"value":"/ can't be called or constructed, and aside from its two method","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":178932,"byte_end":178997,"line_start":3689,"line_end":3689,"column_start":1,"column_end":66}},{"value":"/ properties, it has no interesting functionality of its own.","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":178998,"byte_end":179061,"line_start":3690,"line_end":3690,"column_start":1,"column_end":64}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":179062,"byte_end":179086,"line_start":3691,"line_end":3691,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":4692},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":179515,"byte_end":179520,"line_start":3703,"line_end":3703,"column_start":16,"column_end":21},"name":"parse","qualname":"::JSON::parse","value":"pub fn parse(&str) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `JSON.parse()` method parses a JSON string, constructing the\n JavaScript value or object described by the string.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":179137,"byte_end":179152,"line_start":3696,"line_end":3696,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":179137,"byte_end":179152,"line_start":3696,"line_end":3696,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":4694},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":179859,"byte_end":179868,"line_start":3709,"line_end":3709,"column_start":16,"column_end":25},"name":"stringify","qualname":"::JSON::stringify","value":"pub fn stringify(&JsValue) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `JSON.stringify()` method converts a JavaScript value to a JSON string.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":179137,"byte_end":179152,"line_start":3696,"line_end":3696,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":179137,"byte_end":179152,"line_start":3696,"line_end":3696,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":4696},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":180671,"byte_end":180694,"line_start":3721,"line_end":3721,"column_start":16,"column_end":39},"name":"stringify_with_replacer","qualname":"::JSON::stringify_with_replacer","value":"pub fn stringify_with_replacer(&JsValue, &JsValue)\n-> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `JSON.stringify()` method converts a JavaScript value to a JSON string.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":179137,"byte_end":179152,"line_start":3696,"line_end":3696,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":179137,"byte_end":179152,"line_start":3696,"line_end":3696,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":4698},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182211,"byte_end":182244,"line_start":3745,"line_end":3745,"column_start":16,"column_end":49},"name":"stringify_with_replacer_and_space","qualname":"::JSON::stringify_with_replacer_and_space","value":"pub fn stringify_with_replacer_and_space(&JsValue, &JsValue, &JsValue)\n-> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `JSON.stringify()` method converts a JavaScript value to a JSON string.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":179137,"byte_end":179152,"line_start":3696,"line_end":3696,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":179137,"byte_end":179152,"line_start":3696,"line_end":3696,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4966},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182591,"byte_end":182599,"line_start":3759,"line_end":3759,"column_start":14,"column_end":22},"name":"JsString","qualname":"::JsString","value":"JsString {  }","parent":null,"children":[{"krate":0,"index":4967}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4787},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182904,"byte_end":182910,"line_start":3766,"line_end":3766,"column_start":12,"column_end":18},"name":"length","qualname":"<JsString>::length","value":"pub fn length(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The length property of a String object indicates the length of a string,\n in UTF-16 code units.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4790},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":183321,"byte_end":183328,"line_start":3774,"line_end":3774,"column_start":12,"column_end":19},"name":"char_at","qualname":"<JsString>::char_at","value":"pub fn char_at(&Self, u32) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The String object's `charAt()` method returns a new string consisting of\n the single UTF-16 code unit located at the specified offset into the\n string.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4793},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":184155,"byte_end":184167,"line_start":3788,"line_end":3788,"column_start":12,"column_end":24},"name":"char_code_at","qualname":"<JsString>::char_code_at","value":"pub fn char_code_at(&Self, u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `charCodeAt()` method returns an integer between 0 and 65535\n representing the UTF-16 code unit at the given index (the UTF-16 code\n unit matches the Unicode code point for code points representable in a\n single UTF-16 code unit, but might also be the first code unit of a\n surrogate pair for code points not representable in a single UTF-16 code\n unit, e.g. Unicode code points > 0x10000).  If you want the entire code\n point value, use `codePointAt()`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4796},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":184538,"byte_end":184551,"line_start":3795,"line_end":3795,"column_start":12,"column_end":25},"name":"code_point_at","qualname":"<JsString>::code_point_at","value":"pub fn code_point_at(&Self, u32) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The `codePointAt()` method returns a non-negative integer that is the\n Unicode code point value.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4799},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":184904,"byte_end":184910,"line_start":3802,"line_end":3802,"column_start":12,"column_end":18},"name":"concat","qualname":"<JsString>::concat","value":"pub fn concat(&Self, &JsValue) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `concat()` method concatenates the string arguments to the calling\n string and returns a new string.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4802},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":185332,"byte_end":185341,"line_start":3809,"line_end":3809,"column_start":12,"column_end":21},"name":"ends_with","qualname":"<JsString>::ends_with","value":"pub fn ends_with(&Self, &str, i32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `endsWith()` method determines whether a string ends with the characters of a\n specified string, returning true or false as appropriate.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4805},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":186184,"byte_end":186198,"line_start":3825,"line_end":3825,"column_start":12,"column_end":26},"name":"from_char_code","qualname":"<JsString>::from_char_code","value":"pub fn from_char_code(&[u16]) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The static `String.fromCharCode()` method returns a string created from\n the specified sequence of UTF-16 code units.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4808},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":186468,"byte_end":186483,"line_start":3829,"line_end":3829,"column_start":12,"column_end":27},"name":"from_char_code1","qualname":"<JsString>::from_char_code1","value":"pub fn from_char_code1(u32) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCharCode)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4811},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":186741,"byte_end":186756,"line_start":3833,"line_end":3833,"column_start":12,"column_end":27},"name":"from_char_code2","qualname":"<JsString>::from_char_code2","value":"pub fn from_char_code2(u32, u32) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCharCode)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4814},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":187022,"byte_end":187037,"line_start":3837,"line_end":3837,"column_start":12,"column_end":27},"name":"from_char_code3","qualname":"<JsString>::from_char_code3","value":"pub fn from_char_code3(u32, u32, u32) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCharCode)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4817},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":187311,"byte_end":187326,"line_start":3841,"line_end":3841,"column_start":12,"column_end":27},"name":"from_char_code4","qualname":"<JsString>::from_char_code4","value":"pub fn from_char_code4(u32, u32, u32, u32) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCharCode)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4820},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":187608,"byte_end":187623,"line_start":3845,"line_end":3845,"column_start":12,"column_end":27},"name":"from_char_code5","qualname":"<JsString>::from_char_code5","value":"pub fn from_char_code5(u32, u32, u32, u32, u32) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCharCode)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4823},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":188360,"byte_end":188375,"line_start":3861,"line_end":3861,"column_start":12,"column_end":27},"name":"from_code_point","qualname":"<JsString>::from_code_point","value":"pub fn from_code_point(&[u32]) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `String.fromCodePoint()` method returns a string created by\n using the specified sequence of code points.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4826},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":188672,"byte_end":188688,"line_start":3865,"line_end":3865,"column_start":12,"column_end":28},"name":"from_code_point1","qualname":"<JsString>::from_code_point1","value":"pub fn from_code_point1(u32) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4829},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":188972,"byte_end":188988,"line_start":3869,"line_end":3869,"column_start":12,"column_end":28},"name":"from_code_point2","qualname":"<JsString>::from_code_point2","value":"pub fn from_code_point2(u32, u32) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4832},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":189280,"byte_end":189296,"line_start":3873,"line_end":3873,"column_start":12,"column_end":28},"name":"from_code_point3","qualname":"<JsString>::from_code_point3","value":"pub fn from_code_point3(u32, u32, u32) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4835},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":189596,"byte_end":189612,"line_start":3877,"line_end":3877,"column_start":12,"column_end":28},"name":"from_code_point4","qualname":"<JsString>::from_code_point4","value":"pub fn from_code_point4(u32, u32, u32, u32) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4838},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":189920,"byte_end":189936,"line_start":3881,"line_end":3881,"column_start":12,"column_end":28},"name":"from_code_point5","qualname":"<JsString>::from_code_point5","value":"pub fn from_code_point5(u32, u32, u32, u32, u32) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4841},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":190348,"byte_end":190356,"line_start":3888,"line_end":3888,"column_start":12,"column_end":20},"name":"includes","qualname":"<JsString>::includes","value":"pub fn includes(&Self, &str, i32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `includes()` method determines whether one string may be found\n within another string, returning true or false as appropriate.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4844},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":190851,"byte_end":190859,"line_start":3896,"line_end":3896,"column_start":12,"column_end":20},"name":"index_of","qualname":"<JsString>::index_of","value":"pub fn index_of(&Self, &str, i32) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The `indexOf()` method returns the index within the calling String\n object of the first occurrence of the specified value, starting the\n search at fromIndex.  Returns -1 if the value is not found.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4847},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":191367,"byte_end":191380,"line_start":3904,"line_end":3904,"column_start":12,"column_end":25},"name":"last_index_of","qualname":"<JsString>::last_index_of","value":"pub fn last_index_of(&Self, &str, i32) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The `lastIndexOf()` method returns the index within the calling String\n object of the last occurrence of the specified value, searching\n backwards from fromIndex.  Returns -1 if the value is not found.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4850},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":191848,"byte_end":191862,"line_start":3912,"line_end":3912,"column_start":12,"column_end":26},"name":"locale_compare","qualname":"<JsString>::locale_compare","value":"pub fn locale_compare(&Self, &str, &Array, &Object) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The `localeCompare()` method returns a number indicating whether\n a reference string comes before or after or is the same as\n the given string in sort order.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4853},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":192297,"byte_end":192303,"line_start":3923,"line_end":3923,"column_start":12,"column_end":18},"name":"match_","qualname":"<JsString>::match_","value":"pub fn match_(&Self, &RegExp) -> Option<Object>","parent":null,"children":[],"decl_id":null,"docs":" The `match()` method retrieves the matches when matching a string against a regular expression.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4856},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":192718,"byte_end":192727,"line_start":3930,"line_end":3930,"column_start":12,"column_end":21},"name":"normalize","qualname":"<JsString>::normalize","value":"pub fn normalize(&Self, &str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `normalize()` method returns the Unicode Normalization Form\n of a given string (if the value isn't a string, it will be converted to one first).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4859},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":193221,"byte_end":193228,"line_start":3939,"line_end":3939,"column_start":12,"column_end":19},"name":"pad_end","qualname":"<JsString>::pad_end","value":"pub fn pad_end(&Self, u32, &str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `padEnd()` method pads the current string with a given string\n (repeated, if needed) so that the resulting string reaches a given\n length. The padding is applied from the end (right) of the current\n string.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4862},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":193757,"byte_end":193766,"line_start":3948,"line_end":3948,"column_start":12,"column_end":21},"name":"pad_start","qualname":"<JsString>::pad_start","value":"pub fn pad_start(&Self, u32, &str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `padStart()` method pads the current string with another string\n (repeated, if needed) so that the resulting string reaches the given\n length. The padding is applied from the start (left) of the current\n string.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4865},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":194209,"byte_end":194215,"line_start":3955,"line_end":3955,"column_start":12,"column_end":18},"name":"repeat","qualname":"<JsString>::repeat","value":"pub fn repeat(&Self, i32) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `repeat()` method constructs and returns a new string which contains the specified\n number of copies of the string on which it was called, concatenated together.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4868},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":194770,"byte_end":194777,"line_start":3965,"line_end":3965,"column_start":12,"column_end":19},"name":"replace","qualname":"<JsString>::replace","value":"pub fn replace(&Self, &str, &str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `replace()` method returns a new string with some or all matches of a pattern\n replaced by a replacement. The pattern can be a string or a RegExp, and\n the replacement can be a string or a function to be called for each match.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4871},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":195047,"byte_end":195068,"line_start":3969,"line_end":3969,"column_start":12,"column_end":33},"name":"replace_with_function","qualname":"<JsString>::replace_with_function","value":"pub fn replace_with_function(&Self, &str, &Function) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4874},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":195249,"byte_end":195267,"line_start":3976,"line_end":3976,"column_start":12,"column_end":30},"name":"replace_by_pattern","qualname":"<JsString>::replace_by_pattern","value":"pub fn replace_by_pattern(&Self, &RegExp, &str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4877},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":195540,"byte_end":195572,"line_start":3980,"line_end":3980,"column_start":12,"column_end":44},"name":"replace_by_pattern_with_function","qualname":"<JsString>::replace_by_pattern_with_function","value":"pub fn replace_by_pattern_with_function(&Self, &RegExp, &Function) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4880},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":195990,"byte_end":195996,"line_start":3991,"line_end":3991,"column_start":12,"column_end":18},"name":"search","qualname":"<JsString>::search","value":"pub fn search(&Self, &RegExp) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The `search()` method executes a search for a match between\n a regular expression and this String object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4883},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":196371,"byte_end":196376,"line_start":3998,"line_end":3998,"column_start":12,"column_end":17},"name":"slice","qualname":"<JsString>::slice","value":"pub fn slice(&Self, u32, u32) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `slice()` method extracts a section of a string and returns it as a\n new string, without modifying the original string.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4886},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":196822,"byte_end":196827,"line_start":4005,"line_end":4005,"column_start":12,"column_end":17},"name":"split","qualname":"<JsString>::split","value":"pub fn split(&Self, &str) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `split()` method splits a String object into an array of strings by separating the string\n into substrings, using a specified separator string to determine where to make each split.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4889},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":197073,"byte_end":197084,"line_start":4009,"line_end":4009,"column_start":12,"column_end":23},"name":"split_limit","qualname":"<JsString>::split_limit","value":"pub fn split_limit(&Self, &str, u32) -> Array","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4892},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":197342,"byte_end":197358,"line_start":4013,"line_end":4013,"column_start":12,"column_end":28},"name":"split_by_pattern","qualname":"<JsString>::split_by_pattern","value":"pub fn split_by_pattern(&Self, &RegExp) -> Array","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4895},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":197605,"byte_end":197627,"line_start":4017,"line_end":4017,"column_start":12,"column_end":34},"name":"split_by_pattern_limit","qualname":"<JsString>::split_by_pattern_limit","value":"pub fn split_by_pattern_limit(&Self, &RegExp, u32) -> Array","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4898},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":198072,"byte_end":198083,"line_start":4025,"line_end":4025,"column_start":12,"column_end":23},"name":"starts_with","qualname":"<JsString>::starts_with","value":"pub fn starts_with(&Self, &str, u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `startsWith()` method determines whether a string begins with the\n characters of a specified string, returning true or false as\n appropriate.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4901},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":198478,"byte_end":198487,"line_start":4032,"line_end":4032,"column_start":12,"column_end":21},"name":"substring","qualname":"<JsString>::substring","value":"pub fn substring(&Self, u32, u32) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `substring()` method returns the part of the string between the\n start and end indexes, or to the end of the string.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4904},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":198873,"byte_end":198879,"line_start":4039,"line_end":4039,"column_start":12,"column_end":18},"name":"substr","qualname":"<JsString>::substr","value":"pub fn substr(&Self, i32, i32) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `substr()` method returns the part of a string between\n the start index and a number of characters after it.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4907},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":199323,"byte_end":199343,"line_start":4046,"line_end":4046,"column_start":12,"column_end":32},"name":"to_locale_lower_case","qualname":"<JsString>::to_locale_lower_case","value":"pub fn to_locale_lower_case(&Self, Option<&str>) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toLocaleLowerCase()` method returns the calling string value converted to lower case,\n according to any locale-specific case mappings.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4910},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":199781,"byte_end":199801,"line_start":4053,"line_end":4053,"column_start":12,"column_end":32},"name":"to_locale_upper_case","qualname":"<JsString>::to_locale_upper_case","value":"pub fn to_locale_upper_case(&Self, Option<&str>) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toLocaleUpperCase()` method returns the calling string value converted to upper case,\n according to any locale-specific case mappings.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4913},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":200176,"byte_end":200189,"line_start":4060,"line_end":4060,"column_start":12,"column_end":25},"name":"to_lower_case","qualname":"<JsString>::to_lower_case","value":"pub fn to_lower_case(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toLowerCase()` method returns the calling string value\n converted to lower case.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4916},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":200527,"byte_end":200536,"line_start":4067,"line_end":4067,"column_start":12,"column_end":21},"name":"to_string","qualname":"<JsString>::to_string","value":"pub fn to_string(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toString()` method returns a string representing the specified\n object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4919},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":200946,"byte_end":200959,"line_start":4074,"line_end":4074,"column_start":12,"column_end":25},"name":"to_upper_case","qualname":"<JsString>::to_upper_case","value":"pub fn to_upper_case(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toUpperCase()` method returns the calling string value converted to\n uppercase (the value will be converted to a string if it isn't one).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4922},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":201430,"byte_end":201434,"line_start":4083,"line_end":4083,"column_start":12,"column_end":16},"name":"trim","qualname":"<JsString>::trim","value":"pub fn trim(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `trim()` method removes whitespace from both ends of a string.\n Whitespace in this context is all the whitespace characters (space, tab,\n no-break space, etc.) and all the line terminator characters (LF, CR,\n etc.).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4925},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":201804,"byte_end":201812,"line_start":4090,"line_end":4090,"column_start":12,"column_end":20},"name":"trim_end","qualname":"<JsString>::trim_end","value":"pub fn trim_end(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `trimEnd()` method removes whitespace from the end of a string.\n `trimRight()` is an alias of this method.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4928},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":202184,"byte_end":202194,"line_start":4097,"line_end":4097,"column_start":12,"column_end":22},"name":"trim_right","qualname":"<JsString>::trim_right","value":"pub fn trim_right(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `trimEnd()` method removes whitespace from the end of a string.\n `trimRight()` is an alias of this method.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4931},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":202575,"byte_end":202585,"line_start":4104,"line_end":4104,"column_start":12,"column_end":22},"name":"trim_start","qualname":"<JsString>::trim_start","value":"pub fn trim_start(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `trimStart()` method removes whitespace from the beginning of a\n string. `trimLeft()` is an alias of this method.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4934},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":202965,"byte_end":202974,"line_start":4111,"line_end":4111,"column_start":12,"column_end":21},"name":"trim_left","qualname":"<JsString>::trim_left","value":"pub fn trim_left(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `trimStart()` method removes whitespace from the beginning of a\n string. `trimLeft()` is an alias of this method.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4937},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":203299,"byte_end":203307,"line_start":4117,"line_end":4117,"column_start":12,"column_end":20},"name":"value_of","qualname":"<JsString>::value_of","value":"pub fn value_of(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `valueOf()` method returns the primitive value of a `String` object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4940},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":203729,"byte_end":203732,"line_start":4124,"line_end":4124,"column_start":12,"column_end":15},"name":"raw","qualname":"<JsString>::raw","value":"pub fn raw(&Object, &Array) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `raw()` method is a tag function of template literals,\n similar to the `r` prefix in Python or the `@` prefix in C# for string literals.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4943},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":204202,"byte_end":204207,"line_start":4131,"line_end":4131,"column_start":12,"column_end":17},"name":"raw_0","qualname":"<JsString>::raw_0","value":"pub fn raw_0(&Object) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `raw()` method is a tag function of template literals,\n similar to the `r` prefix in Python or the `@` prefix in C# for string literals.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4946},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":204654,"byte_end":204659,"line_start":4138,"line_end":4138,"column_start":12,"column_end":17},"name":"raw_1","qualname":"<JsString>::raw_1","value":"pub fn raw_1(&Object, &str) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `raw()` method is a tag function of template literals,\n similar to the `r` prefix in Python or the `@` prefix in C# for string literals.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4949},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":205129,"byte_end":205134,"line_start":4145,"line_end":4145,"column_start":12,"column_end":17},"name":"raw_2","qualname":"<JsString>::raw_2","value":"pub fn raw_2(&Object, &str, &str) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `raw()` method is a tag function of template literals,\n similar to the `r` prefix in Python or the `@` prefix in C# for string literals.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4952},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":205658,"byte_end":205663,"line_start":4156,"line_end":4156,"column_start":12,"column_end":17},"name":"raw_3","qualname":"<JsString>::raw_3","value":"pub fn raw_3(&Object, &str, &str, &str) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `raw()` method is a tag function of template literals,\n similar to the `r` prefix in Python or the `@` prefix in C# for string literals.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4955},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":206218,"byte_end":206223,"line_start":4168,"line_end":4168,"column_start":12,"column_end":17},"name":"raw_4","qualname":"<JsString>::raw_4","value":"pub fn raw_4(&Object, &str, &str, &str, &str) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `raw()` method is a tag function of template literals,\n similar to the `r` prefix in Python or the `@` prefix in C# for string literals.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4958},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":206809,"byte_end":206814,"line_start":4181,"line_end":4181,"column_start":12,"column_end":17},"name":"raw_5","qualname":"<JsString>::raw_5","value":"pub fn raw_5(&Object, &str, &str, &str, &str, &str)\n-> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `raw()` method is a tag function of template literals,\n similar to the `r` prefix in Python or the `@` prefix in C# for string literals.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4961},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":207431,"byte_end":207436,"line_start":4195,"line_end":4195,"column_start":12,"column_end":17},"name":"raw_6","qualname":"<JsString>::raw_6","value":"pub fn raw_6(&Object, &str, &str, &str, &str, &str, &str)\n-> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `raw()` method is a tag function of template literals,\n similar to the `r` prefix in Python or the `@` prefix in C# for string literals.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4964},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":208084,"byte_end":208089,"line_start":4210,"line_end":4210,"column_start":12,"column_end":17},"name":"raw_7","qualname":"<JsString>::raw_7","value":"pub fn raw_7(&Object, &str, &str, &str, &str, &str, &str, &str)\n-> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `raw()` method is a tag function of template literals,\n similar to the `r` prefix in Python or the `@` prefix in C# for string literals.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":182396,"byte_end":182411,"line_start":3755,"line_end":3755,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":208682,"byte_end":208690,"line_start":4229,"line_end":4229,"column_start":12,"column_end":20},"name":"try_from","qualname":"<JsString>::try_from","value":"pub fn try_from(&JsValue) -> Option<&JsString>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `JsString` value of this JS value if it's an instance of a\n string.","sig":null,"attributes":[{"value":"/ Returns the `JsString` value of this JS value if it's an instance of a","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":208395,"byte_end":208469,"line_start":4223,"line_end":4223,"column_start":5,"column_end":79}},{"value":"/ string.","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":208474,"byte_end":208485,"line_start":4224,"line_end":4224,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":208490,"byte_end":208493,"line_start":4225,"line_end":4225,"column_start":5,"column_end":8}},{"value":"/ If this JS value is not an instance of a string then this returns","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":208498,"byte_end":208567,"line_start":4226,"line_end":4226,"column_start":5,"column_end":74}},{"value":"/ `None`.","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":208572,"byte_end":208583,"line_start":4227,"line_end":4227,"column_start":5,"column_end":16}},{"value":"deprecated(note =\n             \"recommended to use dyn_ref instead which is now equivalent\")","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":208588,"byte_end":208670,"line_start":4228,"line_end":4228,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":209615,"byte_end":209629,"line_start":4249,"line_end":4249,"column_start":12,"column_end":26},"name":"is_valid_utf16","qualname":"<JsString>::is_valid_utf16","value":"pub fn is_valid_utf16(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this string is a valid UTF-16 string.","sig":null,"attributes":[{"value":"/ Returns whether this string is a valid UTF-16 string.","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":208762,"byte_end":208819,"line_start":4233,"line_end":4233,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":208824,"byte_end":208827,"line_start":4234,"line_end":4234,"column_start":5,"column_end":8}},{"value":"/ This is useful for learning whether `String::from(..)` will return a","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":208832,"byte_end":208904,"line_start":4235,"line_end":4235,"column_start":5,"column_end":77}},{"value":"/ lossless representation of the JS string. If this string contains","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":208909,"byte_end":208978,"line_start":4236,"line_end":4236,"column_start":5,"column_end":74}},{"value":"/ unpaired surrogates then `String::from` will succeed but it will be a","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":208983,"byte_end":209056,"line_start":4237,"line_end":4237,"column_start":5,"column_end":78}},{"value":"/ lossy representation of the JS string because unpaired surrogates will","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":209061,"byte_end":209135,"line_start":4238,"line_end":4238,"column_start":5,"column_end":79}},{"value":"/ become replacement characters.","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":209140,"byte_end":209174,"line_start":4239,"line_end":4239,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":209179,"byte_end":209182,"line_start":4240,"line_end":4240,"column_start":5,"column_end":8}},{"value":"/ If this function returns `false` then to get a lossless representation","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":209187,"byte_end":209261,"line_start":4241,"line_end":4241,"column_start":5,"column_end":79}},{"value":"/ of the string you'll need to manually use the `iter` method (or the","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":209266,"byte_end":209337,"line_start":4242,"line_end":4242,"column_start":5,"column_end":76}},{"value":"/ `char_code_at` accessor) to view the raw character codes.","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":209342,"byte_end":209403,"line_start":4243,"line_end":4243,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":209408,"byte_end":209411,"line_start":4244,"line_end":4244,"column_start":5,"column_end":8}},{"value":"/ For more information, see the documentation on [JS strings vs Rust","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":209416,"byte_end":209486,"line_start":4245,"line_end":4245,"column_start":5,"column_end":75}},{"value":"/ strings][docs]","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":209491,"byte_end":209509,"line_start":4246,"line_end":4246,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":209514,"byte_end":209517,"line_start":4247,"line_end":4247,"column_start":5,"column_end":8}},{"value":"/ [docs]: https://rustwasm.github.io/docs/wasm-bindgen/reference/types/str.html","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":209522,"byte_end":209603,"line_start":4248,"line_end":4248,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":209967,"byte_end":209971,"line_start":4258,"line_end":4258,"column_start":12,"column_end":16},"name":"iter","qualname":"<JsString>::iter","value":"pub fn iter<'a>(&'a Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the `u16` character codes that make up this JS\n string.","sig":null,"attributes":[{"value":"/ Returns an iterator over the `u16` character codes that make up this JS","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":209722,"byte_end":209797,"line_start":4253,"line_end":4253,"column_start":5,"column_end":80}},{"value":"/ string.","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":209802,"byte_end":209813,"line_start":4254,"line_end":4254,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":209818,"byte_end":209821,"line_start":4255,"line_end":4255,"column_start":5,"column_end":8}},{"value":"/ This method will call `char_code_at` for each code in this JS string,","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":209826,"byte_end":209899,"line_start":4256,"line_end":4256,"column_start":5,"column_end":78}},{"value":"/ returning an iterator of the codes in sequence.","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":209904,"byte_end":209955,"line_start":4257,"line_end":4257,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":210740,"byte_end":210747,"line_start":4274,"line_end":4274,"column_start":12,"column_end":19},"name":"as_char","qualname":"<JsString>::as_char","value":"pub fn as_char(&Self) -> Option<char>","parent":null,"children":[],"decl_id":null,"docs":" If this string consists of a single Unicode code point, then this method\n converts it into a Rust `char` without doing any allocations.","sig":null,"attributes":[{"value":"/ If this string consists of a single Unicode code point, then this method","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":210160,"byte_end":210236,"line_start":4264,"line_end":4264,"column_start":5,"column_end":81}},{"value":"/ converts it into a Rust `char` without doing any allocations.","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":210241,"byte_end":210306,"line_start":4265,"line_end":4265,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":210311,"byte_end":210314,"line_start":4266,"line_end":4266,"column_start":5,"column_end":8}},{"value":"/ If this JS value is not a valid UTF-8 or consists of more than a single","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":210319,"byte_end":210394,"line_start":4267,"line_end":4267,"column_start":5,"column_end":80}},{"value":"/ codepoint, then this returns `None`.","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":210399,"byte_end":210439,"line_start":4268,"line_end":4268,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":210444,"byte_end":210447,"line_start":4269,"line_end":4269,"column_start":5,"column_end":8}},{"value":"/ Note that a single Unicode code point might be represented as more than","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":210452,"byte_end":210527,"line_start":4270,"line_end":4270,"column_start":5,"column_end":80}},{"value":"/ one code unit on the JavaScript side. For example, a JavaScript string","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":210532,"byte_end":210606,"line_start":4271,"line_end":4271,"column_start":5,"column_end":79}},{"value":"/ `\"\\uD801\\uDC37\"` is actually a single Unicode code point U+10437 which","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":210611,"byte_end":210685,"line_start":4272,"line_end":4272,"column_start":5,"column_end":79}},{"value":"/ corresponds to a character '𐐷'.","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":210690,"byte_end":210728,"line_start":4273,"line_end":4273,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":5101},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":212871,"byte_end":212877,"line_start":4368,"line_end":4368,"column_start":14,"column_end":20},"name":"Symbol","qualname":"::Symbol","value":"Symbol {  }","parent":null,"children":[{"krate":0,"index":5102}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":212720,"byte_end":212735,"line_start":4364,"line_end":4364,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":212720,"byte_end":212735,"line_start":4364,"line_end":4364,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":212720,"byte_end":212735,"line_start":4364,"line_end":4364,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5054},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":213339,"byte_end":213351,"line_start":4376,"line_end":4376,"column_start":12,"column_end":24},"name":"has_instance","qualname":"<Symbol>::has_instance","value":"pub fn has_instance() -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.hasInstance` well-known symbol is used to determine\n if a constructor object recognizes an object as its instance.\n The `instanceof` operator's behavior can be customized by this symbol.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":212720,"byte_end":212735,"line_start":4364,"line_end":4364,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":212720,"byte_end":212735,"line_start":4364,"line_end":4364,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5057},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":213818,"byte_end":213838,"line_start":4384,"line_end":4384,"column_start":12,"column_end":32},"name":"is_concat_spreadable","qualname":"<Symbol>::is_concat_spreadable","value":"pub fn is_concat_spreadable() -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.isConcatSpreadable` well-known symbol is used to configure\n if an object should be flattened to its array elements when using the\n `Array.prototype.concat()` method.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":212720,"byte_end":212735,"line_start":4364,"line_end":4364,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":212720,"byte_end":212735,"line_start":4364,"line_end":4364,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5060},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":214313,"byte_end":214327,"line_start":4391,"line_end":4391,"column_start":12,"column_end":26},"name":"async_iterator","qualname":"<Symbol>::async_iterator","value":"pub fn async_iterator() -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.asyncIterator` well-known symbol specifies the default AsyncIterator for an object.\n If this property is set on an object, it is an async iterable and can be used in a `for await...of` loop.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":212720,"byte_end":212735,"line_start":4364,"line_end":4364,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":212720,"byte_end":212735,"line_start":4364,"line_end":4364,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5063},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":214677,"byte_end":214685,"line_start":4398,"line_end":4398,"column_start":12,"column_end":20},"name":"iterator","qualname":"<Symbol>::iterator","value":"pub fn iterator() -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.iterator` well-known symbol specifies the default iterator\n for an object.  Used by `for...of`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":212720,"byte_end":212735,"line_start":4364,"line_end":4364,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":212720,"byte_end":212735,"line_start":4364,"line_end":4364,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5066},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":215118,"byte_end":215124,"line_start":4406,"line_end":4406,"column_start":12,"column_end":18},"name":"match_","qualname":"<Symbol>::match_","value":"pub fn match_() -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.match` well-known symbol specifies the matching of a regular\n expression against a string. This function is called by the\n `String.prototype.match()` method.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":212720,"byte_end":212735,"line_start":4364,"line_end":4364,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":212720,"byte_end":212735,"line_start":4364,"line_end":4364,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5069},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":215665,"byte_end":215672,"line_start":4417,"line_end":4417,"column_start":12,"column_end":19},"name":"replace","qualname":"<Symbol>::replace","value":"pub fn replace() -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.replace` well-known symbol specifies the method that\n replaces matched substrings of a string.  This function is called by the\n `String.prototype.replace()` method.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":212720,"byte_end":212735,"line_start":4364,"line_end":4364,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":212720,"byte_end":212735,"line_start":4364,"line_end":4364,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5072},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":216238,"byte_end":216244,"line_start":4428,"line_end":4428,"column_start":12,"column_end":18},"name":"search","qualname":"<Symbol>::search","value":"pub fn search() -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.search` well-known symbol specifies the method that returns\n the index within a string that matches the regular expression.  This\n function is called by the `String.prototype.search()` method.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":212720,"byte_end":212735,"line_start":4364,"line_end":4364,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":212720,"byte_end":212735,"line_start":4364,"line_end":4364,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5075},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":216624,"byte_end":216631,"line_start":4435,"line_end":4435,"column_start":12,"column_end":19},"name":"species","qualname":"<Symbol>::species","value":"pub fn species() -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The well-known symbol `Symbol.species` specifies a function-valued\n property that the constructor function uses to create derived objects.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":212720,"byte_end":212735,"line_start":4364,"line_end":4364,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":212720,"byte_end":212735,"line_start":4364,"line_end":4364,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5078},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":217177,"byte_end":217182,"line_start":4445,"line_end":4445,"column_start":12,"column_end":17},"name":"split","qualname":"<Symbol>::split","value":"pub fn split() -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.split` well-known symbol specifies the method that splits a\n string at the indices that match a regular expression.  This function is\n called by the `String.prototype.split()` method.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":212720,"byte_end":212735,"line_start":4364,"line_end":4364,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":212720,"byte_end":212735,"line_start":4364,"line_end":4364,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5081},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":217610,"byte_end":217622,"line_start":4453,"line_end":4453,"column_start":12,"column_end":24},"name":"to_primitive","qualname":"<Symbol>::to_primitive","value":"pub fn to_primitive() -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.toPrimitive` is a symbol that specifies a function valued\n property that is called to convert an object to a corresponding\n primitive value.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":212720,"byte_end":212735,"line_start":4364,"line_end":4364,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":212720,"byte_end":212735,"line_start":4364,"line_end":4364,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5084},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":218124,"byte_end":218137,"line_start":4462,"line_end":4462,"column_start":12,"column_end":25},"name":"to_string_tag","qualname":"<Symbol>::to_string_tag","value":"pub fn to_string_tag() -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.toStringTag` well-known symbol is a string valued property\n that is used in the creation of the default string description of an\n object.  It is accessed internally by the `Object.prototype.toString()`\n method.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":212720,"byte_end":212735,"line_start":4364,"line_end":4364,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":212720,"byte_end":212735,"line_start":4364,"line_end":4364,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5087},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":218596,"byte_end":218600,"line_start":4470,"line_end":4470,"column_start":12,"column_end":16},"name":"for_","qualname":"<Symbol>::for_","value":"pub fn for_(&str) -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.for(key)` method searches for existing symbols in a runtime-wide symbol registry with\n the given key and returns it if found.\n Otherwise a new symbol gets created in the global symbol registry with this key.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":212720,"byte_end":212735,"line_start":4364,"line_end":4364,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":212720,"byte_end":212735,"line_start":4364,"line_end":4364,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5090},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":218956,"byte_end":218963,"line_start":4476,"line_end":4476,"column_start":12,"column_end":19},"name":"key_for","qualname":"<Symbol>::key_for","value":"pub fn key_for(&Symbol) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.keyFor(sym)` method retrieves a shared symbol key from the global symbol registry for the given symbol.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":212720,"byte_end":212735,"line_start":4364,"line_end":4364,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":212720,"byte_end":212735,"line_start":4364,"line_end":4364,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5093},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":219275,"byte_end":219284,"line_start":4482,"line_end":4482,"column_start":12,"column_end":21},"name":"to_string","qualname":"<Symbol>::to_string","value":"pub fn to_string(&Self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toString()` method returns a string representing the specified Symbol object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":212720,"byte_end":212735,"line_start":4364,"line_end":4364,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":212720,"byte_end":212735,"line_start":4364,"line_end":4364,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5096},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":219747,"byte_end":219758,"line_start":4490,"line_end":4490,"column_start":12,"column_end":23},"name":"unscopables","qualname":"<Symbol>::unscopables","value":"pub fn unscopables() -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.unscopables` well-known symbol is used to specify an object\n value of whose own and inherited property names are excluded from the\n with environment bindings of the associated object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":212720,"byte_end":212735,"line_start":4364,"line_end":4364,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":212720,"byte_end":212735,"line_start":4364,"line_end":4364,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5099},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":220043,"byte_end":220051,"line_start":4496,"line_end":4496,"column_start":12,"column_end":20},"name":"value_of","qualname":"<Symbol>::value_of","value":"pub fn value_of(&Self) -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `valueOf()` method returns the primitive value of a Symbol object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":212720,"byte_end":212735,"line_start":4364,"line_end":4364,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":212720,"byte_end":212735,"line_start":4364,"line_end":4364,"column_start":1,"column_end":16}}]},{"kind":"Mod","id":{"krate":0,"index":165},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":220114,"byte_end":220118,"line_start":4500,"line_end":4500,"column_start":9,"column_end":13},"name":"Intl","qualname":"::Intl","value":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":5107},{"krate":0,"index":5206},{"krate":0,"index":5208},{"krate":0,"index":5210},{"krate":0,"index":5109},{"krate":0,"index":5184},{"krate":0,"index":5189},{"krate":0,"index":5194},{"krate":0,"index":5197},{"krate":0,"index":5200},{"krate":0,"index":5203},{"krate":0,"index":167},{"krate":0,"index":5312},{"krate":0,"index":5314},{"krate":0,"index":5316},{"krate":0,"index":5212},{"krate":0,"index":5287},{"krate":0,"index":5292},{"krate":0,"index":5297},{"krate":0,"index":5300},{"krate":0,"index":5303},{"krate":0,"index":5306},{"krate":0,"index":5309},{"krate":0,"index":169},{"krate":0,"index":5418},{"krate":0,"index":5420},{"krate":0,"index":5422},{"krate":0,"index":5318},{"krate":0,"index":5393},{"krate":0,"index":5398},{"krate":0,"index":5403},{"krate":0,"index":5406},{"krate":0,"index":5409},{"krate":0,"index":5412},{"krate":0,"index":5415},{"krate":0,"index":171},{"krate":0,"index":5521},{"krate":0,"index":5523},{"krate":0,"index":5525},{"krate":0,"index":5424},{"krate":0,"index":5499},{"krate":0,"index":5504},{"krate":0,"index":5509},{"krate":0,"index":5512},{"krate":0,"index":5515},{"krate":0,"index":5518},{"krate":0,"index":173}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":220081,"byte_end":220105,"line_start":4499,"line_end":4499,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":5107},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":220658,"byte_end":220679,"line_start":4512,"line_end":4512,"column_start":16,"column_end":37},"name":"get_canonical_locales","qualname":"::Intl::get_canonical_locales","value":"pub fn get_canonical_locales(&JsValue) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `Intl.getCanonicalLocales()` method returns an array containing\n the canonical locale names. Duplicates will be omitted and elements\n will be validated as structurally valid language tags.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":220156,"byte_end":220171,"line_start":4504,"line_end":4504,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":220156,"byte_end":220171,"line_start":4504,"line_end":4504,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5206},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":221191,"byte_end":221199,"line_start":4524,"line_end":4524,"column_start":18,"column_end":26},"name":"Collator","qualname":"::Intl::Collator","value":"Collator {  }","parent":null,"children":[{"krate":0,"index":5207}],"decl_id":null,"docs":" The `Intl.Collator` object is a constructor for collators, objects\n that enable language sensitive string comparison.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":220735,"byte_end":220750,"line_start":4516,"line_end":4516,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":220735,"byte_end":220750,"line_start":4516,"line_end":4516,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":220735,"byte_end":220750,"line_start":4516,"line_end":4516,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5195},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":221551,"byte_end":221554,"line_start":4531,"line_end":4531,"column_start":16,"column_end":19},"name":"new","qualname":"<Collator>::new","value":"pub fn new(&Array, &Object) -> Collator","parent":null,"children":[],"decl_id":null,"docs":" The `Intl.Collator` object is a constructor for collators, objects\n that enable language sensitive string comparison.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":220735,"byte_end":220750,"line_start":4516,"line_end":4516,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":220735,"byte_end":220750,"line_start":4516,"line_end":4516,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5198},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":222009,"byte_end":222016,"line_start":4539,"line_end":4539,"column_start":16,"column_end":23},"name":"compare","qualname":"<Collator>::compare","value":"pub fn compare(&Self) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The Intl.Collator.prototype.compare property returns a function that\n compares two strings according to the sort order of this Collator\n object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":220735,"byte_end":220750,"line_start":4516,"line_end":4516,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":220735,"byte_end":220750,"line_start":4516,"line_end":4516,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5201},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":222522,"byte_end":222538,"line_start":4547,"line_end":4547,"column_start":16,"column_end":32},"name":"resolved_options","qualname":"<Collator>::resolved_options","value":"pub fn resolved_options(&Self) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `Intl.Collator.prototype.resolvedOptions()` method returns a new\n object with properties reflecting the locale and collation options\n computed during initialization of this Collator object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":220735,"byte_end":220750,"line_start":4516,"line_end":4516,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":220735,"byte_end":220750,"line_start":4516,"line_end":4516,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5204},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":223088,"byte_end":223108,"line_start":4556,"line_end":4556,"column_start":16,"column_end":36},"name":"supported_locales_of","qualname":"<Collator>::supported_locales_of","value":"pub fn supported_locales_of(&Array, &Object) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `Intl.Collator.supportedLocalesOf()` method returns an array\n containing those of the provided locales that are supported in\n collation without having to fall back to the runtime's default\n locale.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":220735,"byte_end":220750,"line_start":4516,"line_end":4516,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":220735,"byte_end":220750,"line_start":4516,"line_end":4516,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5312},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":223887,"byte_end":223901,"line_start":4577,"line_end":4577,"column_start":18,"column_end":32},"name":"DateTimeFormat","qualname":"::Intl::DateTimeFormat","value":"DateTimeFormat {  }","parent":null,"children":[{"krate":0,"index":5313}],"decl_id":null,"docs":" The `Intl.DateTimeFormat` object is a constructor for objects\n that enable language-sensitive date and time formatting.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":223417,"byte_end":223432,"line_start":4569,"line_end":4569,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":223417,"byte_end":223432,"line_start":4569,"line_end":4569,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":223417,"byte_end":223432,"line_start":4569,"line_end":4569,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5298},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":224261,"byte_end":224264,"line_start":4584,"line_end":4584,"column_start":16,"column_end":19},"name":"new","qualname":"<DateTimeFormat>::new","value":"pub fn new(&Array, &Object) -> DateTimeFormat","parent":null,"children":[],"decl_id":null,"docs":" The `Intl.DateTimeFormat` object is a constructor for objects\n that enable language-sensitive date and time formatting.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":223417,"byte_end":223432,"line_start":4569,"line_end":4569,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":223417,"byte_end":223432,"line_start":4569,"line_end":4569,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5301},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":224772,"byte_end":224778,"line_start":4592,"line_end":4592,"column_start":16,"column_end":22},"name":"format","qualname":"<DateTimeFormat>::format","value":"pub fn format(&Self) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The Intl.DateTimeFormat.prototype.format property returns a getter function that\n formats a date according to the locale and formatting options of this\n Intl.DateTimeFormat object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":223417,"byte_end":223432,"line_start":4569,"line_end":4569,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":223417,"byte_end":223432,"line_start":4569,"line_end":4569,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5304},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":225241,"byte_end":225256,"line_start":4599,"line_end":4599,"column_start":16,"column_end":31},"name":"format_to_parts","qualname":"<DateTimeFormat>::format_to_parts","value":"pub fn format_to_parts(&Self, &Date) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `Intl.DateTimeFormat.prototype.formatToParts()` method allows locale-aware\n formatting of strings produced by DateTimeFormat formatters.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":223417,"byte_end":223432,"line_start":4569,"line_end":4569,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":223417,"byte_end":223432,"line_start":4569,"line_end":4569,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5307},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":225811,"byte_end":225827,"line_start":4607,"line_end":4607,"column_start":16,"column_end":32},"name":"resolved_options","qualname":"<DateTimeFormat>::resolved_options","value":"pub fn resolved_options(&Self) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `Intl.DateTimeFormat.prototype.resolvedOptions()` method returns a new\n object with properties reflecting the locale and date and time formatting\n options computed during initialization of this DateTimeFormat object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":223417,"byte_end":223432,"line_start":4569,"line_end":4569,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":223417,"byte_end":223432,"line_start":4569,"line_end":4569,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5310},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":226416,"byte_end":226436,"line_start":4616,"line_end":4616,"column_start":16,"column_end":36},"name":"supported_locales_of","qualname":"<DateTimeFormat>::supported_locales_of","value":"pub fn supported_locales_of(&Array, &Object) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `Intl.DateTimeFormat.supportedLocalesOf()` method returns an array\n containing those of the provided locales that are supported in date\n and time formatting without having to fall back to the runtime's default\n locale.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":223417,"byte_end":223432,"line_start":4569,"line_end":4569,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":223417,"byte_end":223432,"line_start":4569,"line_end":4569,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5418},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":227206,"byte_end":227218,"line_start":4637,"line_end":4637,"column_start":18,"column_end":30},"name":"NumberFormat","qualname":"::Intl::NumberFormat","value":"NumberFormat {  }","parent":null,"children":[{"krate":0,"index":5419}],"decl_id":null,"docs":" The `Intl.NumberFormat` object is a constructor for objects\n that enable language sensitive number formatting.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":226749,"byte_end":226764,"line_start":4629,"line_end":4629,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":226749,"byte_end":226764,"line_start":4629,"line_end":4629,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":226749,"byte_end":226764,"line_start":4629,"line_end":4629,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5404},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":227567,"byte_end":227570,"line_start":4644,"line_end":4644,"column_start":16,"column_end":19},"name":"new","qualname":"<NumberFormat>::new","value":"pub fn new(&Array, &Object) -> NumberFormat","parent":null,"children":[],"decl_id":null,"docs":" The `Intl.NumberFormat` object is a constructor for objects\n that enable language sensitive number formatting.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":226749,"byte_end":226764,"line_start":4629,"line_end":4629,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":226749,"byte_end":226764,"line_start":4629,"line_end":4629,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5407},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":228065,"byte_end":228071,"line_start":4652,"line_end":4652,"column_start":16,"column_end":22},"name":"format","qualname":"<NumberFormat>::format","value":"pub fn format(&Self) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The Intl.NumberFormat.prototype.format property returns a getter function that\n formats a number according to the locale and formatting options of this\n NumberFormat object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":226749,"byte_end":226764,"line_start":4629,"line_end":4629,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":226749,"byte_end":226764,"line_start":4629,"line_end":4629,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5410},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":228528,"byte_end":228543,"line_start":4659,"line_end":4659,"column_start":16,"column_end":31},"name":"format_to_parts","qualname":"<NumberFormat>::format_to_parts","value":"pub fn format_to_parts(&Self, f64) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `Intl.Numberformat.prototype.formatToParts()` method allows locale-aware\n formatting of strings produced by NumberTimeFormat formatters.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":226749,"byte_end":226764,"line_start":4629,"line_end":4629,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":226749,"byte_end":226764,"line_start":4629,"line_end":4629,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5413},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":229083,"byte_end":229099,"line_start":4667,"line_end":4667,"column_start":16,"column_end":32},"name":"resolved_options","qualname":"<NumberFormat>::resolved_options","value":"pub fn resolved_options(&Self) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `Intl.NumberFormat.prototype.resolvedOptions()` method returns a new\n object with properties reflecting the locale and number formatting\n options computed during initialization of this NumberFormat object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":226749,"byte_end":226764,"line_start":4629,"line_end":4629,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":226749,"byte_end":226764,"line_start":4629,"line_end":4629,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5416},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":229661,"byte_end":229681,"line_start":4675,"line_end":4675,"column_start":16,"column_end":36},"name":"supported_locales_of","qualname":"<NumberFormat>::supported_locales_of","value":"pub fn supported_locales_of(&Array, &Object) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `Intl.NumberFormat.supportedLocalesOf()` method returns an array\n containing those of the provided locales that are supported in number\n formatting without having to fall back to the runtime's default locale.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":226749,"byte_end":226764,"line_start":4629,"line_end":4629,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":226749,"byte_end":226764,"line_start":4629,"line_end":4629,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5521},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":230462,"byte_end":230473,"line_start":4696,"line_end":4696,"column_start":18,"column_end":29},"name":"PluralRules","qualname":"::Intl::PluralRules","value":"PluralRules {  }","parent":null,"children":[{"krate":0,"index":5522}],"decl_id":null,"docs":" The `Intl.PluralRules` object is a constructor for objects\n that enable plural sensitive formatting and plural language rules.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":229991,"byte_end":230006,"line_start":4688,"line_end":4688,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":229991,"byte_end":230006,"line_start":4688,"line_end":4688,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":229991,"byte_end":230006,"line_start":4688,"line_end":4688,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5510},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":230837,"byte_end":230840,"line_start":4703,"line_end":4703,"column_start":16,"column_end":19},"name":"new","qualname":"<PluralRules>::new","value":"pub fn new(&Array, &Object) -> PluralRules","parent":null,"children":[],"decl_id":null,"docs":" The `Intl.PluralRules` object is a constructor for objects\n that enable plural sensitive formatting and plural language rules.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":229991,"byte_end":230006,"line_start":4688,"line_end":4688,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":229991,"byte_end":230006,"line_start":4688,"line_end":4688,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5513},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":231384,"byte_end":231400,"line_start":4711,"line_end":4711,"column_start":16,"column_end":32},"name":"resolved_options","qualname":"<PluralRules>::resolved_options","value":"pub fn resolved_options(&Self) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `Intl.PluralRules.prototype.resolvedOptions()` method returns a new\n object with properties reflecting the locale and plural formatting\n options computed during initialization of this PluralRules object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":229991,"byte_end":230006,"line_start":4688,"line_end":4688,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":229991,"byte_end":230006,"line_start":4688,"line_end":4688,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5516},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":231801,"byte_end":231807,"line_start":4718,"line_end":4718,"column_start":16,"column_end":22},"name":"select","qualname":"<PluralRules>::select","value":"pub fn select(&Self, f64) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `Intl.PluralRules.prototype.select()` method returns a String indicating\n which plural rule to use for locale-aware formatting.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":229991,"byte_end":230006,"line_start":4688,"line_end":4688,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":229991,"byte_end":230006,"line_start":4688,"line_end":4688,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5519},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":232380,"byte_end":232400,"line_start":4726,"line_end":4726,"column_start":16,"column_end":36},"name":"supported_locales_of","qualname":"<PluralRules>::supported_locales_of","value":"pub fn supported_locales_of(&Array, &Object) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `Intl.PluralRules.supportedLocalesOf()` method returns an array\n containing those of the provided locales that are supported in plural\n formatting without having to fall back to the runtime's default locale.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":229991,"byte_end":230006,"line_start":4688,"line_end":4688,"column_start":5,"column_end":20}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":229991,"byte_end":230006,"line_start":4688,"line_end":4688,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5639},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":233118,"byte_end":233125,"line_start":4749,"line_end":4749,"column_start":14,"column_end":21},"name":"Promise","qualname":"::Promise","value":"Promise {  }","parent":null,"children":[{"krate":0,"index":5640}],"decl_id":null,"docs":" The `Promise` object represents the eventual completion (or failure) of\n an asynchronous operation, and its resulting value.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":232694,"byte_end":232709,"line_start":4740,"line_end":4740,"column_start":1,"column_end":16}},{"value":"must_use","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":232993,"byte_end":233004,"line_start":4746,"line_end":4746,"column_start":5,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":232694,"byte_end":232709,"line_start":4740,"line_end":4740,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":232694,"byte_end":232709,"line_start":4740,"line_end":4740,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5613},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":234155,"byte_end":234158,"line_start":4768,"line_end":4768,"column_start":12,"column_end":15},"name":"new","qualname":"<Promise>::new","value":"pub fn new(&mut dyn FnMut(Function, Function) -> ()) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Promise` with the provided executor `cb`","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":232694,"byte_end":232709,"line_start":4740,"line_end":4740,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":232694,"byte_end":232709,"line_start":4740,"line_end":4740,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5616},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":234687,"byte_end":234690,"line_start":4777,"line_end":4777,"column_start":12,"column_end":15},"name":"all","qualname":"<Promise>::all","value":"pub fn all(&JsValue) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `Promise.all(iterable)` method returns a single `Promise` that\n resolves when all of the promises in the iterable argument have resolved\n or when the iterable argument contains no promises. It rejects with the\n reason of the first promise that rejects.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":232694,"byte_end":232709,"line_start":4740,"line_end":4740,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":232694,"byte_end":232709,"line_start":4740,"line_end":4740,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5619},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":235124,"byte_end":235128,"line_start":4785,"line_end":4785,"column_start":12,"column_end":16},"name":"race","qualname":"<Promise>::race","value":"pub fn race(&JsValue) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `Promise.race(iterable)` method returns a promise that resolves or\n rejects as soon as one of the promises in the iterable resolves or\n rejects, with the value or reason from that promise.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":232694,"byte_end":232709,"line_start":4740,"line_end":4740,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":232694,"byte_end":232709,"line_start":4740,"line_end":4740,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5622},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":235468,"byte_end":235474,"line_start":4792,"line_end":4792,"column_start":12,"column_end":18},"name":"reject","qualname":"<Promise>::reject","value":"pub fn reject(&JsValue) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `Promise.reject(reason)` method returns a `Promise` object that is\n rejected with the given reason.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":232694,"byte_end":232709,"line_start":4740,"line_end":4740,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":232694,"byte_end":232709,"line_start":4740,"line_end":4740,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5625},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":236090,"byte_end":236097,"line_start":4802,"line_end":4802,"column_start":12,"column_end":19},"name":"resolve","qualname":"<Promise>::resolve","value":"pub fn resolve(&JsValue) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `Promise.resolve(value)` method returns a `Promise` object that is\n resolved with the given value. If the value is a promise, that promise\n is returned; if the value is a thenable (i.e. has a \"then\" method), the\n returned promise will \"follow\" that thenable, adopting its eventual\n state; otherwise the returned promise will be fulfilled with the value.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":232694,"byte_end":232709,"line_start":4740,"line_end":4740,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":232694,"byte_end":232709,"line_start":4740,"line_end":4740,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5628},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":236581,"byte_end":236586,"line_start":4811,"line_end":4811,"column_start":12,"column_end":17},"name":"catch","qualname":"<Promise>::catch","value":"pub fn catch(&Self, &Closure<dyn FnMut(JsValue) -> ()>) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `catch()` method returns a `Promise` and deals with rejected cases\n only.  It behaves the same as calling `Promise.prototype.then(undefined,\n onRejected)` (in fact, calling `obj.catch(onRejected)` internally calls\n `obj.then(undefined, onRejected)`).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":232694,"byte_end":232709,"line_start":4740,"line_end":4740,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":232694,"byte_end":232709,"line_start":4740,"line_end":4740,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5631},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":236978,"byte_end":236982,"line_start":4818,"line_end":4818,"column_start":12,"column_end":16},"name":"then","qualname":"<Promise>::then","value":"pub fn then(&Self, &Closure<dyn FnMut(JsValue) -> ()>) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `then()` method returns a `Promise`. It takes up to two arguments:\n callback functions for the success and failure cases of the `Promise`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":232694,"byte_end":232709,"line_start":4740,"line_end":4740,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":232694,"byte_end":232709,"line_start":4740,"line_end":4740,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5634},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":237160,"byte_end":237165,"line_start":4822,"line_end":4822,"column_start":12,"column_end":17},"name":"then2","qualname":"<Promise>::then2","value":"pub fn then2(&Self, &Closure<dyn FnMut(JsValue) -> ()>,\n             &Closure<dyn FnMut(JsValue) -> ()>) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" Same as `then`, only with both arguments provided.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":232694,"byte_end":232709,"line_start":4740,"line_end":4740,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":232694,"byte_end":232709,"line_start":4740,"line_end":4740,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5637},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":237941,"byte_end":237948,"line_start":4839,"line_end":4839,"column_start":12,"column_end":19},"name":"finally","qualname":"<Promise>::finally","value":"pub fn finally(&Self, &Closure<dyn FnMut() -> ()>) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `finally()` method returns a `Promise`. When the promise is settled,\n whether fulfilled or rejected, the specified callback function is\n executed. This provides a way for code that must be executed once the\n `Promise` has been dealt with to be run whether the promise was\n fulfilled successfully or rejected.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":232694,"byte_end":232709,"line_start":4740,"line_end":4740,"column_start":1,"column_end":16}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":232694,"byte_end":232709,"line_start":4740,"line_end":4740,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":175},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":238172,"byte_end":238178,"line_start":4846,"line_end":4846,"column_start":8,"column_end":14},"name":"global","qualname":"::global","value":"pub fn global() -> Object","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the global scope object.","sig":null,"attributes":[{"value":"/ Returns a handle to the global scope object.","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":238007,"byte_end":238055,"line_start":4842,"line_end":4842,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":238056,"byte_end":238059,"line_start":4843,"line_end":4843,"column_start":1,"column_end":4}},{"value":"/ This allows access to the global properties and global names by accessing","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":238060,"byte_end":238137,"line_start":4844,"line_end":4844,"column_start":1,"column_end":78}},{"value":"/ the `Object` returned.","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":238138,"byte_end":238164,"line_start":4845,"line_end":4845,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":5975},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":251867,"byte_end":251876,"line_start":5160,"line_end":5160,"column_start":5,"column_end":14},"name":"Int8Array","qualname":"::Int8Array","value":"Int8Array {  }","parent":null,"children":[{"krate":0,"index":5976}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":241606,"byte_end":241621,"line_start":4925,"line_end":4925,"column_start":9,"column_end":24}},{"value":"repr(transparent)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":241606,"byte_end":241621,"line_start":4925,"line_end":4925,"column_start":9,"column_end":24}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":241606,"byte_end":241621,"line_start":4925,"line_end":4925,"column_start":9,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":6111},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":252010,"byte_end":252020,"line_start":5164,"line_end":5164,"column_start":5,"column_end":15},"name":"Int16Array","qualname":"::Int16Array","value":"Int16Array {  }","parent":null,"children":[{"krate":0,"index":6112}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":241606,"byte_end":241621,"line_start":4925,"line_end":4925,"column_start":9,"column_end":24}},{"value":"repr(transparent)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":241606,"byte_end":241621,"line_start":4925,"line_end":4925,"column_start":9,"column_end":24}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":241606,"byte_end":241621,"line_start":4925,"line_end":4925,"column_start":9,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":6247},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":252155,"byte_end":252165,"line_start":5168,"line_end":5168,"column_start":5,"column_end":15},"name":"Int32Array","qualname":"::Int32Array","value":"Int32Array {  }","parent":null,"children":[{"krate":0,"index":6248}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":241606,"byte_end":241621,"line_start":4925,"line_end":4925,"column_start":9,"column_end":24}},{"value":"repr(transparent)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":241606,"byte_end":241621,"line_start":4925,"line_end":4925,"column_start":9,"column_end":24}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":241606,"byte_end":241621,"line_start":4925,"line_end":4925,"column_start":9,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":6383},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":252300,"byte_end":252310,"line_start":5172,"line_end":5172,"column_start":5,"column_end":15},"name":"Uint8Array","qualname":"::Uint8Array","value":"Uint8Array {  }","parent":null,"children":[{"krate":0,"index":6384}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":241606,"byte_end":241621,"line_start":4925,"line_end":4925,"column_start":9,"column_end":24}},{"value":"repr(transparent)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":241606,"byte_end":241621,"line_start":4925,"line_end":4925,"column_start":9,"column_end":24}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":241606,"byte_end":241621,"line_start":4925,"line_end":4925,"column_start":9,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":6519},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":252458,"byte_end":252475,"line_start":5176,"line_end":5176,"column_start":5,"column_end":22},"name":"Uint8ClampedArray","qualname":"::Uint8ClampedArray","value":"Uint8ClampedArray {  }","parent":null,"children":[{"krate":0,"index":6520}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":241606,"byte_end":241621,"line_start":4925,"line_end":4925,"column_start":9,"column_end":24}},{"value":"repr(transparent)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":241606,"byte_end":241621,"line_start":4925,"line_end":4925,"column_start":9,"column_end":24}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":241606,"byte_end":241621,"line_start":4925,"line_end":4925,"column_start":9,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":6655},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":252611,"byte_end":252622,"line_start":5180,"line_end":5180,"column_start":5,"column_end":16},"name":"Uint16Array","qualname":"::Uint16Array","value":"Uint16Array {  }","parent":null,"children":[{"krate":0,"index":6656}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":241606,"byte_end":241621,"line_start":4925,"line_end":4925,"column_start":9,"column_end":24}},{"value":"repr(transparent)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":241606,"byte_end":241621,"line_start":4925,"line_end":4925,"column_start":9,"column_end":24}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":241606,"byte_end":241621,"line_start":4925,"line_end":4925,"column_start":9,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":6791},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":252759,"byte_end":252770,"line_start":5184,"line_end":5184,"column_start":5,"column_end":16},"name":"Uint32Array","qualname":"::Uint32Array","value":"Uint32Array {  }","parent":null,"children":[{"krate":0,"index":6792}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":241606,"byte_end":241621,"line_start":4925,"line_end":4925,"column_start":9,"column_end":24}},{"value":"repr(transparent)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":241606,"byte_end":241621,"line_start":4925,"line_end":4925,"column_start":9,"column_end":24}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":241606,"byte_end":241621,"line_start":4925,"line_end":4925,"column_start":9,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":6927},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":252909,"byte_end":252921,"line_start":5188,"line_end":5188,"column_start":5,"column_end":17},"name":"Float32Array","qualname":"::Float32Array","value":"Float32Array {  }","parent":null,"children":[{"krate":0,"index":6928}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":241606,"byte_end":241621,"line_start":4925,"line_end":4925,"column_start":9,"column_end":24}},{"value":"repr(transparent)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":241606,"byte_end":241621,"line_start":4925,"line_end":4925,"column_start":9,"column_end":24}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":241606,"byte_end":241621,"line_start":4925,"line_end":4925,"column_start":9,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":7063},"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":253060,"byte_end":253072,"line_start":5192,"line_end":5192,"column_start":5,"column_end":17},"name":"Float64Array","qualname":"::Float64Array","value":"Float64Array {  }","parent":null,"children":[{"krate":0,"index":7064}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":241606,"byte_end":241621,"line_start":4925,"line_end":4925,"column_start":9,"column_end":24}},{"value":"repr(transparent)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":241606,"byte_end":241621,"line_start":4925,"line_end":4925,"column_start":9,"column_end":24}},{"value":"allow(clippy :: all)","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":241606,"byte_end":241621,"line_start":4925,"line_end":4925,"column_start":9,"column_end":24}}]}],"impls":[{"id":55,"kind":"Direct","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":22205,"byte_end":22214,"line_start":438,"line_end":438,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":22527,"byte_end":22536,"line_start":452,"line_end":452,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":22723,"byte_end":22732,"line_start":459,"line_end":459,"column_start":39,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":22783,"byte_end":22792,"line_start":461,"line_end":461,"column_start":43,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":22806,"byte_end":22811,"line_start":463,"line_end":463,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":23411,"byte_end":23416,"line_start":487,"line_end":487,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":23685,"byte_end":23690,"line_start":505,"line_end":505,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":38600,"byte_end":38607,"line_start":799,"line_end":799,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":38853,"byte_end":38860,"line_start":813,"line_end":813,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":38981,"byte_end":38988,"line_start":820,"line_end":820,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39107,"byte_end":39114,"line_start":826,"line_end":826,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":62021,"byte_end":62029,"line_start":1256,"line_end":1256,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":62422,"byte_end":62430,"line_start":1268,"line_end":1268,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":66949,"byte_end":66952,"line_start":1371,"line_end":1371,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Inherent","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":68971,"byte_end":68979,"line_start":1422,"line_end":1422,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":71042,"byte_end":71046,"line_start":1493,"line_end":1493,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":79},{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":71207,"byte_end":71215,"line_start":1501,"line_end":1501,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":71454,"byte_end":71462,"line_start":1513,"line_end":1513,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Inherent","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":71603,"byte_end":71612,"line_start":1521,"line_end":1521,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Inherent","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":91636,"byte_end":91642,"line_start":1940,"line_end":1940,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94384,"byte_end":94390,"line_start":2003,"line_end":2003,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94509,"byte_end":94515,"line_start":2009,"line_end":2009,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Inherent","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":131474,"byte_end":131480,"line_start":2701,"line_end":2701,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Direct","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":131871,"byte_end":131877,"line_start":2716,"line_end":2716,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":132008,"byte_end":132014,"line_start":2723,"line_end":2723,"column_start":13,"column_end":19},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":132036,"byte_end":132042,"line_start":2725,"line_end":2725,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":601,"kind":"Direct","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":154920,"byte_end":154923,"line_start":3201,"line_end":3201,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":675,"kind":"Direct","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":160757,"byte_end":160764,"line_start":3339,"line_end":3339,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":694,"kind":"Direct","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":162228,"byte_end":162235,"line_start":3379,"line_end":3379,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":901,"kind":"Inherent","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":208380,"byte_end":208388,"line_start":4222,"line_end":4222,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":133},{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":902,"kind":"Direct","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":211256,"byte_end":211264,"line_start":4295,"line_end":4295,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":903,"kind":"Direct","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":211384,"byte_end":211392,"line_start":4301,"line_end":4301,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":904,"kind":"Direct","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":211529,"byte_end":211537,"line_start":4307,"line_end":4307,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":905,"kind":"Direct","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":211681,"byte_end":211689,"line_start":4313,"line_end":4313,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":906,"kind":"Direct","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":211829,"byte_end":211837,"line_start":4319,"line_end":4319,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":907,"kind":"Direct","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":211963,"byte_end":211971,"line_start":4325,"line_end":4325,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":908,"kind":"Direct","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":212060,"byte_end":212068,"line_start":4331,"line_end":4331,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":909,"kind":"Direct","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":212217,"byte_end":212223,"line_start":4338,"line_end":4338,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":910,"kind":"Direct","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":212339,"byte_end":212345,"line_start":4344,"line_end":4344,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":911,"kind":"Direct","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":212435,"byte_end":212443,"line_start":4350,"line_end":4350,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":912,"kind":"Direct","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":212570,"byte_end":212578,"line_start":4356,"line_end":4356,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":959,"kind":"Direct","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":223182,"byte_end":223190,"line_start":4559,"line_end":4559,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":979,"kind":"Direct","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":226510,"byte_end":226524,"line_start":4619,"line_end":4619,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":999,"kind":"Direct","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":229755,"byte_end":229767,"line_start":4678,"line_end":4678,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":1018,"kind":"Direct","span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":232474,"byte_end":232485,"line_start":4729,"line_end":4729,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":22205,"byte_end":22214,"line_start":438,"line_end":438,"column_start":34,"column_end":43},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":424},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":22527,"byte_end":22536,"line_start":452,"line_end":452,"column_start":45,"column_end":54},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":424},"to":{"krate":2,"index":7174}},{"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":22723,"byte_end":22732,"line_start":459,"line_end":459,"column_start":39,"column_end":48},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":424},"to":{"krate":2,"index":7586}},{"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":22783,"byte_end":22792,"line_start":461,"line_end":461,"column_start":43,"column_end":52},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":424},"to":{"krate":2,"index":7199}},{"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":22806,"byte_end":22811,"line_start":463,"line_end":463,"column_start":6,"column_end":11},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":23411,"byte_end":23416,"line_start":487,"line_end":487,"column_start":40,"column_end":45},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":7143}},{"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":23685,"byte_end":23690,"line_start":505,"line_end":505,"column_start":18,"column_end":23},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":38600,"byte_end":38607,"line_start":799,"line_end":799,"column_start":21,"column_end":28},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":780},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":38853,"byte_end":38860,"line_start":813,"line_end":813,"column_start":26,"column_end":33},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":780},"to":{"krate":2,"index":2504}},{"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":38981,"byte_end":38988,"line_start":820,"line_end":820,"column_start":21,"column_end":28},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":780},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":39107,"byte_end":39114,"line_start":826,"line_end":826,"column_start":18,"column_end":25},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":780},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":62021,"byte_end":62029,"line_start":1256,"line_end":1256,"column_start":6,"column_end":14},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":1343},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":62422,"byte_end":62430,"line_start":1268,"line_end":1268,"column_start":18,"column_end":26},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":1343},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":66949,"byte_end":66952,"line_start":1371,"line_end":1371,"column_start":18,"column_end":21},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":1572},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":68971,"byte_end":68979,"line_start":1422,"line_end":1422,"column_start":6,"column_end":14},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":1673},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":71042,"byte_end":71046,"line_start":1493,"line_end":1493,"column_start":34,"column_end":38},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":63},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":71207,"byte_end":71215,"line_start":1501,"line_end":1501,"column_start":23,"column_end":31},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":1673},"to":{"krate":2,"index":7147}},{"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":71454,"byte_end":71462,"line_start":1513,"line_end":1513,"column_start":30,"column_end":38},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":67},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":71603,"byte_end":71612,"line_start":1521,"line_end":1521,"column_start":6,"column_end":15},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":70},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":91636,"byte_end":91642,"line_start":1940,"line_end":1940,"column_start":6,"column_end":12},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":2143},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94384,"byte_end":94390,"line_start":2003,"line_end":2003,"column_start":21,"column_end":27},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":2143},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":94509,"byte_end":94515,"line_start":2009,"line_end":2009,"column_start":18,"column_end":24},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":2143},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":131474,"byte_end":131480,"line_start":2701,"line_end":2701,"column_start":6,"column_end":12},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":2619},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":131871,"byte_end":131877,"line_start":2716,"line_end":2716,"column_start":20,"column_end":26},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":2619},"to":{"krate":2,"index":2504}},{"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":132008,"byte_end":132014,"line_start":2723,"line_end":2723,"column_start":13,"column_end":19},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":2619},"to":{"krate":2,"index":2509}},{"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":132036,"byte_end":132042,"line_start":2725,"line_end":2725,"column_start":18,"column_end":24},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":2619},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":154920,"byte_end":154923,"line_start":3201,"line_end":3201,"column_start":18,"column_end":21},"kind":{"Impl":{"id":601}},"from":{"krate":0,"index":3260},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":160757,"byte_end":160764,"line_start":3339,"line_end":3339,"column_start":18,"column_end":25},"kind":{"Impl":{"id":675}},"from":{"krate":0,"index":3715},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":162228,"byte_end":162235,"line_start":3379,"line_end":3379,"column_start":18,"column_end":25},"kind":{"Impl":{"id":694}},"from":{"krate":0,"index":3825},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":208380,"byte_end":208388,"line_start":4222,"line_end":4222,"column_start":6,"column_end":14},"kind":{"Impl":{"id":901}},"from":{"krate":0,"index":4966},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":211256,"byte_end":211264,"line_start":4295,"line_end":4295,"column_start":25,"column_end":33},"kind":{"Impl":{"id":902}},"from":{"krate":0,"index":4966},"to":{"krate":2,"index":2504}},{"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":211384,"byte_end":211392,"line_start":4301,"line_end":4301,"column_start":33,"column_end":41},"kind":{"Impl":{"id":903}},"from":{"krate":0,"index":4966},"to":{"krate":2,"index":2504}},{"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":211529,"byte_end":211537,"line_start":4307,"line_end":4307,"column_start":28,"column_end":36},"kind":{"Impl":{"id":904}},"from":{"krate":0,"index":4966},"to":{"krate":2,"index":2504}},{"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":211681,"byte_end":211689,"line_start":4313,"line_end":4313,"column_start":36,"column_end":44},"kind":{"Impl":{"id":905}},"from":{"krate":0,"index":4966},"to":{"krate":2,"index":2504}},{"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":211829,"byte_end":211837,"line_start":4319,"line_end":4319,"column_start":28,"column_end":36},"kind":{"Impl":{"id":906}},"from":{"krate":0,"index":4966},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":211963,"byte_end":211971,"line_start":4325,"line_end":4325,"column_start":23,"column_end":31},"kind":{"Impl":{"id":907}},"from":{"krate":0,"index":4966},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":212060,"byte_end":212068,"line_start":4331,"line_end":4331,"column_start":21,"column_end":29},"kind":{"Impl":{"id":908}},"from":{"krate":0,"index":4966},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":212217,"byte_end":212223,"line_start":4338,"line_end":4338,"column_start":33,"column_end":39},"kind":{"Impl":{"id":909}},"from":{"krate":5,"index":7286},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":212339,"byte_end":212345,"line_start":4344,"line_end":4344,"column_start":25,"column_end":31},"kind":{"Impl":{"id":910}},"from":{"krate":5,"index":7286},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":212435,"byte_end":212443,"line_start":4350,"line_end":4350,"column_start":21,"column_end":29},"kind":{"Impl":{"id":911}},"from":{"krate":0,"index":4966},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":212570,"byte_end":212578,"line_start":4356,"line_end":4356,"column_start":23,"column_end":31},"kind":{"Impl":{"id":912}},"from":{"krate":0,"index":4966},"to":{"krate":2,"index":11370}},{"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":223182,"byte_end":223190,"line_start":4559,"line_end":4559,"column_start":22,"column_end":30},"kind":{"Impl":{"id":959}},"from":{"krate":0,"index":5206},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":226510,"byte_end":226524,"line_start":4619,"line_end":4619,"column_start":22,"column_end":36},"kind":{"Impl":{"id":979}},"from":{"krate":0,"index":5312},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":229755,"byte_end":229767,"line_start":4678,"line_end":4678,"column_start":22,"column_end":34},"kind":{"Impl":{"id":999}},"from":{"krate":0,"index":5418},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/ryosukesatoh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.52/src/lib.rs","byte_start":232474,"byte_end":232485,"line_start":4729,"line_end":4729,"column_start":22,"column_end":33},"kind":{"Impl":{"id":1018}},"from":{"krate":0,"index":5521},"to":{"krate":2,"index":2831}}]}